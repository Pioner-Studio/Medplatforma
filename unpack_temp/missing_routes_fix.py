#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –≤ main.py
"""

import re
import os


def add_missing_routes():
    print("üîß –î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–ï–î–û–°–¢–ê–Æ–©–ò–• –ú–ê–†–®–†–£–¢–û–í")
    print("=" * 60)

    main_py_path = "main.py"

    if not os.path.exists(main_py_path):
        print("‚ùå –§–∞–π–ª main.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

    # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π main.py
    with open(main_py_path, "r", encoding="utf-8") as f:
        content = f.read()

    # –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    new_routes = '''
# === –ù–ï–î–û–°–¢–ê–Æ–©–ò–ï –ú–ê–†–®–†–£–¢–´ ===

@app.route('/add_patient', methods=['GET', 'POST'])
def add_patient():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞"""
    if request.method == 'POST':
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
            patient_data = {
                'name': request.form.get('name', '').strip(),
                'phone': request.form.get('phone', '').strip(),
                'email': request.form.get('email', '').strip(),
                'birth_date': request.form.get('birth_date', '').strip(),
                'address': request.form.get('address', '').strip(),
                'notes': request.form.get('notes', '').strip(),
                'created_at': datetime.now(),
                'updated_at': datetime.now()
            }

            # –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
            if not patient_data['name']:
                flash('–ò–º—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è', 'error')
                return render_template('add_patient.html', patient=patient_data)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            if patient_data['phone'] and db.patients.find_one({'phone': patient_data['phone']}):
                flash('–ü–∞—Ü–∏–µ–Ω—Ç —Å —Ç–∞–∫–∏–º —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç', 'error')
                return render_template('add_patient.html', patient=patient_data)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
            result = db.patients.insert_one(patient_data)
            patient_id = str(result.inserted_id)

            flash('–ü–∞—Ü–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!', 'success')
            return redirect(f'/patients/{patient_id}')

        except Exception as e:
            flash(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞: {str(e)}', 'error')
            return render_template('add_patient.html', patient=patient_data)

    # GET –∑–∞–ø—Ä–æ—Å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
    return render_template('add_patient.html')

@app.route('/add_service', methods=['GET', 'POST'])
def add_service():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —É—Å–ª—É–≥–∏"""
    if request.method == 'POST':
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
            service_data = {
                'name': request.form.get('name', '').strip(),
                'price': float(request.form.get('price', 0)),
                'duration': int(request.form.get('duration', 30)),
                'description': request.form.get('description', '').strip(),
                'category': request.form.get('category', '–û–±—â–∏–µ').strip(),
                'active': True,
                'created_at': datetime.now(),
                'updated_at': datetime.now()
            }

            # –í–∞–ª–∏–¥–∞—Ü–∏—è
            if not service_data['name']:
                flash('–ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è', 'error')
                return render_template('add_service.html', service=service_data)

            if service_data['price'] <= 0:
                flash('–¶–µ–Ω–∞ —É—Å–ª—É–≥–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0', 'error')
                return render_template('add_service.html', service=service_data)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è
            if db.services.find_one({'name': service_data['name']}):
                flash('–£—Å–ª—É–≥–∞ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç', 'error')
                return render_template('add_service.html', service=service_data)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
            result = db.services.insert_one(service_data)

            flash('–£—Å–ª—É–≥–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!', 'success')
            return redirect('/services')

        except ValueError as e:
            flash('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ü–µ–Ω—ã –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏', 'error')
            return render_template('add_service.html', service=service_data)
        except Exception as e:
            flash(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —É—Å–ª—É–≥–∏: {str(e)}', 'error')
            return render_template('add_service.html', service=service_data)

    # GET –∑–∞–ø—Ä–æ—Å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
    categories = ['–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏', '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞', '–õ–µ—á–µ–Ω–∏–µ', '–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞', '–û–±—â–∏–µ']
    return render_template('add_service.html', categories=categories)

@app.route('/edit_patient/<patient_id>', methods=['GET', 'POST'])
def edit_patient(patient_id):
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–∞"""
    try:
        from bson import ObjectId
        patient = db.patients.find_one({'_id': ObjectId(patient_id)})

        if not patient:
            flash('–ü–∞—Ü–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error')
            return redirect('/patients')

        if request.method == 'POST':
            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞
            update_data = {
                'name': request.form.get('name', '').strip(),
                'phone': request.form.get('phone', '').strip(),
                'email': request.form.get('email', '').strip(),
                'birth_date': request.form.get('birth_date', '').strip(),
                'address': request.form.get('address', '').strip(),
                'notes': request.form.get('notes', '').strip(),
                'updated_at': datetime.now()
            }

            # –í–∞–ª–∏–¥–∞—Ü–∏—è
            if not update_data['name']:
                flash('–ò–º—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è', 'error')
                return render_template('edit_patient.html', patient=patient)

            # –û–±–Ω–æ–≤–ª—è–µ–º –≤ –ë–î
            db.patients.update_one(
                {'_id': ObjectId(patient_id)},
                {'$set': update_data}
            )

            flash('–î–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!', 'success')
            return redirect(f'/patients/{patient_id}')

        # GET –∑–∞–ø—Ä–æ—Å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        return render_template('edit_patient.html', patient=patient)

    except Exception as e:
        flash(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞: {str(e)}', 'error')
        return redirect('/patients')

@app.route('/rooms')
def rooms():
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–∞–º–∏"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞–±–∏–Ω–µ—Ç—ã
        rooms_list = list(db.rooms.find().sort('number', 1))

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–∞–±–∏–Ω–µ—Ç–æ–≤
        for room in rooms_list:
            # –°—á–∏—Ç–∞–µ–º –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
            today = datetime.now().strftime('%Y-%m-%d')
            room['today_appointments'] = db.appointments.count_documents({
                'room_id': str(room['_id']),
                'date': today
            })

            # –°–ª–µ–¥—É—é—â–∞—è –¥–æ—Å—Ç—É–ø–Ω–∞—è –∑–∞–ø–∏—Å—å
            next_appointment = db.appointments.find_one({
                'room_id': str(room['_id']),
                'date': {'$gte': today}
            }, sort=[('date', 1), ('time', 1)])

            room['next_appointment'] = next_appointment

        return render_template('rooms.html', rooms=rooms_list)

    except Exception as e:
        flash(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞–±–∏–Ω–µ—Ç–æ–≤: {str(e)}', 'error')
        return render_template('rooms.html', rooms=[])

@app.route('/reports')
def reports():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç—á–µ—Ç–æ–≤"""
    try:
        # –ë–∞–∑–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
        today = datetime.now()
        month_start = today.replace(day=1).strftime('%Y-%m-%d')
        month_end = today.strftime('%Y-%m-%d')

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø–∏—Å–µ–π
        total_appointments = db.appointments.count_documents({
            'date': {'$gte': month_start, '$lte': month_end}
        })

        completed_appointments = db.appointments.count_documents({
            'date': {'$gte': month_start, '$lte': month_end},
            'status': 'completed'
        })

        # –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        total_revenue = 0
        revenue_pipeline = [
            {'$match': {
                'date': {'$gte': month_start, '$lte': month_end},
                'type': 'income'
            }},
            {'$group': {'_id': None, 'total': {'$sum': '$amount'}}}
        ]

        revenue_result = list(db.ledger.aggregate(revenue_pipeline))
        if revenue_result:
            total_revenue = revenue_result[0]['total']

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Ä–∞—á–∞–º
        doctors_stats = []
        doctors = list(db.doctors.find({'active': True}))

        for doctor in doctors:
            doctor_appointments = db.appointments.count_documents({
                'doctor_id': str(doctor['_id']),
                'date': {'$gte': month_start, '$lte': month_end}
            })

            doctor_revenue = 0
            doctor_revenue_result = list(db.ledger.aggregate([
                {'$match': {
                    'doctor_id': str(doctor['_id']),
                    'date': {'$gte': month_start, '$lte': month_end},
                    'type': 'income'
                }},
                {'$group': {'_id': None, 'total': {'$sum': '$amount'}}}
            ]))

            if doctor_revenue_result:
                doctor_revenue = doctor_revenue_result[0]['total']

            doctors_stats.append({
                'name': doctor['name'],
                'appointments': doctor_appointments,
                'revenue': doctor_revenue
            })

        stats = {
            'period': f"{month_start} - {month_end}",
            'total_appointments': total_appointments,
            'completed_appointments': completed_appointments,
            'completion_rate': round((completed_appointments / total_appointments * 100) if total_appointments > 0 else 0, 1),
            'total_revenue': total_revenue,
            'doctors_stats': doctors_stats
        }

        return render_template('reports.html', stats=stats)

    except Exception as e:
        flash(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–æ–≤: {str(e)}', 'error')
        return render_template('reports.html', stats={})

# === –ö–û–ù–ï–¶ –ù–ï–î–û–°–¢–ê–Æ–©–ò–• –ú–ê–†–®–†–£–¢–û–í ===
'''

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —ç—Ç–∏ –º–∞—Ä—à—Ä—É—Ç—ã
    if "/add_patient" in content and "/add_service" in content:
        print("‚úÖ –ú–∞—Ä—à—Ä—É—Ç—ã —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        return True

    # –ù–∞–π–¥–µ–º –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ (–ø–µ—Ä–µ–¥ if __name__ == '__main__':)
    pattern = r'(if __name__ == ["\']__main__["\']:.*)'
    match = re.search(pattern, content, re.DOTALL)

    if match:
        # –í—Å—Ç–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç—ã –ø–µ—Ä–µ–¥ –≥–ª–∞–≤–Ω—ã–º –±–ª–æ–∫–æ–º
        content = content.replace(match.group(1), new_routes + "\n\n" + match.group(1))
    else:
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –≥–ª–∞–≤–Ω—ã–π –±–ª–æ–∫, –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü
        content += new_routes

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open(main_py_path, "w", encoding="utf-8") as f:
        f.write(content)

    print("‚úÖ –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã:")
    print("   - /add_patient (GET, POST)")
    print("   - /add_service (GET, POST)")
    print("   - /edit_patient/<id> (GET, POST)")
    print("   - /rooms (GET)")
    print("   - /reports (GET)")

    return True


def create_missing_templates():
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤"""
    print("\n--- –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤ ---")

    templates_dir = "templates"
    if not os.path.exists(templates_dir):
        os.makedirs(templates_dir)

    # –®–∞–±–ª–æ–Ω –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞
    add_patient_template = """{% extends "base.html" %}
{% set page_title = "–î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞" %}

{% block content %}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header">
                    <h3>–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞</h3>
                </div>
                <div class="card-body">
                    <form method="POST">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label for="name">–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è *</label>
                                    <input type="text" class="form-control" id="name" name="name"
                                           value="{{ patient.name if patient else '' }}" required>
                                </div>

                                <div class="form-group mb-3">
                                    <label for="phone">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                                    <input type="tel" class="form-control" id="phone" name="phone"
                                           value="{{ patient.phone if patient else '' }}"
                                           placeholder="+7 (999) 123-45-67">
                                </div>

                                <div class="form-group mb-3">
                                    <label for="email">Email</label>
                                    <input type="email" class="form-control" id="email" name="email"
                                           value="{{ patient.email if patient else '' }}">
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label for="birth_date">–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è</label>
                                    <input type="date" class="form-control" id="birth_date" name="birth_date"
                                           value="{{ patient.birth_date if patient else '' }}">
                                </div>

                                <div class="form-group mb-3">
                                    <label for="address">–ê–¥—Ä–µ—Å</label>
                                    <textarea class="form-control" id="address" name="address" rows="2">{{ patient.address if patient else '' }}</textarea>
                                </div>

                                <div class="form-group mb-3">
                                    <label for="notes">–ü—Ä–∏–º–µ—á–∞–Ω–∏—è</label>
                                    <textarea class="form-control" id="notes" name="notes" rows="2">{{ patient.notes if patient else '' }}</textarea>
                                </div>
                            </div>
                        </div>

                        <div class="text-center mt-4">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞
                            </button>
                            <a href="/patients" class="btn btn-secondary ms-2">
                                <i class="fas fa-times"></i> –û—Ç–º–µ–Ω–∞
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}"""

    # –®–∞–±–ª–æ–Ω –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—Å–ª—É–≥–∏
    add_service_template = """{% extends "base.html" %}
{% set page_title = "–î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É" %}

{% block content %}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-6 offset-md-3">
            <div class="card">
                <div class="card-header">
                    <h3>–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —É—Å–ª—É–≥—É</h3>
                </div>
                <div class="card-body">
                    <form method="POST">
                        <div class="form-group mb-3">
                            <label for="name">–ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏ *</label>
                            <input type="text" class="form-control" id="name" name="name"
                                   value="{{ service.name if service else '' }}" required>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label for="price">–¶–µ–Ω–∞ (—Ä—É–±.) *</label>
                                    <input type="number" class="form-control" id="price" name="price"
                                           value="{{ service.price if service else '' }}"
                                           min="0" step="0.01" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label for="duration">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–º–∏–Ω)</label>
                                    <input type="number" class="form-control" id="duration" name="duration"
                                           value="{{ service.duration if service else '30' }}"
                                           min="5" max="480">
                                </div>
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            <label for="category">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
                            <select class="form-control" id="category" name="category">
                                {% for cat in categories %}
                                <option value="{{ cat }}"
                                        {% if service and service.category == cat %}selected{% endif %}>
                                    {{ cat }}
                                </option>
                                {% endfor %}
                            </select>
                        </div>

                        <div class="form-group mb-3">
                            <label for="description">–û–ø–∏—Å–∞–Ω–∏–µ</label>
                            <textarea class="form-control" id="description" name="description" rows="3">{{ service.description if service else '' }}</textarea>
                        </div>

                        <div class="text-center mt-4">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —É—Å–ª—É–≥—É
                            </button>
                            <a href="/services" class="btn btn-secondary ms-2">
                                <i class="fas fa-times"></i> –û—Ç–º–µ–Ω–∞
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}"""

    # –®–∞–±–ª–æ–Ω —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞
    edit_patient_template = """{% extends "base.html" %}
{% set page_title = "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞" %}

{% block content %}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header">
                    <h3>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞: {{ patient.name }}</h3>
                </div>
                <div class="card-body">
                    <form method="POST">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label for="name">–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è *</label>
                                    <input type="text" class="form-control" id="name" name="name"
                                           value="{{ patient.name }}" required>
                                </div>

                                <div class="form-group mb-3">
                                    <label for="phone">–¢–µ–ª–µ—Ñ–æ–Ω</label>
                                    <input type="tel" class="form-control" id="phone" name="phone"
                                           value="{{ patient.phone or '' }}"
                                           placeholder="+7 (999) 123-45-67">
                                </div>

                                <div class="form-group mb-3">
                                    <label for="email">Email</label>
                                    <input type="email" class="form-control" id="email" name="email"
                                           value="{{ patient.email or '' }}">
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label for="birth_date">–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è</label>
                                    <input type="date" class="form-control" id="birth_date" name="birth_date"
                                           value="{{ patient.birth_date or '' }}">
                                </div>

                                <div class="form-group mb-3">
                                    <label for="address">–ê–¥—Ä–µ—Å</label>
                                    <textarea class="form-control" id="address" name="address" rows="2">{{ patient.address or '' }}</textarea>
                                </div>

                                <div class="form-group mb-3">
                                    <label for="notes">–ü—Ä–∏–º–µ—á–∞–Ω–∏—è</label>
                                    <textarea class="form-control" id="notes" name="notes" rows="2">{{ patient.notes or '' }}</textarea>
                                </div>
                            </div>
                        </div>

                        <div class="text-center mt-4">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                            </button>
                            <a href="/patients/{{ patient._id }}" class="btn btn-info ms-2">
                                <i class="fas fa-eye"></i> –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ä—Ç–æ—á–∫–∏
                            </a>
                            <a href="/patients" class="btn btn-secondary ms-2">
                                <i class="fas fa-times"></i> –û—Ç–º–µ–Ω–∞
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}"""

    # –®–∞–±–ª–æ–Ω –∫–∞–±–∏–Ω–µ—Ç–æ–≤
    rooms_template = """{% extends "base.html" %}
{% set page_title = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–∞–º–∏" %}

{% block content %}
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–∞–º–∏</h2>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addRoomModal">
            <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç
        </button>
    </div>

    <div class="row">
        {% for room in rooms %}
        <div class="col-md-6 col-lg-4 mb-4">
            <div class="card h-100">
                <div class="card-header d-flex justify-content-between">
                    <h5 class="mb-0">–ö–∞–±–∏–Ω–µ—Ç {{ room.number }}</h5>
                    <span class="badge bg-{{ 'success' if room.active else 'secondary' }}">
                        {{ '–ê–∫—Ç–∏–≤–Ω—ã–π' if room.active else '–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π' }}
                    </span>
                </div>
                <div class="card-body">
                    <p class="text-muted">{{ room.description or '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è' }}</p>

                    <div class="row text-center">
                        <div class="col-6">
                            <strong>{{ room.today_appointments }}</strong><br>
                            <small class="text-muted">–ó–∞–ø–∏—Å–µ–π —Å–µ–≥–æ–¥–Ω—è</small>
                        </div>
                        <div class="col-6">
                            {% if room.next_appointment %}
                            <strong>{{ room.next_appointment.time }}</strong><br>
                            <small class="text-muted">–°–ª–µ–¥—É—é—â–∞—è –∑–∞–ø–∏—Å—å</small>
                            {% else %}
                            <strong>‚Äî</strong><br>
                            <small class="text-muted">–°–≤–æ–±–æ–¥–µ–Ω</small>
                            {% endif %}
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <button class="btn btn-sm btn-outline-primary me-2">
                        <i class="fas fa-edit"></i> –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </button>
                    <button class="btn btn-sm btn-outline-info">
                        <i class="fas fa-calendar"></i> –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                    </button>
                </div>
            </div>
        </div>
        {% endfor %}
    </div>

    {% if not rooms %}
    <div class="text-center py-5">
        <i class="fas fa-door-open fa-3x text-muted mb-3"></i>
        <h4 class="text-muted">–ö–∞–±–∏–Ω–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h4>
        <p class="text-muted">–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π –∫–∞–±–∏–Ω–µ—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã</p>
    </div>
    {% endif %}
</div>
{% endblock %}"""

    # –®–∞–±–ª–æ–Ω –æ—Ç—á–µ—Ç–æ–≤
    reports_template = """{% extends "base.html" %}
{% set page_title = "–û—Ç—á–µ—Ç—ã" %}

{% block content %}
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>–û—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</h2>
        <div class="btn-group">
            <button class="btn btn-outline-primary">–¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü</button>
            <button class="btn btn-outline-secondary">–ü—Ä–æ—à–ª—ã–π –º–µ—Å—è—Ü</button>
            <button class="btn btn-outline-info">–ì–æ–¥</button>
        </div>
    </div>

    {% if stats %}
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card text-center">
                <div class="card-body">
                    <i class="fas fa-calendar-check fa-2x text-primary mb-3"></i>
                    <h4>{{ stats.total_appointments }}</h4>
                    <p class="text-muted">–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π</p>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card text-center">
                <div class="card-body">
                    <i class="fas fa-check-circle fa-2x text-success mb-3"></i>
                    <h4>{{ stats.completed_appointments }}</h4>
                    <p class="text-muted">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö</p>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card text-center">
                <div class="card-body">
                    <i class="fas fa-percentage fa-2x text-info mb-3"></i>
                    <h4>{{ stats.completion_rate }}%</h4>
                    <p class="text-muted">–ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è</p>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card text-center">
                <div class="card-body">
                    <i class="fas fa-ruble-sign fa-2x text-warning mb-3"></i>
                    <h4>{{ "{:,.0f}".format(stats.total_revenue) }}</h4>
                    <p class="text-muted">–î–æ—Ö–æ–¥ (—Ä—É–±.)</p>
                </div>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-header">
            <h5>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Ä–∞—á–∞–º ({{ stats.period }})</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>–í—Ä–∞—á</th>
                            <th>–ó–∞–ø–∏—Å–µ–π</th>
                            <th>–î–æ—Ö–æ–¥ (—Ä—É–±.)</th>
                            <th>–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for doctor in stats.doctors_stats %}
                        <tr>
                            <td>{{ doctor.name }}</td>
                            <td>{{ doctor.appointments }}</td>
                            <td>{{ "{:,.0f}".format(doctor.revenue) }}</td>
                            <td>
                                {% if doctor.appointments > 0 %}
                                {{ "{:,.0f}".format(doctor.revenue / doctor.appointments) }}
                                {% else %}
                                ‚Äî
                                {% endif %}
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    {% else %}
    <div class="text-center py-5">
        <i class="fas fa-chart-bar fa-3x text-muted mb-3"></i>
        <h4 class="text-muted">–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—á–µ—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</h4>
    </div>
    {% endif %}
</div>
{% endblock %}"""

    # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω—ã
    templates_to_create = [
        ("add_patient.html", add_patient_template),
        ("add_service.html", add_service_template),
        ("edit_patient.html", edit_patient_template),
        ("rooms.html", rooms_template),
        ("reports.html", reports_template),
    ]

    created_count = 0
    for filename, template_content in templates_to_create:
        template_path = os.path.join(templates_dir, filename)

        if not os.path.exists(template_path):
            with open(template_path, "w", encoding="utf-8") as f:
                f.write(template_content)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω: {filename}")
            created_count += 1
        else:
            print(f"‚ö†Ô∏è –®–∞–±–ª–æ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {filename}")

    print(f"\n‚úÖ –°–æ–∑–¥–∞–Ω–æ {created_count} –Ω–æ–≤—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤")
    return True


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ú–ï–î–ü–õ–ê–¢–§–û–†–ú–´")
    print("=" * 60)

    success = True

    # 1. –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã
    print("--- –≠—Ç–∞–ø 1: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤ ---")
    if not add_missing_routes():
        success = False

    # 2. –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —à–∞–±–ª–æ–Ω—ã
    print("\n--- –≠—Ç–∞–ø 2: –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ ---")
    if not create_missing_templates():
        success = False

    print("\n" + "=" * 60)
    if success:
        print("‚úÖ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–´!")
        print("\nüöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python main.py")
        print("2. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É (Gogueva/–ø–∞—Ä–æ–ª—å)")
        print("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–æ–≤—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:")
        print("   - /patients - —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤")
        print("   - /add_patient - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞")
        print("   - /services - —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥")
        print("   - /add_service - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∏")
        print("   - /rooms - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–∞–º–∏")
        print("   - /reports - –æ—Ç—á–µ—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞")
        print("\nüìã –î–õ–Ø –ü–û–õ–ù–û–ô –ì–û–¢–û–í–ù–û–°–¢–ò:")
        print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫ –≤ –º–µ–Ω—é")
        print("- –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π")
        print("- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("- –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–æ–ª–µ–≤—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤ production")
    else:
        print("‚ùå –í–û–ó–ù–ò–ö–õ–ò –û–®–ò–ë–ö–ò –ü–†–ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ò")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã–≤–æ–¥ –≤—ã—à–µ –∏ —É—Å—Ç—Ä–∞–Ω–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã")


if __name__ == "__main__":
    main()
