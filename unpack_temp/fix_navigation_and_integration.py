#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –º–µ–¥–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
"""

import os
import re


def fix_base_html_navigation():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ base.html"""
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ê–í–ò–ì–ê–¶–ò–ò –í BASE.HTML")
    print("=" * 50)

    base_html_path = "templates/base.html"

    if not os.path.exists(base_html_path):
        print("‚ùå –§–∞–π–ª base.html –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

    # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π base.html
    with open(base_html_path, "r", encoding="utf-8") as f:
        content = f.read()

    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_path = base_html_path + ".backup_nav"
    with open(backup_path, "w", encoding="utf-8") as f:
        f.write(content)
    print(f"üíæ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")

    # –ù–æ–≤–æ–µ –ª–µ–≤–æ–µ –º–µ–Ω—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏
    new_sidebar = """        <!-- Sidebar -->
        <nav class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
            <div class="position-sticky pt-3">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'calendar' else '' }}"
                           href="{{ url_for('calendar') }}">
                            <i class="fas fa-calendar-alt"></i> –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'patients' else '' }}"
                           href="{{ url_for('patients') }}">
                            <i class="fas fa-users"></i> –ü–∞—Ü–∏–µ–Ω—Ç—ã
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'doctors' else '' }}"
                           href="{{ url_for('doctors') }}">
                            <i class="fas fa-user-md"></i> –í—Ä–∞—á–∏
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'services' else '' }}"
                           href="{{ url_for('services') }}">
                            <i class="fas fa-list"></i> –£—Å–ª—É–≥–∏
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'rooms' else '' }}"
                           href="{{ url_for('rooms') }}">
                            <i class="fas fa-door-open"></i> –ö–∞–±–∏–Ω–µ—Ç—ã
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'finance' else '' }}"
                           href="{{ url_for('finance') }}">
                            <i class="fas fa-ruble-sign"></i> –§–∏–Ω–∞–Ω—Å—ã
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'reports' else '' }}"
                           href="{{ url_for('reports') }}">
                            <i class="fas fa-chart-bar"></i> –û—Ç—á–µ—Ç—ã
                        </a>
                    </li>

                    <!-- –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å -->
                    <hr class="my-3">

                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('logout') }}">
                            <i class="fas fa-sign-out-alt"></i> –í—ã—Ö–æ–¥
                        </a>
                    </li>
                </ul>

                <!-- –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ –º–µ–Ω—é (—Ç–æ–ª—å–∫–æ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ) -->
                {% if config.DEBUG %}
                <hr class="my-3">
                <h6 class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted">
                    <span>–û—Ç–ª–∞–¥–∫–∞</span>
                </h6>
                <ul class="nav flex-column mb-2">
                    <li class="nav-item">
                        <a class="nav-link" href="/debug/info">
                            <i class="fas fa-bug"></i> –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                        </a>
                    </li>
                </ul>
                {% endif %}
            </div>
        </nav>"""

    # –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä–æ–µ –º–µ–Ω—é –Ω–∞ –Ω–æ–≤–æ–µ
    sidebar_pattern = r'<nav class="col-md-3.*?</nav>'
    if re.search(sidebar_pattern, content, re.DOTALL):
        content = re.sub(sidebar_pattern, new_sidebar, content, flags=re.DOTALL)
        print("‚úÖ –õ–µ–≤–æ–µ –º–µ–Ω—é –æ–±–Ω–æ–≤–ª–µ–Ω–æ")
    else:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ª–µ–≤–æ–µ –º–µ–Ω—é –¥–ª—è –∑–∞–º–µ–Ω—ã")

    # –£–±–∏—Ä–∞–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω–æ–µ –º–µ–Ω—é –∏–∑ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
    debug_menu_pattern = r"<!-- –û–¢–õ–ê–î–û–ß–ù–û–ï –ú–ï–ù–Æ -->.*?<!-- –ö–û–ù–ï–¶ –û–¢–õ–ê–î–û–ß–ù–û–ì–û –ú–ï–ù–Æ -->"
    content = re.sub(debug_menu_pattern, "", content, flags=re.DOTALL)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open(base_html_path, "w", encoding="utf-8") as f:
        f.write(content)

    print("‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
    return True


def add_missing_routes_to_main():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –≤ main.py"""
    print("\nüîß –î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–ï–î–û–°–¢–ê–Æ–©–ò–• –ú–ê–†–®–†–£–¢–û–í")
    print("=" * 50)

    main_py_path = "main.py"

    if not os.path.exists(main_py_path):
        print("‚ùå –§–∞–π–ª main.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

    # –ß–∏—Ç–∞–µ–º main.py
    with open(main_py_path, "r", encoding="utf-8") as f:
        content = f.read()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã —É–∂–µ –µ—Å—Ç—å
    existing_routes = {
        "patients": "/patients" in content and "@app.route('/patients')" in content,
        "services": "/services" in content and "@app.route('/services')" in content,
        "doctors": "/doctors" in content and "@app.route('/doctors')" in content,
        "rooms": "/rooms" in content and "@app.route('/rooms')" in content,
        "reports": "/reports" in content and "@app.route('/reports')" in content,
        "finance": "def finance(" in content,
    }

    print("üìã –°—Ç–∞—Ç—É—Å –º–∞—Ä—à—Ä—É—Ç–æ–≤:")
    for route, exists in existing_routes.items():
        status = "‚úÖ" if exists else "‚ùå"
        print(f"   {status} {route}")

    # –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è (–µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç)
    new_routes = '''
# === –û–°–ù–û–í–ù–´–ï –°–¢–†–ê–ù–ò–¶–´ –ú–ï–î–ü–õ–ê–¢–§–û–†–ú–´ ===

@app.route('/patients')
def patients():
    """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
        patients_list = list(db.patients.find().sort('name', 1))

        # –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        for patient in patients_list:
            patient['appointments_count'] = db.appointments.count_documents({
                'patient_id': str(patient['_id'])
            })

            # –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å
            last_appointment = db.appointments.find_one({
                'patient_id': str(patient['_id'])
            }, sort=[('date', -1), ('time', -1)])

            patient['last_appointment'] = last_appointment

        return render_template('patients.html', patients=patients_list)

    except Exception as e:
        flash(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: {str(e)}', 'error')
        return render_template('patients.html', patients=[])

@app.route('/services')
def services():
    """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—Å–ª—É–≥"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Å–ª—É–≥–∏
        services_list = list(db.services.find({'active': True}).sort('name', 1))

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–∂–¥–æ–π —É—Å–ª—É–≥–µ
        for service in services_list:
            service['appointments_count'] = db.appointments.count_documents({
                'service_id': str(service['_id'])
            })

            # –î–æ—Ö–æ–¥ –æ—Ç —É—Å–ª—É–≥–∏
            revenue_pipeline = [
                {'$match': {
                    'service_id': str(service['_id']),
                    'type': 'income'
                }},
                {'$group': {'_id': None, 'total': {'$sum': '$amount'}}}
            ]

            revenue_result = list(db.ledger.aggregate(revenue_pipeline))
            service['total_revenue'] = revenue_result[0]['total'] if revenue_result else 0

        return render_template('services.html', services=services_list)

    except Exception as e:
        flash(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —É—Å–ª—É–≥: {str(e)}', 'error')
        return render_template('services.html', services=[])

@app.route('/doctors')
def doctors():
    """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤—Ä–∞—á–µ–π"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –≤—Ä–∞—á–µ–π
        doctors_list = list(db.doctors.find({'active': True}).sort('name', 1))

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–∂–¥–æ–º—É –≤—Ä–∞—á—É
        for doctor in doctors_list:
            doctor['appointments_count'] = db.appointments.count_documents({
                'doctor_id': str(doctor['_id'])
            })

            # –ó–∞–ø–∏—Å–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
            today = datetime.now().strftime('%Y-%m-%d')
            doctor['today_appointments'] = db.appointments.count_documents({
                'doctor_id': str(doctor['_id']),
                'date': today
            })

        return render_template('doctors.html', doctors=doctors_list)

    except Exception as e:
        flash(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤—Ä–∞—á–µ–π: {str(e)}', 'error')
        return render_template('doctors.html', doctors=[])

@app.route('/rooms')
def rooms():
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–∞–º–∏"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞–±–∏–Ω–µ—Ç—ã
        rooms_list = list(db.rooms.find().sort('number', 1))

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–∞–±–∏–Ω–µ—Ç–æ–≤
        for room in rooms_list:
            # –°—á–∏—Ç–∞–µ–º –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
            today = datetime.now().strftime('%Y-%m-%d')
            room['today_appointments'] = db.appointments.count_documents({
                'room_id': str(room['_id']),
                'date': today
            })

            # –°–ª–µ–¥—É—é—â–∞—è –¥–æ—Å—Ç—É–ø–Ω–∞—è –∑–∞–ø–∏—Å—å
            next_appointment = db.appointments.find_one({
                'room_id': str(room['_id']),
                'date': {'$gte': today}
            }, sort=[('date', 1), ('time', 1)])

            room['next_appointment'] = next_appointment

        return render_template('rooms.html', rooms=rooms_list)

    except Exception as e:
        flash(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞–±–∏–Ω–µ—Ç–æ–≤: {str(e)}', 'error')
        return render_template('rooms.html', rooms=[])

@app.route('/reports')
def reports():
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç—á–µ—Ç–æ–≤"""
    try:
        # –ë–∞–∑–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
        today = datetime.now()
        month_start = today.replace(day=1).strftime('%Y-%m-%d')
        month_end = today.strftime('%Y-%m-%d')

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø–∏—Å–µ–π
        total_appointments = db.appointments.count_documents({
            'date': {'$gte': month_start, '$lte': month_end}
        })

        completed_appointments = db.appointments.count_documents({
            'date': {'$gte': month_start, '$lte': month_end},
            'status': 'completed'
        })

        # –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        total_revenue = 0
        revenue_pipeline = [
            {'$match': {
                'date': {'$gte': month_start, '$lte': month_end},
                'type': 'income'
            }},
            {'$group': {'_id': None, 'total': {'$sum': '$amount'}}}
        ]

        revenue_result = list(db.ledger.aggregate(revenue_pipeline))
        if revenue_result:
            total_revenue = revenue_result[0]['total']

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Ä–∞—á–∞–º
        doctors_stats = []
        doctors = list(db.doctors.find({'active': True}))

        for doctor in doctors:
            doctor_appointments = db.appointments.count_documents({
                'doctor_id': str(doctor['_id']),
                'date': {'$gte': month_start, '$lte': month_end}
            })

            doctor_revenue = 0
            doctor_revenue_result = list(db.ledger.aggregate([
                {'$match': {
                    'doctor_id': str(doctor['_id']),
                    'date': {'$gte': month_start, '$lte': month_end},
                    'type': 'income'
                }},
                {'$group': {'_id': None, 'total': {'$sum': '$amount'}}}
            ]))

            if doctor_revenue_result:
                doctor_revenue = doctor_revenue_result[0]['total']

            doctors_stats.append({
                'name': doctor['name'],
                'appointments': doctor_appointments,
                'revenue': doctor_revenue
            })

        stats = {
            'period': f"{month_start} - {month_end}",
            'total_appointments': total_appointments,
            'completed_appointments': completed_appointments,
            'completion_rate': round((completed_appointments / total_appointments * 100) if total_appointments > 0 else 0, 1),
            'total_revenue': total_revenue,
            'doctors_stats': doctors_stats
        }

        return render_template('reports.html', stats=stats)

    except Exception as e:
        flash(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–æ–≤: {str(e)}', 'error')
        return render_template('reports.html', stats={})

# === –ö–û–ù–ï–¶ –û–°–ù–û–í–ù–´–• –°–¢–†–ê–ù–ò–¶ ===
'''

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã
    routes_to_add = []
    if not existing_routes["patients"]:
        routes_to_add.append("patients")
    if not existing_routes["services"]:
        routes_to_add.append("services")
    if not existing_routes["doctors"]:
        routes_to_add.append("doctors")
    if not existing_routes["rooms"]:
        routes_to_add.append("rooms")
    if not existing_routes["reports"]:
        routes_to_add.append("reports")

    if routes_to_add:
        # –ù–∞–π–¥–µ–º –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤
        pattern = r'(if __name__ == ["\']__main__["\']:.*)'
        match = re.search(pattern, content, re.DOTALL)

        if match:
            content = content.replace(match.group(1), new_routes + "\n\n" + match.group(1))
        else:
            content += new_routes

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with open(main_py_path, "w", encoding="utf-8") as f:
            f.write(content)

        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –º–∞—Ä—à—Ä—É—Ç—ã: {', '.join(routes_to_add)}")
    else:
        print("‚úÖ –í—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")

    return True


def create_missing_templates():
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤"""
    print("\nüîß –°–û–ó–î–ê–ù–ò–ï –ù–ï–î–û–°–¢–ê–Æ–©–ò–• –®–ê–ë–õ–û–ù–û–í")
    print("=" * 50)

    templates_dir = "templates"
    if not os.path.exists(templates_dir):
        os.makedirs(templates_dir)

    # –®–∞–±–ª–æ–Ω doctors.html
    doctors_template = """{% extends "base.html" %}
{% set page_title = "–í—Ä–∞—á–∏" %}

{% block content %}
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–∞—á–∞–º–∏</h2>
        <a href="/add_doctor" class="btn btn-primary">
            <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å –≤—Ä–∞—á–∞
        </a>
    </div>

    <div class="row">
        {% for doctor in doctors %}
        <div class="col-md-6 col-lg-4 mb-4">
            <div class="card h-100">
                <div class="card-header d-flex justify-content-between">
                    <h5 class="mb-0">{{ doctor.name }}</h5>
                    <span class="badge bg-{{ 'success' if doctor.active else 'secondary' }}">
                        {{ '–ê–∫—Ç–∏–≤–Ω—ã–π' if doctor.active else '–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π' }}
                    </span>
                </div>
                <div class="card-body">
                    <p class="text-muted">{{ doctor.specialty or '–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –Ω–µ —É–∫–∞–∑–∞–Ω–∞' }}</p>

                    <div class="row text-center">
                        <div class="col-6">
                            <strong>{{ doctor.appointments_count }}</strong><br>
                            <small class="text-muted">–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π</small>
                        </div>
                        <div class="col-6">
                            <strong>{{ doctor.today_appointments }}</strong><br>
                            <small class="text-muted">–°–µ–≥–æ–¥–Ω—è</small>
                        </div>
                    </div>

                    {% if doctor.phone %}
                    <div class="mt-2">
                        <small class="text-muted">
                            <i class="fas fa-phone"></i> {{ doctor.phone }}
                        </small>
                    </div>
                    {% endif %}
                </div>
                <div class="card-footer">
                    <a href="/edit_doctor/{{ doctor._id }}" class="btn btn-sm btn-outline-primary me-2">
                        <i class="fas fa-edit"></i> –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </a>
                    <a href="/calendar?doctor={{ doctor._id }}" class="btn btn-sm btn-outline-info">
                        <i class="fas fa-calendar"></i> –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                    </a>
                </div>
            </div>
        </div>
        {% endfor %}
    </div>

    {% if not doctors %}
    <div class="text-center py-5">
        <i class="fas fa-user-md fa-3x text-muted mb-3"></i>
        <h4 class="text-muted">–í—Ä–∞—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h4>
        <p class="text-muted">–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –≤—Ä–∞—á–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã</p>
    </div>
    {% endif %}
</div>
{% endblock %}"""

    # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω patients.html
    patients_template = """{% extends "base.html" %}
{% set page_title = "–ü–∞—Ü–∏–µ–Ω—Ç—ã" %}

{% block content %}
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>–°–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤</h2>
        <a href="/add_patient" class="btn btn-primary">
            <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞
        </a>
    </div>

    <!-- –ü–æ–∏—Å–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="input-group">
                <input type="text" class="form-control" id="patientSearch"
                       placeholder="–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏, —Ç–µ–ª–µ—Ñ–æ–Ω—É –∏–ª–∏ email">
                <button class="btn btn-outline-secondary" type="button">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover" id="patientsTable">
                    <thead>
                        <tr>
                            <th>–ò–º—è</th>
                            <th>–¢–µ–ª–µ—Ñ–æ–Ω</th>
                            <th>Email</th>
                            <th>–ó–∞–ø–∏—Å–µ–π</th>
                            <th>–ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å</th>
                            <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for patient in patients %}
                        <tr>
                            <td>
                                <strong>{{ patient.name }}</strong>
                                {% if patient.birth_date %}
                                <br><small class="text-muted">{{ patient.birth_date }}</small>
                                {% endif %}
                            </td>
                            <td>{{ patient.phone or '‚Äî' }}</td>
                            <td>{{ patient.email or '‚Äî' }}</td>
                            <td>
                                <span class="badge bg-info">{{ patient.appointments_count }}</span>
                            </td>
                            <td>
                                {% if patient.last_appointment %}
                                {{ patient.last_appointment.date }}<br>
                                <small class="text-muted">{{ patient.last_appointment.time }}</small>
                                {% else %}
                                ‚Äî
                                {% endif %}
                            </td>
                            <td>
                                <a href="/patients/{{ patient._id }}" class="btn btn-sm btn-outline-primary me-1">
                                    <i class="fas fa-eye"></i> –ö–∞—Ä—Ç–æ—á–∫–∞
                                </a>
                                <a href="/edit_patient/{{ patient._id }}" class="btn btn-sm btn-outline-secondary">
                                    <i class="fas fa-edit"></i>
                                </a>
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    {% if not patients %}
    <div class="text-center py-5">
        <i class="fas fa-users fa-3x text-muted mb-3"></i>
        <h4 class="text-muted">–ü–∞—Ü–∏–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h4>
        <p class="text-muted">–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã</p>
    </div>
    {% endif %}
</div>

<script>
// –ü–æ–∏—Å–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
document.getElementById('patientSearch').addEventListener('input', function(e) {
    const searchTerm = e.target.value.toLowerCase();
    const rows = document.querySelectorAll('#patientsTable tbody tr');

    rows.forEach(row => {
        const text = row.textContent.toLowerCase();
        row.style.display = text.includes(searchTerm) ? '' : 'none';
    });
});
</script>
{% endblock %}"""

    # –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —à–∞–±–ª–æ–Ω—ã
    templates_to_create = [
        ("doctors.html", doctors_template),
    ]

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π patients.html
    patients_path = os.path.join(templates_dir, "patients.html")
    with open(patients_path, "w", encoding="utf-8") as f:
        f.write(patients_template)
    print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —à–∞–±–ª–æ–Ω patients.html")

    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã
    created_count = 0
    for filename, template_content in templates_to_create:
        template_path = os.path.join(templates_dir, filename)

        if not os.path.exists(template_path):
            with open(template_path, "w", encoding="utf-8") as f:
                f.write(template_content)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω: {filename}")
            created_count += 1
        else:
            print(f"‚ö†Ô∏è –®–∞–±–ª–æ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {filename}")

    print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {created_count + 1} —à–∞–±–ª–æ–Ω–æ–≤")
    return True


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ü–û–õ–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ú–ï–î–ü–õ–ê–¢–§–û–†–ú–´")
    print("=" * 60)

    success_count = 0
    total_tasks = 3

    # 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    if fix_base_html_navigation():
        success_count += 1

    # 2. –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã
    if add_missing_routes_to_main():
        success_count += 1

    # 3. –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —à–∞–±–ª–æ–Ω—ã
    if create_missing_templates():
        success_count += 1

    print("\n" + "=" * 60)
    print(f"‚úÖ –í–´–ü–û–õ–ù–ï–ù–û: {success_count}/{total_tasks} –∑–∞–¥–∞—á")

    if success_count == total_tasks:
        print("\nüéâ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–´!")
        print("\nüöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python main.py")
        print("2. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É")
        print("3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞–≤–∏–≥–∞—Ü–∏—é:")
        print("   - –ü–∞—Ü–∏–µ–Ω—Ç—ã ‚Üí –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å –ø–æ–∏—Å–∫–æ–º")
        print("   - –í—Ä–∞—á–∏ ‚Üí —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–∞—á–∞–º–∏")
        print("   - –£—Å–ª—É–≥–∏ ‚Üí —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥")
        print("   - –ö–∞–±–∏–Ω–µ—Ç—ã ‚Üí —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–∞–º–∏")
        print("   - –§–∏–Ω–∞–Ω—Å—ã ‚Üí —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏")
        print("   - –û—Ç—á–µ—Ç—ã ‚Üí –∞–Ω–∞–ª–∏—Ç–∏–∫–∞")
        print("\nüìã –ö–õ–Æ–ß–ï–í–´–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
        print("- –õ–µ–≤–æ–µ –º–µ–Ω—é –≤–µ–¥–µ—Ç –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
        print("- –ö–∞—Ä—Ç–æ—á–∫–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω—ã")
        print("- –í—Å–µ —Ä–∞–∑–¥–µ–ª—ã –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        print("- –î–æ–±–∞–≤–ª–µ–Ω –ø–æ–∏—Å–∫ –ø–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞–º")
    else:
        print("\n‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –ó–ê–î–ê–ß–ò –ù–ï –í–´–ü–û–õ–ù–ï–ù–´")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ –∏ —É—Å—Ç—Ä–∞–Ω–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã")


if __name__ == "__main__":
    main()
