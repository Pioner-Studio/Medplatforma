#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É—Å—Ç–æ–≥–æ –±–ª–æ–∫–∞ if –≤ main.py –Ω–∞ —Å—Ç—Ä–æ–∫–µ 2459
"""

import os


def fix_empty_if_block():
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–£–°–¢–û–ì–û –ë–õ–û–ö–ê IF")
    print("=" * 40)

    main_py_path = "main.py"

    if not os.path.exists(main_py_path):
        print("‚ùå –§–∞–π–ª main.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open(main_py_path, "r", encoding="utf-8") as f:
        lines = f.readlines()

    print(f"üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª: {len(lines)} —Å—Ç—Ä–æ–∫")

    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_path = main_py_path + ".backup_syntax"
    with open(backup_path, "w", encoding="utf-8") as f:
        f.writelines(lines)
    print(f"üíæ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")

    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
    fixed_lines = []

    for i, line in enumerate(lines):
        line_num = i + 1

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–ª–∞—Å—Ç—å –≤–æ–∫—Ä—É–≥ –ø—Ä–æ–±–ª–µ–º—ã
        if 2455 <= line_num <= 2475:
            print(f"{line_num:4d}: {repr(line)}")

        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É 2459 - –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–ª–æ –¥–ª—è if
        if line_num == 2459 and line.strip() == "if not kind or amount <= 0:":
            fixed_lines.append(line)
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–ª–æ if - –≤–æ–∑–≤—Ä–∞—Ç –æ—à–∏–±–∫–∏
            fixed_lines.append(
                '        return {"ok": False, "error": "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: –≤–∏–¥ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ —Å—É–º–º–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã"}\n'
            )
            print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ {line_num}: –¥–æ–±–∞–≤–ª–µ–Ω–æ —Ç–µ–ª–æ –¥–ª—è if")
            continue

        # –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ—Å–ª–µ if
        if line_num == 2460 and line.strip() == "":
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–∞ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ {line_num}")
            continue

        if line_num == 2461 and line.strip() == "":
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—â–µ –æ–¥–Ω—É –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–∞ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ {line_num}")
            continue

        fixed_lines.append(line)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open(main_py_path, "w", encoding="utf-8") as f:
        f.writelines(fixed_lines)

    print(f"\n‚úÖ –§–∞–π–ª –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!")
    return True


def verify_fix():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print(f"\nüß™ –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø")
    print("=" * 30)

    try:
        import ast

        with open("main.py", "r", encoding="utf-8") as f:
            content = f.read()

        # –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å
        ast.parse(content)
        print("‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω!")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –æ–±–ª–∞—Å—Ç—å
        lines = content.split("\n")
        print("\nüìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –æ–±–ª–∞—Å—Ç—å:")
        for i in range(2458, 2468):
            if i < len(lines):
                print(f"{i+1:4d}: {lines[i]}")

        return True

    except SyntaxError as e:
        print(f"‚ùå –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤—Å–µ –µ—â–µ –µ—Å—Ç—å:")
        print(f"   –°—Ç—Ä–æ–∫–∞ {e.lineno}: {e.text.strip() if e.text else '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}")
        print(f"   –û—à–∏–±–∫–∞: {e.msg}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
        return False


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–ò–ù–¢–ê–ö–°–ò–ß–ï–°–ö–û–ô –û–®–ò–ë–ö–ò MAIN.PY")
    print("=" * 50)

    # 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–π –±–ª–æ–∫ if
    if not fix_empty_if_block():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª")
        return

    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if verify_fix():
        print("\nüöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print("\n–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä:")
        print("python main.py")
        print("\n–∏–ª–∏")
        print("flask --app main run --no-reload")
    else:
        print("\n‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã–≤–æ–¥ –≤—ã—à–µ")


if __name__ == "__main__":
    main()
