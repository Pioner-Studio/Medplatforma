#!/usr/bin/env python3
"""
–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–µ–≤–æ–≥–æ –º–µ–Ω—é
"""

import os
import re


def add_patients_route():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ /patients"""
    print("üîß –î–û–ë–ê–í–õ–ï–ù–ò–ï –ú–ê–†–®–†–£–¢–ê /PATIENTS")
    print("=" * 35)

    main_py_path = "main.py"

    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open(main_py_path, "r", encoding="utf-8") as f:
        content = f.read()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –º–∞—Ä—à—Ä—É—Ç /patients
    if "@app.route('/patients')" in content or '@app.route("/patients")' in content:
        print("‚úÖ –ú–∞—Ä—à—Ä—É—Ç /patients —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return True

    # –°–æ–∑–¥–∞–µ–º –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
    patients_route = '''
@app.route('/patients')
@login_required
def patients():
    """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
        patients_list = list(db.patients.find().sort('full_name', 1))

        # –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        for patient in patients_list:
            patient['_id'] = str(patient['_id'])

            # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
            patient['appointments_count'] = db.appointments.count_documents({
                'patient_id': patient['_id']
            })

            # –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å
            last_appointment = db.appointments.find_one({
                'patient_id': patient['_id']
            }, sort=[('created_at', -1)])

            patient['last_appointment'] = last_appointment

        return render_template('patients.html', patients=patients_list)

    except Exception as e:
        flash(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤: {str(e)}', 'error')
        return render_template('patients.html', patients=[])
'''

    # –ù–∞—Ö–æ–¥–∏–º –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ (–ø–µ—Ä–µ–¥ if __name__)
    pattern = r'(if __name__ == ["\']__main__["\']:.*)'
    match = re.search(pattern, content, re.DOTALL)

    if match:
        content = content.replace(match.group(1), patients_route + "\n\n" + match.group(1))
    else:
        content += patients_route

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    with open(main_py_path, "w", encoding="utf-8") as f:
        f.write(content)

    print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –º–∞—Ä—à—Ä—É—Ç /patients")
    return True


def fix_base_html_menu():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–µ–≤–æ–≥–æ –º–µ–Ω—é –≤ base.html"""
    print("\nüîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –õ–ï–í–û–ì–û –ú–ï–ù–Æ")
    print("=" * 30)

    base_html_path = "templates/base.html"

    if not os.path.exists(base_html_path):
        print("‚ùå –§–∞–π–ª base.html –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

    # –ß–∏—Ç–∞–µ–º base.html
    with open(base_html_path, "r", encoding="utf-8") as f:
        content = f.read()

    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_path = base_html_path + ".backup_menu"
    with open(backup_path, "w", encoding="utf-8") as f:
        f.write(content)
    print(f"üíæ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")

    # –ù–æ–≤–æ–µ –ª–µ–≤–æ–µ –º–µ–Ω—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏
    new_sidebar = """        <!-- Sidebar -->
        <nav class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
            <div class="position-sticky pt-3">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'calendar_view' else '' }}"
                           href="/">
                            <i class="fas fa-calendar-alt"></i> –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'patients' else '' }}"
                           href="/patients">
                            <i class="fas fa-users"></i> –ü–∞—Ü–∏–µ–Ω—Ç—ã
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'doctors' else '' }}"
                           href="/doctors">
                            <i class="fas fa-user-md"></i> –í—Ä–∞—á–∏
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" href="/tasks">
                            <i class="fas fa-list"></i> –ó–∞–¥–∞—á–∏
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" href="/partners">
                            <i class="fas fa-handshake"></i> –°–æ–æ–±—â–µ–Ω–∏—è
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" href="/data_tools">
                            <i class="fas fa-door-open"></i> –ö–∞–±–∏–Ω–µ—Ç—ã
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" href="/add_service">
                            <i class="fas fa-plus"></i> –£—Å–ª—É–≥–∏
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" href="/ztl">
                            <i class="fas fa-users"></i> –ü–∞—Ü–∏–µ–Ω—Ç—ã
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" href="/backup">
                            <i class="fas fa-upload"></i> –ó–¢–õ
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" href="/partners">
                            <i class="fas fa-handshake"></i> –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link {{ 'active' if request.endpoint == 'finance_report' else '' }}"
                           href="/finance_report">
                            <i class="fas fa-ruble-sign"></i> –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" href="/logs">
                            <i class="fas fa-file-alt"></i> –ñ—É—Ä–Ω–∞–ª –¥–µ–π—Å—Ç–≤–∏–π
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" href="/export_data">
                            <i class="fas fa-download"></i> –≠–∫—Å–ø–æ—Ä—Ç / –ò–º–ø–æ—Ä—Ç
                        </a>
                    </li>
                </ul>
            </div>
        </nav>"""

    # –ò—â–µ–º –∏ –∑–∞–º–µ–Ω—è–µ–º sidebar
    sidebar_pattern = r'<nav class="col-md-3.*?</nav>'
    if re.search(sidebar_pattern, content, re.DOTALL):
        content = re.sub(sidebar_pattern, new_sidebar, content, flags=re.DOTALL)
        print("‚úÖ –õ–µ–≤–æ–µ –º–µ–Ω—é –æ–±–Ω–æ–≤–ª–µ–Ω–æ")
    else:
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ nav, –∏—â–µ–º –ø–æ –¥—Ä—É–≥–æ–º—É –ø–∞—Ç—Ç–µ—Ä–Ω—É
        sidebar_pattern2 = r"<!-- Sidebar -->.*?</ul>\s*</div>\s*</nav>"
        if re.search(sidebar_pattern2, content, re.DOTALL):
            content = re.sub(sidebar_pattern2, new_sidebar, content, flags=re.DOTALL)
            print("‚úÖ –õ–µ–≤–æ–µ –º–µ–Ω—é –æ–±–Ω–æ–≤–ª–µ–Ω–æ (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫)")
        else:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ª–µ–≤–æ–µ –º–µ–Ω—é –¥–ª—è –∑–∞–º–µ–Ω—ã")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open(base_html_path, "w", encoding="utf-8") as f:
        f.write(content)

    return True


def create_patients_template():
    """–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ patients.html"""
    print("\nüîß –°–û–ó–î–ê–ù–ò–ï –®–ê–ë–õ–û–ù–ê PATIENTS.HTML")
    print("=" * 35)

    templates_dir = "templates"
    patients_template_path = os.path.join(templates_dir, "patients.html")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —à–∞–±–ª–æ–Ω
    if os.path.exists(patients_template_path):
        print("‚úÖ –®–∞–±–ª–æ–Ω patients.html —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return True

    # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω
    patients_template = """{% extends "base.html" %}
{% set page_title = "–ü–∞—Ü–∏–µ–Ω—Ç—ã" %}

{% block content %}
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>–°–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤</h2>
        <a href="/add_patient" class="btn btn-primary">
            <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞
        </a>
    </div>

    <!-- –ü–æ–∏—Å–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="input-group">
                <input type="text" class="form-control" id="patientSearch"
                       placeholder="–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏, —Ç–µ–ª–µ—Ñ–æ–Ω—É –∏–ª–∏ email">
                <button class="btn btn-outline-secondary" type="button">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover" id="patientsTable">
                    <thead>
                        <tr>
                            <th>–ò–º—è</th>
                            <th>–¢–µ–ª–µ—Ñ–æ–Ω</th>
                            <th>Email</th>
                            <th>–ó–∞–ø–∏—Å–µ–π</th>
                            <th>–ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å</th>
                            <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for patient in patients %}
                        <tr>
                            <td>
                                <strong>{{ patient.full_name or patient.name or '–ò–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ' }}</strong>
                                {% if patient.birth_date %}
                                <br><small class="text-muted">{{ patient.birth_date }}</small>
                                {% endif %}
                            </td>
                            <td>{{ patient.phone or '‚Äî' }}</td>
                            <td>{{ patient.email or '‚Äî' }}</td>
                            <td>
                                <span class="badge bg-info">{{ patient.appointments_count or 0 }}</span>
                            </td>
                            <td>
                                {% if patient.last_appointment %}
                                {{ patient.last_appointment.date or '‚Äî' }}<br>
                                <small class="text-muted">{{ patient.last_appointment.time or '‚Äî' }}</small>
                                {% else %}
                                ‚Äî
                                {% endif %}
                            </td>
                            <td>
                                <a href="/patients/{{ patient._id }}" class="btn btn-sm btn-outline-primary me-1">
                                    <i class="fas fa-eye"></i> –ö–∞—Ä—Ç–æ—á–∫–∞
                                </a>
                                <a href="/edit_patient/{{ patient._id }}" class="btn btn-sm btn-outline-secondary">
                                    <i class="fas fa-edit"></i>
                                </a>
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    {% if not patients %}
    <div class="text-center py-5">
        <i class="fas fa-users fa-3x text-muted mb-3"></i>
        <h4 class="text-muted">–ü–∞—Ü–∏–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h4>
        <p class="text-muted">–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã</p>
        <a href="/add_patient" class="btn btn-primary">
            <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞
        </a>
    </div>
    {% endif %}
</div>

<script>
// –ü–æ–∏—Å–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
document.getElementById('patientSearch').addEventListener('input', function(e) {
    const searchTerm = e.target.value.toLowerCase();
    const rows = document.querySelectorAll('#patientsTable tbody tr');

    rows.forEach(row => {
        const text = row.textContent.toLowerCase();
        row.style.display = text.includes(searchTerm) ? '' : 'none';
    });
});
</script>
{% endblock %}"""

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —à–∞–±–ª–æ–Ω
    with open(patients_template_path, "w", encoding="utf-8") as f:
        f.write(patients_template)

    print("‚úÖ –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω patients.html")
    return True


def add_patient_card_route():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞"""
    print("\nüîß –î–û–ë–ê–í–õ–ï–ù–ò–ï –ú–ê–†–®–†–£–¢–ê –ö–ê–†–¢–û–ß–ö–ò –ü–ê–¶–ò–ï–ù–¢–ê")
    print("=" * 40)

    main_py_path = "main.py"

    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open(main_py_path, "r", encoding="utf-8") as f:
        content = f.read()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –º–∞—Ä—à—Ä—É—Ç
    if "def patient_card_page(" in content:
        print("‚úÖ –ú–∞—Ä—à—Ä—É—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return True

    # –°–æ–∑–¥–∞–µ–º –º–∞—Ä—à—Ä—É—Ç
    card_route = '''
@app.route('/patients/<patient_id>')
@login_required
def patient_card_page(patient_id):
    """–ö–∞—Ä—Ç–æ—á–∫–∞ –ø–∞—Ü–∏–µ–Ω—Ç–∞"""
    try:
        from bson import ObjectId

        # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞
        patient = db.patients.find_one({'_id': ObjectId(patient_id)})
        if not patient:
            flash('–ü–∞—Ü–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error')
            return redirect('/patients')

        patient['_id'] = str(patient['_id'])

        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞
        appointments = list(db.appointments.find({
            'patient_id': patient_id
        }).sort('date', -1).limit(20))

        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        financial_records = list(db.ledger.find({
            'patient_id': patient_id
        }).sort('date', -1).limit(10))

        return render_template('patient_card.html',
                             patient=patient,
                             appointments=appointments,
                             financial_records=financial_records)

    except Exception as e:
        flash(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞: {str(e)}', 'error')
        return redirect('/patients')
'''

    # –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç
    pattern = r'(if __name__ == ["\']__main__["\']:.*)'
    match = re.search(pattern, content, re.DOTALL)

    if match:
        content = content.replace(match.group(1), card_route + "\n\n" + match.group(1))
    else:
        content += card_route

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    with open(main_py_path, "w", encoding="utf-8") as f:
        f.write(content)

    print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –º–∞—Ä—à—Ä—É—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞")
    return True


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–ï–î–û–°–¢–ê–Æ–©–ò–• –ú–ê–†–®–†–£–¢–û–í –ü–ê–¶–ò–ï–ù–¢–û–í")
    print("=" * 55)

    success_count = 0
    total_tasks = 4

    # 1. –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç /patients
    if add_patients_route():
        success_count += 1

    # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ª–µ–≤–æ–µ –º–µ–Ω—é
    if fix_base_html_menu():
        success_count += 1

    # 3. –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω patients.html
    if create_patients_template():
        success_count += 1

    # 4. –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞
    if add_patient_card_route():
        success_count += 1

    print(f"\n{'='*55}")
    print(f"‚úÖ –í–´–ü–û–õ–ù–ï–ù–û: {success_count}/{total_tasks} –∑–∞–¥–∞—á")

    if success_count == total_tasks:
        print("\nüéâ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–´!")
        print("\nüöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: Ctrl+C, –∑–∞—Ç–µ–º python main.py")
        print("2. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–µ–≤–æ–µ –º–µ–Ω—é:")
        print("   - '–ü–∞—Ü–∏–µ–Ω—Ç—ã' –¥–æ–ª–∂–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤")
        print("   - '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç' –¥–æ–ª–∂–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å—ã")
        print("   - –ö–∞—Ä—Ç–æ—á–∫–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –∫–Ω–æ–ø–∫–µ '–ö–∞—Ä—Ç–æ—á–∫–∞'")
        print("\nüìã –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
        print("- –î–æ–±–∞–≤–ª–µ–Ω –º–∞—Ä—à—Ä—É—Ç /patients")
        print("- –û–±–Ω–æ–≤–ª–µ–Ω–æ –ª–µ–≤–æ–µ –º–µ–Ω—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏")
        print("- –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω –¥–ª—è —Å–ø–∏—Å–∫–∞ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤")
        print("- –î–æ–±–∞–≤–ª–µ–Ω –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤")
    else:
        print("\n‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –ó–ê–î–ê–ß–ò –ù–ï –í–´–ü–û–õ–ù–ï–ù–´")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ")


if __name__ == "__main__":
    main()
