# production_migration.py
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ demo –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–≥—Ä—É–∑–∫–∏ production –¥–∞–Ω–Ω—ã—Ö

from pymongo import MongoClient
import bcrypt
from datetime import datetime

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
client = MongoClient("mongodb://localhost:27017/")
db = client["clubstom"]


def clear_demo_data():
    """–û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö demo/test –¥–∞–Ω–Ω—ã—Ö"""
    print("üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ demo –¥–∞–Ω–Ω—ã—Ö...")

    # –û—á–∏—â–∞–µ–º –≤—Å–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    collections_to_clear = [
        "users",
        "doctors",
        "services",
        "rooms",
        "appointments",
        "patients",
        "finances",
    ]

    for collection_name in collections_to_clear:
        result = db[collection_name].delete_many({})
        print(f"   –£–¥–∞–ª–µ–Ω–æ –∏–∑ {collection_name}: {result.deleted_count} –∑–∞–ø–∏—Å–µ–π")

    print("‚úÖ Demo –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")


def create_production_users():
    """–°–æ–∑–¥–∞–Ω–∏–µ production –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    print("üë• –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")

    # –†–µ–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    users = [
        {
            "name": "–ì–æ–≥—É–µ–≤–∞ –ê–ª–∏–Ω–∞ –¢–µ–º—É—Ä–ª–∞–Ω–æ–≤–Ω–∞",
            "login": "Gogueva",
            "role": "admin",
            "phone": "79251837932",
            "password": bcrypt.hashpw("ClubStom2024!".encode("utf-8"), bcrypt.gensalt()).decode(
                "utf-8"
            ),
            "created_at": datetime.now(),
            "is_active": True,
        },
        {
            "name": "–ù–∞–∫–æ–Ω–µ—á–Ω—ã–π –ê–ª–µ–∫—Å–µ–π –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á",
            "login": "Nakonechnyi",
            "role": "admin",
            "phone": "79852788171",
            "password": bcrypt.hashpw("ClubStom2024!".encode("utf-8"), bcrypt.gensalt()).decode(
                "utf-8"
            ),
            "created_at": datetime.now(),
            "is_active": True,
        },
        {
            "name": "–ù–∞–∫–æ–Ω–µ—á–Ω–∞—è –ï–ª–µ–Ω–∞ –ò–≤–∞–Ω–æ–≤–Ω–∞",
            "login": "Nakonechnaia",
            "role": "admin",
            "phone": "79164848085",
            "password": bcrypt.hashpw("ClubStom2024!".encode("utf-8"), bcrypt.gensalt()).decode(
                "utf-8"
            ),
            "created_at": datetime.now(),
            "is_active": True,
        },
        {
            "name": "–ê–∫—Å–µ–Ω–æ–≤–∞ –£–ª—å—è–Ω–∞ –î–µ–Ω–∏—Å–æ–≤–Ω–∞",
            "login": "Aksenova",
            "role": "registrar",
            "phone": "79175051978",
            "password": bcrypt.hashpw("ClubStom2024!".encode("utf-8"), bcrypt.gensalt()).decode(
                "utf-8"
            ),
            "created_at": datetime.now(),
            "is_active": True,
        },
    ]

    result = db.users.insert_many(users)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(result.inserted_ids)}")


def create_production_doctors():
    """–°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–∞—á–µ–π"""
    print("üë®‚Äç‚öïÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–∞—á–µ–π...")

    # –ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥–∏—Ä–æ–≤–∫—É –∏–∑ —Ñ–∞–π–ª–∞
    doctors = [
        {
            "full_name": "–ì–æ–≥—É–µ–≤–∞ –ê–ª–∏–Ω–∞ –¢–µ–º—É—Ä–ª–∞–Ω–æ–≤–Ω–∞",
            "specialty": "–ì–ª–∞–≤–Ω—ã–π –≤—Ä–∞—á, –¢–µ—Ä–∞–ø–µ–≤—Ç",
            "phone": "79251837932",
            "is_active": True,
            "created_at": datetime.now(),
        },
        {
            "full_name": "–ê–π–≤–∞–∑—è–Ω –ê–ª—å–±–µ—Ä—Ç –ì–∞–≥–∏–∫–æ–≤–∏—á",
            "specialty": "–•–∏—Ä—É—Ä–≥-–∏–º–ø–ª–∞–Ω—Ç–æ–ª–æ–≥",
            "phone": "79150424721",
            "is_active": True,
            "created_at": datetime.now(),
        },
        {
            "full_name": "–ö—É—Ä–¥–æ–≤ –ö–∞–¥—ã—Ä –ú—É—Ä–∞–¥–æ–≤–∏—á",
            "specialty": "–û—Ä—Ç–æ–ø–µ–¥",
            "phone": "79015713021",
            "is_active": True,
            "created_at": datetime.now(),
        },
        {
            "full_name": "–ö–∞–ª–∞—á–µ–≤ –ê–ª–µ–∫—Å–µ–π –ù–∏–∫–æ–ª–∞–µ–≤–∏—á",
            "specialty": "–û—Ä—Ç–æ–¥–æ–Ω—Ç",
            "phone": "79191093938",
            "is_active": True,
            "created_at": datetime.now(),
        },
        {
            "full_name": "–ú–∏—Ä–≥–∞—Ç–∏—è –û–ª—å–≥–∞ –°–µ—Ä–≥–µ–µ–≤–Ω–∞",
            "specialty": "–î–µ—Ç—Å–∫–∏–π —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥, –¢–µ—Ä–∞–ø–µ–≤—Ç",
            "phone": "79164422955",
            "is_active": True,
            "created_at": datetime.now(),
        },
    ]

    result = db.doctors.insert_many(doctors)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –≤—Ä–∞—á–µ–π: {len(result.inserted_ids)}")


def create_production_services():
    """–°–æ–∑–¥–∞–Ω–∏–µ —É—Å–ª—É–≥ —Å —Ü–µ–Ω–∞–º–∏"""
    print("üí∞ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞...")

    services_data = [
        ("–ö–¢", 60, 6000, 4000),
        ("–ì–∏–≥–∏–µ–Ω–∞ –ø–æ–ª–æ—Å—Ç–∏ —Ä—Ç–∞ –≤–∑—Ä", 60, 13000, 10000),
        ("–ì–∏–≥–∏–µ–Ω–∞ –ø–æ–ª–æ—Å—Ç–∏ —Ä—Ç–∞ –¥–µ—Ç", 60, 12000, 9500),
        ("–ü–∞—Ä–æ–¥–æ–Ω—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –ª–µ—á–µ–Ω–∏–µ –¥–µ—Å–µ–Ω –º–µ–º–±—Ä–∞–Ω–∞–º–∏", 60, 13000, 9500),
        ("–û—Ç–±–µ–ª–∏–≤–∞–Ω–∏–µ", 60, 35000, 31500),
        ("–ö–∞–ø–ø—ã –¥–ª—è –¥–æ–º–∞—à–Ω–µ–≥–æ –æ—Ç–±–µ–ª–∏–≤–∞–Ω–∏—è —Å –≥–µ–ª–µ–º", 60, 27000, 20500),
        ("ICON", 60, 15000, 11500),
        ("–ö–∞—Ä–∏–µ—Å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω—ã–π –≤–∑—Ä", 60, 13000, 10000),
        ("–ö–∞—Ä–∏–µ—Å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω—ã–π –¥–µ—Ç", 60, 11000, 9000),
        ("–ö–∞—Ä–∏–µ—Å –≥–ª—É–±–æ–∫–∏–π –≤–∑—Ä", 60, 19000, 14500),
        ("–ö–∞—Ä–∏–µ—Å –≥–ª—É–±–æ–∫–∏–π –¥–µ—Ç—Å–∫", 60, 17000, 13500),
        ("–ö–æ—Ä–æ–Ω–∫–∞ –¥–µ—Ç—Å–∫–∞—è", 60, 25000, 18000),
        ("–ö–ª–∏–Ω–æ–≤–∏–¥–Ω—ã–µ –¥–µ—Ñ–µ–∫—Ç—ã", 60, 17000, 12000),
        ("–†–µ—Å—Ç–∞–≤—Ä–∞—Ü–∏—è —ç—Å—Ç–µ—Ç–∏—á–µ—Å–∫–∞—è (—Å–∫–æ–ª—ã)", 60, 19000, 14000),
        ("–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–µ–Ω–∫–∏ –∑—É–±–∞ —Å–æ —à—Ç–∏—Ñ—Ç–æ–º (Build up)", 60, 21000, 14500),
        ("–†–µ—Å—Ç–∞–≤—Ä–∞—Ü–∏—è —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è= –∞–Ω–∞–ª–æ–≥ –≤–∏–Ω–∏—Ä–æ–≤", 60, 30000, 23500),
        ("–ö—é—Ä–µ—Ç–∞–∂, 1 –∑—É–±", 60, 3000, 2200),
        ("–ü–µ—Ä–≤–∏—á–Ω–æ–µ –ª–µ—á–µ–Ω–∏–µ 1–∫–∞–Ω–∞–ª—å–Ω–æ–≥–æ –∑—É–±–∞ –≤ –æ–¥–Ω–æ –ø–æ—Å–µ—â–µ–Ω–∏–µ (–ø—É–ª—å–ø–∏—Ç)", 60, 27000, 23500),
        ("–ü–µ—Ä–µ–ª–µ—á–∏–≤–∞–Ω–∏–µ 1 –∫–∞–Ω–∞–ª–∞", 60, 27000, 22000),
        ("–£–¥–∞–ª–µ–Ω–∏–µ –∑—É–±–∞ –ø—Ä–æ—Å—Ç–æ–π", 60, 15000, 12500),
        ("–£–¥–∞–ª–µ–Ω–∏–µ –∑—É–±–∞ —Å–ª–æ–∂–Ω—ã–π", 60, 22000, 17000),
        ("–ò–º–ø–ª–∞–Ω—Ç shtraumann", 60, 100000, 81500),
        ("–ò–º–ø–ª–∞–Ω—Ç Nobel", 60, 100000, 81500),
        ("–ò–º–ø–ª–∞–Ω—Ç Dentium", 60, 80000, 66000),
        ("–°–∏–Ω—É—Å-–ª–∏—Ñ—Ç–∏–Ω–≥", 60, 65000, 54000),
        ("–ö–æ—Å—Ç–Ω–∞—è –ø–ª–∞—Å—Ç–∏–∫–∞", 60, 75000, 63000),
        ("–§–æ—Ä–º–∏—Ä–æ–≤–∞—Ç–µ–ª—å –¥–µ—Å–Ω—ã", 60, 13000, 12500),
        ("–ü–ª–∞—Å—Ç–∏–∫–∞ –¥–µ—Å–Ω—ã", 60, 13000, 11000),
        ("ALL oin 4 1 —á–µ–ª—é—Å—Ç—å Nobel", 60, 400000, 31500),
        ("ALL on 6 1 —á–µ–ª—é—Å—Ç—å Nobel", 60, 600000, 464000),
        ("ALL oin 4 1 —á–µ–ª—é—Å—Ç—å Dentium", 60, 320000, 232000),
        ("ALL on 6 1 —á–µ–ª—é—Å—Ç—å Dentium", 60, 480000, 341000),
        ("–û—Ä—Ç–æ–ø–µ–¥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ALL on 6 1 —á–µ–ª—é—Å—Ç—å –ø—Ä–æ—Ç–µ–∑ –≤—Ä–µ–º–µ–Ω–Ω—ã–π", 60, 250000, 201000),
        ("–û—Ä—Ç–æ–ø–µ–¥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ALL on 4 1 —á–µ–ª—é—Å—Ç—å –ø—Ä–æ—Ç–µ–∑ –≤—Ä–µ–º–µ–Ω–Ω—ã–π", 60, 200000, 163000),
        ("–û—Ä—Ç–æ–ø–µ–¥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ALL on 6 1 —á–µ–ª—é—Å—Ç—å –ø—Ä–æ—Ç–µ–∑ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π", 60, 300000, 237000),
        ("–û—Ä—Ç–æ–ø–µ–¥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ALL on 4 1 —á–µ–ª—é—Å—Ç—å –ø—Ä–æ—Ç–µ–∑ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π", 60, 250000, 199000),
        ("–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –ø—Ä–æ—Ç–µ–∑ —Å—å–µ–º–Ω—ã–π –ø–ª–∞—Å—Ç–∏–∫ –±–µ–∑ –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏–∏ 1 —á–µ–ª—é—Å—Ç—å", 60, 100000, 79000),
        ("–ë—Ä–µ–∫–µ—Ç—ã", 60, 450000, 354000),
        ("–ë—Ä–µ–∫–µ—Ç—ã —á–∞—Å—Ç–∏—á–Ω—ã–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –Ω–∞ 2 –∑—É–±–∞", 60, 60000, 55000),
        ("–ê–ø–ø–∞—Ä–∞—Ç –ú–∞—Ä–∫–∞ –†–æ—Å—Å–∞ (–Ω–µ—Å—å–µ–º–Ω—ã–π –∞–ø–ø–∞—Ä–∞—Ç –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –≤–µ—Ä—Ö —á–µ–ª—é—Å—Ç–∏)", 60, 100000, 85000),
        ("–≠–ª–∞–π–Ω–µ—Ä—ã", 60, 500000, 440000),
        ("–í—Ä–µ–º–µ–Ω–Ω–∞—è –∫–æ—Ä–æ–Ω–∫–∞ –Ω–∞ –∑—É–±–µ –ø–ª–∞—Å—Ç–∏–∫", 60, 20000, 17500),
        ("–í—Ä–µ–º–µ–Ω–Ω–∞—è –∫–æ—Ä–æ–Ω–∫–∞ –Ω–∞ –∏–º–ø–ª–∞–Ω—Ç–∞—Ç–µ", 60, 30000, 26000),
        ("–ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∫–æ—Ä–æ–Ω–∫–∞ –Ω–∞ –∑—É–±–µ Emax –∫–µ—Ä–∞–º–∏–∫–∞", 60, 55000, 41500),
        ("–ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∫–æ—Ä–æ–Ω–∫–∞ –Ω–∞ –∑—É–±–µ –¥–∏–æ–∫—Å–∏–¥ —Ü–∏—Ä–∫–æ–Ω–∏—è", 60, 50000, 37500),
        ("–ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∫–æ—Ä–æ–Ω–∫–∞ –Ω–∞ –∏–º–ø–ª–∞–Ω—Ç–µ –ï–º–∞—Ö", 60, 55000, 45500),
        ("–ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∫–æ—Ä–æ–Ω–∫–∞ –Ω–∞ –∏–º–ø–ª–∞–Ω—Ç–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∏–æ–∫—Å–∏–¥–∞ —Ü–∏—Ä–∫–æ–Ω–∏—è", 60, 50000, 41500),
        ("–í–∏–Ω–∏—Ä—ã –∞–≤—Ç–æ—Ä—Å–∫–∏–µ\\–≤—ã—Å–æ–∫–∞—è —ç—Å—Ç–µ—Ç–∏–∫–∞", 60, 85000, 67000),
        ("–í–∏–Ω–∏—Ä –ø—Ä–æ—Å—Ç–æ–π", 60, 55000, 46500),
        ("–°–ø–ª–∏–Ω—Ç", 60, 120000, 100500),
        ("–ú–∏–æ—Å–ø–ª–∏–Ω—Ç –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏ —Å—Ç–∏—Ä–∞–µ–º–æ—Å—Ç–∏", 60, 30000, 24000),
        (
            "–í–æ—Å–∫–æ–≤–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ç–æ—Ç–∞–ª—å–Ω—ã—Ö —Ä–∞–±–æ—Ç 1 —á–µ–ª—é—Å—Ç—å 14 –∑—É–±–æ–≤, –Ω–∞ 6 –º–µ—Å",
            60,
            120000,
            116000,
        ),
        (
            "–í—Ä–µ–º–µ–Ω–Ω–∞—è –∫–æ–º–ø–æ–∑–∏—Ç–Ω–∞—è –Ω–∞–∫–ª–∞–¥–∫–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –Ω–æ—à–µ–Ω–∏—è (–≤ –∫—Ä–µ—Å–ª–µ) 14 —à—Ç, 1 —á–µ–ª—é—Å—Ç—å, –Ω–∞ 6 –º–µ—Å",
            60,
            140000,
            83500,
        ),
        ("—ç—Ç–∞–ø 1. –≤–æ—Å–∫ –º–æ–¥–µ–ª–∏—Ä+–Ω–∞–∫–ª–∞–¥–∫–∞, 2 –Ω–µ–¥ —Ä–∞–±–æ—Ç–∞ –Ω–∞ 6 –º–µ—Å", 60, 260000, 200000),
        ("–í–∫–ª–∞–¥–∫–∞", 60, 40000, 33500),
    ]

    services = []
    for name, duration, price_client, price_staff in services_data:
        services.append(
            {
                "name": name,
                "duration_minutes": duration,
                "price_client": price_client,
                "price_staff": price_staff,
                "is_active": True,
                "created_at": datetime.now(),
            }
        )

    result = db.services.insert_many(services)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —É—Å–ª—É–≥: {len(result.inserted_ids)}")


def create_production_rooms():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–æ–≤"""
    print("üè• –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–æ–≤...")

    rooms_list = ["–¢–µ—Ä–∞–ø–∏—è", "–≠–Ω–¥–æ–¥–æ–Ω—Ç–∏—è", "–û—Ä—Ç–æ–ø–µ–¥–∏—è", "–•–∏—Ä—É—Ä–≥–∏—è", "–î–µ—Ç—Å–∫–∏–π", "–û—Ä—Ç–æ–¥–æ–Ω—Ç–∏—è"]

    rooms = []
    for i, room_name in enumerate(rooms_list, 1):
        rooms.append(
            {"name": room_name, "number": i, "is_active": True, "created_at": datetime.now()}
        )

    result = db.rooms.insert_many(rooms)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –∫–∞–±–∏–Ω–µ—Ç–æ–≤: {len(result.inserted_ids)}")


def create_indexes():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"""
    print("üîç –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤...")

    # –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
    db.users.create_index("login", unique=True)
    db.doctors.create_index("phone")
    db.services.create_index("name")
    db.appointments.create_index([("date", 1), ("time", 1)])
    db.appointments.create_index("doctor_id")
    db.patients.create_index("phone")
    db.finances.create_index([("date", 1), ("service_id", 1)])

    print("‚úÖ –ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –Ω–∞ Production –¥–∞–Ω–Ω—ã–µ...")
    print("=" * 50)

    try:
        # –®–∞–≥ 1: –û—á–∏—Å—Ç–∫–∞ demo –¥–∞–Ω–Ω—ã—Ö
        clear_demo_data()
        print()

        # –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ production –¥–∞–Ω–Ω—ã—Ö
        create_production_users()
        create_production_doctors()
        create_production_services()
        create_production_rooms()
        print()

        # –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤
        create_indexes()
        print()

        print("=" * 50)
        print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print()
        print("üìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
        print("   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: 4 (3 –∞–¥–º–∏–Ω–∞ + 1 —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä)")
        print("   üë®‚Äç‚öïÔ∏è –í—Ä–∞—á–∏: 5")
        print("   üí∞ –£—Å–ª—É–≥–∏: 55")
        print("   üè• –ö–∞–±–∏–Ω–µ—Ç—ã: 6")
        print()
        print("üîê –ü–∞—Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –≤—Å–µ—Ö: ClubStom2024!")
        print("‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É—é —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        raise


if __name__ == "__main__":
    main()
