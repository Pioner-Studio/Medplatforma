# fix_api_authentication.py
# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π API

import re


def fix_api_events_auth():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è api_events - —É–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ —Ä–æ–ª–∏"""
    print("=== –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ API events ===")

    with open("main.py", "r", encoding="utf-8") as f:
        content = f.read()

    # –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å @role_required –¥–ª—è api_events
    api_events_section = content.find('@app.route("/api/events")')
    if api_events_section == -1:
        print("‚ùå –ú–∞—Ä—à—Ä—É—Ç /api/events –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

    # –ë–µ—Ä–µ–º —Å–µ–∫—Ü–∏—é —Å —Ñ—É–Ω–∫—Ü–∏–µ–π api_events
    next_route = content.find("\n@app.route", api_events_section + 1)
    if next_route == -1:
        next_route = len(content)

    section = content[api_events_section:next_route]

    # –ó–∞–º–µ–Ω—è–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä
    if '@role_required("admin", "registrar", "doctor")' in section:
        print("–£–±–∏—Ä–∞–µ–º –∏–∑–±—ã—Ç–æ—á–Ω—ã–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä @role_required...")
        # –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å @role_required
        old_section = section
        new_section = re.sub(r'@role_required\("admin", "registrar", "doctor"\)\n', "", section)
        content = content.replace(old_section, new_section)
        print("‚úÖ –î–µ–∫–æ—Ä–∞—Ç–æ—Ä @role_required —É–¥–∞–ª–µ–Ω —Å api_events")
    elif "@role_required" in section:
        print("–ù–∞–π–¥–µ–Ω –¥—Ä—É–≥–æ–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä @role_required, —É–±–∏—Ä–∞–µ–º –µ–≥–æ...")
        old_section = section
        new_section = re.sub(r"@role_required[^\n]*\n", "", section)
        content = content.replace(old_section, new_section)
        print("‚úÖ –î–µ–∫–æ—Ä–∞—Ç–æ—Ä @role_required —É–¥–∞–ª–µ–Ω —Å api_events")
    else:
        print("‚úÖ –õ–∏—à–Ω–∏–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

    # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –æ—Å—Ç–∞–ª—Å—è —Ç–æ–ª—å–∫–æ @login_required
    if "@login_required" not in section:
        print("–î–æ–±–∞–≤–ª—è–µ–º @login_required –∫ api_events...")
        def_pos = content.find("def api_events():", api_events_section)
        if def_pos != -1:
            content = content[:def_pos] + "@login_required\n" + content[def_pos:]
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω @login_required")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    with open("main.py", "w", encoding="utf-8") as f:
        f.write(content)

    return True


def fix_other_api_endpoints():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –¥—Ä—É–≥–∏–µ API endpoints"""
    print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—Ä—É–≥–∏—Ö API endpoints ===")

    with open("main.py", "r", encoding="utf-8") as f:
        content = f.read()

    # API endpoints, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ—Å–ª–µ –ø—Ä–æ—Å—Ç–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    api_endpoints = [
        "/api/dicts",
        "/api/rooms/status_now",
        "/api/services_min",
        "/api/patients/min",
    ]

    changes_made = False

    for endpoint in api_endpoints:
        # –ò—â–µ–º –º–∞—Ä—à—Ä—É—Ç
        route_pattern = f'@app.route("{endpoint}"'
        route_pos = content.find(route_pattern)

        if route_pos != -1:
            # –ë–µ—Ä–µ–º —Å–µ–∫—Ü–∏—é –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
            next_route = content.find("\n@app.route", route_pos + 1)
            if next_route == -1:
                next_route = content.find("\ndef ", route_pos + 100)  # –∏–ª–∏ —Å–ª–µ–¥—É—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è
            if next_route == -1:
                next_route = len(content)

            section = content[route_pos:next_route]

            # –ï—Å–ª–∏ –µ—Å—Ç—å @role_required, –Ω–æ –Ω–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ - —É–±–∏—Ä–∞–µ–º
            if "@role_required" in section and endpoint in ["/api/dicts", "/api/rooms/status_now"]:
                print(f"–£–±–∏—Ä–∞–µ–º @role_required —Å {endpoint}...")
                old_section = section
                new_section = re.sub(r"@role_required[^\n]*\n", "", section)
                content = content.replace(old_section, new_section)
                changes_made = True
                print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω {endpoint}")

    if changes_made:
        with open("main.py", "w", encoding="utf-8") as f:
            f.write(content)
        print("‚úÖ API endpoints –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")
    else:
        print("‚úÖ API endpoints –≤ –ø–æ—Ä—è–¥–∫–µ")


def verify_calendar_route():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ä—à—Ä—É—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—è"""
    print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è ===")

    with open("main.py", "r", encoding="utf-8") as f:
        content = f.read()

    # –ò—â–µ–º –º–∞—Ä—à—Ä—É—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    calendar_pos = content.find('@app.route("/calendar")')
    if calendar_pos == -1:
        print("‚ùå –ú–∞—Ä—à—Ä—É—Ç /calendar –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ü–∏—é –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    next_route = content.find("\n@app.route", calendar_pos + 1)
    if next_route == -1:
        next_route = len(content)

    calendar_section = content[calendar_pos:next_route]

    # –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–ª—å–∫–æ @login_required, –±–µ–∑ @role_required
    if "@role_required" in calendar_section:
        print("–ù–∞–π–¥–µ–Ω @role_required –≤ calendar_view, —É–±–∏—Ä–∞–µ–º...")
        old_section = calendar_section
        new_section = re.sub(r"@role_required[^\n]*\n", "", calendar_section)
        content = content.replace(old_section, new_section)

        with open("main.py", "w", encoding="utf-8") as f:
            f.write(content)

        print("‚úÖ –£–±—Ä–∞–Ω @role_required —Å calendar_view")
    else:
        print("‚úÖ calendar_view –≤ –ø–æ—Ä—è–¥–∫–µ")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ @login_required
    if "@login_required" in calendar_section:
        print("‚úÖ @login_required –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    else:
        print("‚ùå @login_required –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ calendar_view")
        return False

    return True


def check_authentication_flow():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø–æ—Ç–æ–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ç–æ–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ ===")

    with open("main.py", "r", encoding="utf-8") as f:
        content = f.read()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ init_auth –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–∑–≤–∞–Ω
    if "init_auth(app)" in content:
        print("‚úÖ init_auth –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    else:
        print("‚ùå init_auth –Ω–µ –Ω–∞–π–¥–µ–Ω")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç production_auth
    if "from production_auth import" in content:
        print("‚úÖ production_auth –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    else:
        print("‚ùå production_auth –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º secret_key
    if "app.secret_key" in content:
        print("‚úÖ secret_key –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    else:
        print("‚ùå secret_key –Ω–µ –Ω–∞–π–¥–µ–Ω")


def test_fixed_endpoints():
    """–ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞"""
    print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ ===")

    try:
        with open("main.py", "r", encoding="utf-8") as f:
            code = f.read()

        compile(code, "main.py", "exec")
        print("‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        return True
    except SyntaxError as e:
        print(f"‚ùå –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏: {e}")
        return False


def main():
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò API")
    print("=" * 50)

    print("–ü—Ä–æ–±–ª–µ–º–∞: API /api/events –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 302 (—Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –ª–æ–≥–∏–Ω)")
    print("–†–µ—à–µ–Ω–∏–µ: –£–±–∏—Ä–∞–µ–º –∏–∑–±—ã—Ç–æ—á–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞")
    print()

    steps = [
        ("–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ api_events", fix_api_events_auth),
        ("–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—Ä—É–≥–∏—Ö API", fix_other_api_endpoints),
        ("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è", verify_calendar_route),
        ("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", check_authentication_flow),
        ("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞", test_fixed_endpoints),
    ]

    success_count = 0

    for step_name, step_func in steps:
        print(f"--- {step_name} ---")
        try:
            if step_func():
                success_count += 1
                print(f"‚úÖ {step_name} - OK")
            else:
                print(f"‚ùå {step_name} - FAILED")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ {step_name}: {e}")
        print()

    print("=" * 50)
    if success_count >= 4:
        print("‚úÖ –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø API –ò–°–ü–†–ê–í–õ–ï–ù–ê!")
        print()
        print("–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: Ctrl+C, –∑–∞—Ç–µ–º python main.py")
        print("2. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        print("3. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)")
        print("4. –ó–∞–ø–∏—Å–∏ –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ")
        print()
        print("–ï—Å–ª–∏ –∑–∞–ø–∏—Å–∏ –≤—Å–µ –µ—â–µ –Ω–µ –≤–∏–¥–Ω—ã:")
        print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)")
        print("- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
        print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ")
    else:
        print("‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")


if __name__ == "__main__":
    main()
