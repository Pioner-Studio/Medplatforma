    1: import random
    2: from pymongo import MongoClient
    3: from datetime import datetime, timedelta
    4: 
    5: client = MongoClient("mongodb+srv://medadmin:medpass123@medplatforma.cnv7fbo.mongodb.net/")
    6: db = client['medplatforma']
    7: 
    8: # РћС‡РёСЃС‚РёРј СЃС‚Р°СЂС‹С… РІСЂР°С‡РµР№
    9: db.doctors.delete_many({})
   10: 
   11: names = [
   12:     "РџРµС‚СЂРѕРІ Рџ.Рџ.", "РРІР°РЅРѕРІР° Рћ.Рљ.", "РљСѓР·РЅРµС†РѕРІ Рђ.РЎ.", "РЎРёРґРѕСЂРѕРІР° Р”.Р›.",
   13:     "РЎРјРёСЂРЅРѕРІ Рњ.Р’.", "РЎРѕРєРѕР»РѕРІР° Р•.Рђ.", "Р’Р°СЃРёР»СЊРµРІ Р.Р.", "РќРёРєРёС‚РёРЅР° Рќ.Рђ.",
   14:     "РњР°РєР°СЂРѕРІ Р’.Р .", "РћСЂР»РѕРІР° Р®.Р›."
   15: ]
   16: specialties = [
   17:     "РҐРёСЂСѓСЂРі", "РћСЂС‚РѕРїРµРґ", "РўРµСЂР°РїРµРІС‚", "Р“РёРіРёРµРЅРёСЃС‚", "РРјРїР»Р°РЅС‚РѕР»РѕРі", "РћСЂС‚РѕРґРѕРЅС‚"
   18: ]
   19: positions = [
   20:     "Р“Р»Р°РІРІСЂР°С‡", "РЎС‚РѕРјР°С‚РѕР»РѕРі-С‚РµСЂР°РїРµРІС‚", "РЎС‚РѕРјР°С‚РѕР»РѕРі-С…РёСЂСѓСЂРі", "РћСЂС‚РѕРґРѕРЅС‚", "РћСЂС‚РѕРїРµРґ", "Р“РёРіРёРµРЅРёСЃС‚"
   21: ]
   22: educations = [
   23:     "РњР“РњРЎРЈ РёРј. Р•РІРґРѕРєРёРјРѕРІР°, РґРёРїР»РѕРј СЃ РѕС‚Р»РёС‡РёРµРј (2010)",
   24:     "Р РќРРњРЈ РёРј. РџРёСЂРѕРіРѕРІР° (2012)",
   25:     "РЎР°РЅРєС‚-РџРµС‚РµСЂР±СѓСЂРіСЃРєРёР№ РјРµРґСѓРЅРёРІРµСЂСЃРёС‚РµС‚ (2014)",
   26:     "РљР°Р·Р°РЅСЃРєРёР№ Р“РњРЈ (2011)",
   27:     "РњРѕСЃРєРѕРІСЃРєРёР№ РјРµРґСѓРЅРёРІРµСЂСЃРёС‚РµС‚ (2013)"
   28: ]
   29: certificates = [
   30:     "РџРѕРІС‹С€РµРЅРёРµ РєРІР°Р»РёС„РёРєР°С†РёРё: Dentsply Sirona (2022)",
   31:     "РРјРїР»Р°РЅС‚РѕР»РѕРіРёСЏ Nobel Biocare (2023)",
   32:     "РљСѓСЂСЃ РјРёРєСЂРѕСЃРєРѕРїРЅРѕР№ С‚РµСЂР°РїРёРё (2021)",
   33:     "РђРІС‚РѕСЂСЃРєРёРµ РјР°СЃС‚РµСЂ-РєР»Р°СЃСЃС‹ (2022)",
   34:     "РЈС‡Р°СЃС‚РёРµ РІ РјРµР¶РґСѓРЅР°СЂРѕРґРЅС‹С… РєРѕРЅС„РµСЂРµРЅС†РёСЏС… (2024)"
   35: ]
   36: bios = [
   37:     "Р Р°Р±РѕС‚Р°РµС‚ РІ РєР»РёРЅРёРєРµ СЃ {since}. РЎРѕС‚РЅРё СѓСЃРїРµС€РЅС‹С… РѕРїРµСЂР°С†РёР№. Р’РЅРµРґСЂСЏРµС‚ СЃРѕРІСЂРµРјРµРЅРЅС‹Рµ РјРµС‚РѕРґРёРєРё.",
   38:     "РџРѕСЃС‚РѕСЏРЅРЅРѕ РїСЂРѕС…РѕРґРёС‚ РѕР±СѓС‡РµРЅРёРµ. Р’РµРґС‘С‚ РЅР°СѓС‡РЅСѓСЋ РґРµСЏС‚РµР»СЊРЅРѕСЃС‚СЊ.",
   39:     "РџСЂРѕРІРѕРґРёС‚ СЃР»РѕР¶РЅРµР№С€РёРµ РѕРїРµСЂР°С†РёРё Рё РєРѕРЅСЃСѓР»СЊС‚Р°С†РёРё. Р‘РѕР»РµРµ 1000 РґРѕРІРѕР»СЊРЅС‹С… РїР°С†РёРµРЅС‚РѕРІ.",
   40:     "Р›РµРєС‚РѕСЂ РјРµР¶РґСѓРЅР°СЂРѕРґРЅС‹С… РєРѕРЅРіСЂРµСЃСЃРѕРІ, СЌРєСЃРїРµСЂС‚ РІ СЌСЃС‚РµС‚РёС‡РµСЃРєРѕР№ СЃС‚РѕРјР°С‚РѕР»РѕРіРёРё.",
   41:     "Р Р°Р·СЂР°Р±РѕС‚Р°Р» СѓРЅРёРєР°Р»СЊРЅС‹Рµ РїСЂРѕС‚РѕРєРѕР»С‹ СЂРµР°Р±РёР»РёС‚Р°С†РёРё РїР°С†РёРµРЅС‚РѕРІ."
   42: ]
   43: reviews_samples = [
   44:     {"stars": 5, "text": "Р’СЂР°С‡ РѕС‚ Р‘РѕРіР°, СЂРµРєРѕРјРµРЅРґСѓСЋ РІСЃРµРј!", "date": "05.2024"},
   45:     {"stars": 4, "text": "РћС‡РµРЅСЊ РІРЅРёРјР°С‚РµР»СЊРЅС‹Р№, РІСЃС‘ РїРѕРґСЂРѕР±РЅРѕ РѕР±СЉСЏСЃРЅРёР».", "date": "03.2024"},
   46:     {"stars": 5, "text": "РЎРґРµР»Р°Р»Р° РёРјРїР»Р°РЅС‚Р°С†РёСЋ вЂ” СЂРµР·СѓР»СЊС‚Р°С‚ СЃСѓРїРµСЂ!", "date": "01.2024"},
   47:     {"stars": 5, "text": "РЎРїР°СЃРёР±Рѕ Р·Р° РїСЂРѕС„РµСЃСЃРёРѕРЅР°Р»РёР·Рј Рё Р·Р°Р±РѕС‚Сѓ!", "date": "11.2023"}
   48: ]
   49: cases_samples = [
   50:     {"before": "/static/cases/before1.jpg", "after": "/static/cases/after1.jpg"},
   51:     {"before": "/static/cases/before2.jpg", "after": "/static/cases/after2.jpg"}
   52: ]
   53: files_samples = [
   54:     {"type": "image", "url": "/static/files/sertifikat_1.jpg", "name": "РЎРµСЂС‚РёС„РёРєР°С‚ 2022"},
   55:     {"type": "pdf", "url": "/static/files/diplom.pdf", "name": "Р”РёРїР»РѕРј"},
   56: ]
   57: 
   58: def generate_events():
   59:     today = datetime(2025, 7, 8)
   60:     events = []
   61:     for i in range(3):
   62:         day = today + timedelta(days=i)
   63:         events.append({
   64:             "title": random.choice(["РџР»РѕРјР±Р°", "РљРѕРЅСЃСѓР»СЊС‚Р°С†РёСЏ", "Р›РµС‡РµРЅРёРµ", "РРјРїР»Р°РЅС‚Р°С†РёСЏ"]),
   65:             "start": (day + timedelta(hours=10 + i)).strftime('%Y-%m-%dT%H:00:00'),
   66:             "end": (day + timedelta(hours=10 + i, minutes=30)).strftime('%Y-%m-%dT%H:30:00'),
   67:             "color": random.choice(["#A2C6FA", "#B4F0C0", "#FDE8A5"])
   68:         })
   69:     return events
   70: 
   71: def random_phone():
   72:     return "+79" + "".join([str(random.randint(0, 9)) for _ in range(9)])
   73: 
   74: def random_email(name):
   75:     return name.replace(" ", ".").replace(".", "").lower() + "@clinic.ru"
   76: 
   77: def random_telegram(name):
   78:     return name.split()[0].lower() + str(random.randint(100, 999))
   79: 
   80: def random_whatsapp(phone):
   81:     return phone.replace("+", "")
   82: 
   83: # Р“РµРЅРµСЂР°С†РёСЏ СЂР°СЃРїРёСЃР°РЅРёСЏ РІ РїСЂР°РІРёР»СЊРЅРѕРј С„РѕСЂРјР°С‚Рµ РґР»СЏ РёРЅС‚РµСЂС„РµР№СЃР° (РџРЅ=1 ... РЎР±=6, Р’СЃ=0)
   84: def random_schedule():
   85:     work_days = sorted(random.sample([1,2,3,4,5,6], k=random.randint(4,6)))  # 4вЂ“6 СЂР°Р±РѕС‡РёС… РґРЅРµР№
   86:     sch = {}
   87:     for d in work_days:
   88:         start = random.choice(["09:00", "10:00", "12:00"])
   89:         end = random.choice(["16:00", "17:00", "18:00", "19:00"])
   90:         if start < end:
   91:             sch[str(d)] = {"start": start, "end": end}
   92:         else:
   93:             sch[str(d)] = {"start": "09:00", "end": "17:00"}
   94:     return sch
   95: 
   96: doctors = []
   97: for i, name in enumerate(names):
   98:     phone = random_phone()
   99:     since_year = 2012 + i % 7
  100:     experience = 2025 - since_year
  101:     doc = {
  102:         "_id": f"doc{str(i+1).zfill(3)}",
  103:         "full_name": name,
  104:         "avatar_url": f"/static/avatars/doctor_{i+1}.png",
  105:         "position": random.choice(positions),
  106:         "specialization": random.choice(specialties),
  107:         "phone": phone,
  108:         "email": random_email(name),
  109:         "telegram": random_telegram(name),
  110:         "whatsapp": random_whatsapp(phone),
  111:         "reg_address": "Рі. РњРѕСЃРєРІР°, СѓР». РџСЂРѕС„СЃРѕСЋР·РЅР°СЏ, Рґ. " + str(5+i),
  112:         "live_address": "Рі. РњРѕСЃРєРІР°, СѓР». РџСЂРѕС„СЃРѕСЋР·РЅР°СЏ, Рґ. " + str(5+i),
  113:         "notes": "Р’СЂР°С‡ РІС‹СЃС€РµР№ РєР°С‚РµРіРѕСЂРёРё.",
  114:         "schedule": random_schedule(),
  115:         "card_number": f"DOC{1000+i}",
  116:         "created_at": "2025-07-01",
  117:         "since": str(since_year),
  118:         "experience": experience,
  119:         "education": random.choice(educations),
  120:         "certificates": random.choice(certificates),
  121:         "bio": random.choice(bios).format(since=since_year),
  122:         "files": random.sample(files_samples, k=random.randint(1,2)),
  123:         "reviews": random.sample(reviews_samples, k=random.randint(2,4)),
  124:         "cases": random.sample(cases_samples, k=random.randint(1,2)),
  125:         "events": generate_events()
  126:     }
  127:     doctors.append(doc)
  128: 
  129: db.doctors.insert_many(doctors)
  130: print("Р”РµРјРѕ-РІСЂР°С‡Рё СЃ СЂР°СЃРїРёСЃР°РЅРёРµРј СѓСЃРїРµС€РЅРѕ СЃРіРµРЅРµСЂРёСЂРѕРІР°РЅС‹!")
