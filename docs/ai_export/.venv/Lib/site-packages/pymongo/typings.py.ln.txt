    1: # Copyright 2022-Present MongoDB, Inc.
    2: #
    3: # Licensed under the Apache License, Version 2.0 (the "License");
    4: # you may not use this file except in compliance with the License.
    5: # You may obtain a copy of the License at
    6: #
    7: # http://www.apache.org/licenses/LICENSE-2.0
    8: #
    9: # Unless required by applicable law or agreed to in writing, software
   10: # distributed under the License is distributed on an "AS IS" BASIS,
   11: # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   12: # See the License for the specific language governing permissions and
   13: # limitations under the License.
   14: 
   15: """Type aliases used by PyMongo"""
   16: from __future__ import annotations
   17: 
   18: from typing import (
   19:     TYPE_CHECKING,
   20:     Any,
   21:     Mapping,
   22:     Optional,
   23:     Sequence,
   24:     Tuple,
   25:     TypeVar,
   26:     Union,
   27: )
   28: 
   29: from bson.typings import _DocumentOut, _DocumentType, _DocumentTypeArg
   30: 
   31: if TYPE_CHECKING:
   32:     from pymongo.collation import Collation
   33: 
   34: 
   35: # Common Shared Types.
   36: _Address = Tuple[str, Optional[int]]
   37: _CollationIn = Union[Mapping[str, Any], "Collation"]
   38: _Pipeline = Sequence[Mapping[str, Any]]
   39: ClusterTime = Mapping[str, Any]
   40: 
   41: _T = TypeVar("_T")
   42: 
   43: 
   44: def strip_optional(elem: Optional[_T]) -> _T:
   45:     """This function is to allow us to cast all of the elements of an iterator from Optional[_T] to _T
   46:     while inside a list comprehension.
   47:     """
   48:     assert elem is not None
   49:     return elem
   50: 
   51: 
   52: __all__ = [
   53:     "_DocumentOut",
   54:     "_DocumentType",
   55:     "_DocumentTypeArg",
   56:     "_Address",
   57:     "_CollationIn",
   58:     "_Pipeline",
   59:     "strip_optional",
   60: ]
