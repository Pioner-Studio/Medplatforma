    1: # Copyright 2022-present MongoDB, Inc.
    2: #
    3: # Licensed under the Apache License, Version 2.0 (the "License");
    4: # you may not use this file except in compliance with the License.
    5: # You may obtain a copy of the License at
    6: #
    7: # http://www.apache.org/licenses/LICENSE-2.0
    8: #
    9: # Unless required by applicable law or agreed to in writing, software
   10: # distributed under the License is distributed on an "AS IS" BASIS,
   11: # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   12: # See the License for the specific language governing permissions and
   13: # limitations under the License.
   14: from __future__ import annotations
   15: 
   16: import os
   17: import threading
   18: import weakref
   19: 
   20: _HAS_REGISTER_AT_FORK = hasattr(os, "register_at_fork")
   21: 
   22: # References to instances of _create_lock
   23: _forkable_locks: weakref.WeakSet[threading.Lock] = weakref.WeakSet()
   24: 
   25: 
   26: def _create_lock() -> threading.Lock:
   27:     """Represents a lock that is tracked upon instantiation using a WeakSet and
   28:     reset by pymongo upon forking.
   29:     """
   30:     lock = threading.Lock()
   31:     if _HAS_REGISTER_AT_FORK:
   32:         _forkable_locks.add(lock)
   33:     return lock
   34: 
   35: 
   36: def _release_locks() -> None:
   37:     # Completed the fork, reset all the locks in the child.
   38:     for lock in _forkable_locks:
   39:         if lock.locked():
   40:             lock.release()
