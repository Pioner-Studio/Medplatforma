    1: # Copyright 2018-present MongoDB, Inc.
    2: #
    3: # Licensed under the Apache License, Version 2.0 (the "License"); you
    4: # may not use this file except in compliance with the License.  You
    5: # may obtain a copy of the License at
    6: #
    7: # http://www.apache.org/licenses/LICENSE-2.0
    8: #
    9: # Unless required by applicable law or agreed to in writing, software
   10: # distributed under the License is distributed on an "AS IS" BASIS,
   11: # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
   12: # implied.  See the License for the specific language governing
   13: # permissions and limitations under the License.
   14: 
   15: """Advanced options for MongoDB drivers implemented on top of PyMongo."""
   16: from __future__ import annotations
   17: 
   18: from collections import namedtuple
   19: from typing import Optional
   20: 
   21: 
   22: class DriverInfo(namedtuple("DriverInfo", ["name", "version", "platform"])):
   23:     """Info about a driver wrapping PyMongo.
   24: 
   25:     The MongoDB server logs PyMongo's name, version, and platform whenever
   26:     PyMongo establishes a connection. A driver implemented on top of PyMongo
   27:     can add its own info to this log message. Initialize with three strings
   28:     like 'MyDriver', '1.2.3', 'some platform info'. Any of these strings may be
   29:     None to accept PyMongo's default.
   30:     """
   31: 
   32:     def __new__(
   33:         cls, name: str, version: Optional[str] = None, platform: Optional[str] = None
   34:     ) -> DriverInfo:
   35:         self = super().__new__(cls, name, version, platform)
   36:         for key, value in self._asdict().items():
   37:             if value is not None and not isinstance(value, str):
   38:                 raise TypeError(
   39:                     f"Wrong type for DriverInfo {key} option, value must be an instance of str"
   40:                 )
   41: 
   42:         return self
