    1: import numpy as np
    2: import pytest
    3: 
    4: from pandas._libs.tslibs import fields
    5: 
    6: import pandas._testing as tm
    7: 
    8: 
    9: @pytest.fixture
   10: def dtindex():
   11:     dtindex = np.arange(5, dtype=np.int64) * 10**9 * 3600 * 24 * 32
   12:     dtindex.flags.writeable = False
   13:     return dtindex
   14: 
   15: 
   16: def test_get_date_name_field_readonly(dtindex):
   17:     # https://github.com/vaexio/vaex/issues/357
   18:     #  fields functions shouldn't raise when we pass read-only data
   19:     result = fields.get_date_name_field(dtindex, "month_name")
   20:     expected = np.array(["January", "February", "March", "April", "May"], dtype=object)
   21:     tm.assert_numpy_array_equal(result, expected)
   22: 
   23: 
   24: def test_get_date_field_readonly(dtindex):
   25:     result = fields.get_date_field(dtindex, "Y")
   26:     expected = np.array([1970, 1970, 1970, 1970, 1970], dtype=np.int32)
   27:     tm.assert_numpy_array_equal(result, expected)
   28: 
   29: 
   30: def test_get_start_end_field_readonly(dtindex):
   31:     result = fields.get_start_end_field(dtindex, "is_month_start", None)
   32:     expected = np.array([True, False, False, False, False], dtype=np.bool_)
   33:     tm.assert_numpy_array_equal(result, expected)
   34: 
   35: 
   36: def test_get_timedelta_field_readonly(dtindex):
   37:     # treat dtindex as timedeltas for this next one
   38:     result = fields.get_timedelta_field(dtindex, "seconds")
   39:     expected = np.array([0] * 5, dtype=np.int32)
   40:     tm.assert_numpy_array_equal(result, expected)
