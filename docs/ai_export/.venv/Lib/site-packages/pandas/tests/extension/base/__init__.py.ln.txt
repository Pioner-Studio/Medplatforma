    1: """
    2: Base test suite for extension arrays.
    3: 
    4: These tests are intended for third-party libraries to subclass to validate
    5: that their extension arrays and dtypes satisfy the interface. Moving or
    6: renaming the tests should not be done lightly.
    7: 
    8: Libraries are expected to implement a few pytest fixtures to provide data
    9: for the tests. The fixtures may be located in either
   10: 
   11: * The same module as your test class.
   12: * A ``conftest.py`` in the same directory as your test class.
   13: 
   14: The full list of fixtures may be found in the ``conftest.py`` next to this
   15: file.
   16: 
   17: .. code-block:: python
   18: 
   19:    import pytest
   20:    from pandas.tests.extension.base import BaseDtypeTests
   21: 
   22: 
   23:    @pytest.fixture
   24:    def dtype():
   25:        return MyDtype()
   26: 
   27: 
   28:    class TestMyDtype(BaseDtypeTests):
   29:        pass
   30: 
   31: 
   32: Your class ``TestDtype`` will inherit all the tests defined on
   33: ``BaseDtypeTests``. pytest's fixture discover will supply your ``dtype``
   34: wherever the test requires it. You're free to implement additional tests.
   35: 
   36: """
   37: from pandas.tests.extension.base.accumulate import BaseAccumulateTests
   38: from pandas.tests.extension.base.casting import BaseCastingTests
   39: from pandas.tests.extension.base.constructors import BaseConstructorsTests
   40: from pandas.tests.extension.base.dim2 import (  # noqa: F401
   41:     Dim2CompatTests,
   42:     NDArrayBacked2DTests,
   43: )
   44: from pandas.tests.extension.base.dtype import BaseDtypeTests
   45: from pandas.tests.extension.base.getitem import BaseGetitemTests
   46: from pandas.tests.extension.base.groupby import BaseGroupbyTests
   47: from pandas.tests.extension.base.index import BaseIndexTests
   48: from pandas.tests.extension.base.interface import BaseInterfaceTests
   49: from pandas.tests.extension.base.io import BaseParsingTests
   50: from pandas.tests.extension.base.methods import BaseMethodsTests
   51: from pandas.tests.extension.base.missing import BaseMissingTests
   52: from pandas.tests.extension.base.ops import (  # noqa: F401
   53:     BaseArithmeticOpsTests,
   54:     BaseComparisonOpsTests,
   55:     BaseOpsUtil,
   56:     BaseUnaryOpsTests,
   57: )
   58: from pandas.tests.extension.base.printing import BasePrintingTests
   59: from pandas.tests.extension.base.reduce import BaseReduceTests
   60: from pandas.tests.extension.base.reshaping import BaseReshapingTests
   61: from pandas.tests.extension.base.setitem import BaseSetitemTests
   62: 
   63: 
   64: # One test class that you can inherit as an alternative to inheriting all the
   65: # test classes above.
   66: # Note 1) this excludes Dim2CompatTests and NDArrayBacked2DTests.
   67: # Note 2) this uses BaseReduceTests and and _not_ BaseBooleanReduceTests,
   68: #  BaseNoReduceTests, or BaseNumericReduceTests
   69: class ExtensionTests(
   70:     BaseAccumulateTests,
   71:     BaseCastingTests,
   72:     BaseConstructorsTests,
   73:     BaseDtypeTests,
   74:     BaseGetitemTests,
   75:     BaseGroupbyTests,
   76:     BaseIndexTests,
   77:     BaseInterfaceTests,
   78:     BaseParsingTests,
   79:     BaseMethodsTests,
   80:     BaseMissingTests,
   81:     BaseArithmeticOpsTests,
   82:     BaseComparisonOpsTests,
   83:     BaseUnaryOpsTests,
   84:     BasePrintingTests,
   85:     BaseReduceTests,
   86:     BaseReshapingTests,
   87:     BaseSetitemTests,
   88:     Dim2CompatTests,
   89: ):
   90:     pass
   91: 
   92: 
   93: def __getattr__(name: str):
   94:     import warnings
   95: 
   96:     if name == "BaseNoReduceTests":
   97:         warnings.warn(
   98:             "BaseNoReduceTests is deprecated and will be removed in a "
   99:             "future version. Use BaseReduceTests and override "
  100:             "`_supports_reduction` instead.",
  101:             FutureWarning,
  102:         )
  103:         from pandas.tests.extension.base.reduce import BaseNoReduceTests
  104: 
  105:         return BaseNoReduceTests
  106: 
  107:     elif name == "BaseNumericReduceTests":
  108:         warnings.warn(
  109:             "BaseNumericReduceTests is deprecated and will be removed in a "
  110:             "future version. Use BaseReduceTests and override "
  111:             "`_supports_reduction` instead.",
  112:             FutureWarning,
  113:         )
  114:         from pandas.tests.extension.base.reduce import BaseNumericReduceTests
  115: 
  116:         return BaseNumericReduceTests
  117: 
  118:     elif name == "BaseBooleanReduceTests":
  119:         warnings.warn(
  120:             "BaseBooleanReduceTests is deprecated and will be removed in a "
  121:             "future version. Use BaseReduceTests and override "
  122:             "`_supports_reduction` instead.",
  123:             FutureWarning,
  124:         )
  125:         from pandas.tests.extension.base.reduce import BaseBooleanReduceTests
  126: 
  127:         return BaseBooleanReduceTests
  128: 
  129:     raise AttributeError(
  130:         f"module 'pandas.tests.extension.base' has no attribute '{name}'"
  131:     )
