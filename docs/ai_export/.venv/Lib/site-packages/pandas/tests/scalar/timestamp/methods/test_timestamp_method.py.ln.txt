    1: # NB: This is for the Timestamp.timestamp *method* specifically, not
    2: # the Timestamp class in general.
    3: 
    4: from pytz import utc
    5: 
    6: from pandas._libs.tslibs import Timestamp
    7: import pandas.util._test_decorators as td
    8: 
    9: import pandas._testing as tm
   10: 
   11: 
   12: class TestTimestampMethod:
   13:     @td.skip_if_windows
   14:     def test_timestamp(self, fixed_now_ts):
   15:         # GH#17329
   16:         # tz-naive --> treat it as if it were UTC for purposes of timestamp()
   17:         ts = fixed_now_ts
   18:         uts = ts.replace(tzinfo=utc)
   19:         assert ts.timestamp() == uts.timestamp()
   20: 
   21:         tsc = Timestamp("2014-10-11 11:00:01.12345678", tz="US/Central")
   22:         utsc = tsc.tz_convert("UTC")
   23: 
   24:         # utsc is a different representation of the same time
   25:         assert tsc.timestamp() == utsc.timestamp()
   26: 
   27:         # datetime.timestamp() converts in the local timezone
   28:         with tm.set_timezone("UTC"):
   29:             # should agree with datetime.timestamp method
   30:             dt = ts.to_pydatetime()
   31:             assert dt.timestamp() == ts.timestamp()
