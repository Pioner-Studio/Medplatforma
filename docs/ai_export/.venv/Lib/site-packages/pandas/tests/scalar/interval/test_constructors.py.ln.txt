    1: import pytest
    2: 
    3: from pandas import (
    4:     Interval,
    5:     Period,
    6:     Timestamp,
    7: )
    8: 
    9: 
   10: class TestIntervalConstructors:
   11:     @pytest.mark.parametrize(
   12:         "left, right",
   13:         [
   14:             ("a", "z"),
   15:             (("a", "b"), ("c", "d")),
   16:             (list("AB"), list("ab")),
   17:             (Interval(0, 1), Interval(1, 2)),
   18:             (Period("2018Q1", freq="Q"), Period("2018Q1", freq="Q")),
   19:         ],
   20:     )
   21:     def test_construct_errors(self, left, right):
   22:         # GH#23013
   23:         msg = "Only numeric, Timestamp and Timedelta endpoints are allowed"
   24:         with pytest.raises(ValueError, match=msg):
   25:             Interval(left, right)
   26: 
   27:     def test_constructor_errors(self):
   28:         msg = "invalid option for 'closed': foo"
   29:         with pytest.raises(ValueError, match=msg):
   30:             Interval(0, 1, closed="foo")
   31: 
   32:         msg = "left side of interval must be <= right side"
   33:         with pytest.raises(ValueError, match=msg):
   34:             Interval(1, 0)
   35: 
   36:     @pytest.mark.parametrize(
   37:         "tz_left, tz_right", [(None, "UTC"), ("UTC", None), ("UTC", "US/Eastern")]
   38:     )
   39:     def test_constructor_errors_tz(self, tz_left, tz_right):
   40:         # GH#18538
   41:         left = Timestamp("2017-01-01", tz=tz_left)
   42:         right = Timestamp("2017-01-02", tz=tz_right)
   43: 
   44:         if tz_left is None or tz_right is None:
   45:             error = TypeError
   46:             msg = "Cannot compare tz-naive and tz-aware timestamps"
   47:         else:
   48:             error = ValueError
   49:             msg = "left and right must have the same time zone"
   50:         with pytest.raises(error, match=msg):
   51:             Interval(left, right)
