    1: from io import StringIO
    2: 
    3: import numpy as np
    4: import pytest
    5: 
    6: from pandas import (
    7:     DataFrame,
    8:     concat,
    9:     read_csv,
   10: )
   11: import pandas._testing as tm
   12: 
   13: 
   14: class TestInvalidConcat:
   15:     @pytest.mark.parametrize("obj", [1, {}, [1, 2], (1, 2)])
   16:     def test_concat_invalid(self, obj):
   17:         # trying to concat a ndframe with a non-ndframe
   18:         df1 = DataFrame(range(2))
   19:         msg = (
   20:             f"cannot concatenate object of type '{type(obj)}'; "
   21:             "only Series and DataFrame objs are valid"
   22:         )
   23:         with pytest.raises(TypeError, match=msg):
   24:             concat([df1, obj])
   25: 
   26:     def test_concat_invalid_first_argument(self):
   27:         df1 = DataFrame(range(2))
   28:         msg = (
   29:             "first argument must be an iterable of pandas "
   30:             'objects, you passed an object of type "DataFrame"'
   31:         )
   32:         with pytest.raises(TypeError, match=msg):
   33:             concat(df1)
   34: 
   35:     def test_concat_generator_obj(self):
   36:         # generator ok though
   37:         concat(DataFrame(np.random.default_rng(2).random((5, 5))) for _ in range(3))
   38: 
   39:     def test_concat_textreader_obj(self):
   40:         # text reader ok
   41:         # GH6583
   42:         data = """index,A,B,C,D
   43:                   foo,2,3,4,5
   44:                   bar,7,8,9,10
   45:                   baz,12,13,14,15
   46:                   qux,12,13,14,15
   47:                   foo2,12,13,14,15
   48:                   bar2,12,13,14,15
   49:                """
   50: 
   51:         with read_csv(StringIO(data), chunksize=1) as reader:
   52:             result = concat(reader, ignore_index=True)
   53:         expected = read_csv(StringIO(data))
   54:         tm.assert_frame_equal(result, expected)
