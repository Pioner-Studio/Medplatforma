    1: """
    2: Though Index.fillna and Series.fillna has separate impl,
    3: test here to confirm these works as the same
    4: """
    5: 
    6: import numpy as np
    7: import pytest
    8: 
    9: from pandas import MultiIndex
   10: import pandas._testing as tm
   11: from pandas.tests.base.common import allow_na_ops
   12: 
   13: 
   14: def test_fillna(index_or_series_obj):
   15:     # GH 11343
   16:     obj = index_or_series_obj
   17: 
   18:     if isinstance(obj, MultiIndex):
   19:         msg = "isna is not defined for MultiIndex"
   20:         with pytest.raises(NotImplementedError, match=msg):
   21:             obj.fillna(0)
   22:         return
   23: 
   24:     # values will not be changed
   25:     fill_value = obj.values[0] if len(obj) > 0 else 0
   26:     result = obj.fillna(fill_value)
   27: 
   28:     tm.assert_equal(obj, result)
   29: 
   30:     # check shallow_copied
   31:     assert obj is not result
   32: 
   33: 
   34: @pytest.mark.parametrize("null_obj", [np.nan, None])
   35: def test_fillna_null(null_obj, index_or_series_obj):
   36:     # GH 11343
   37:     obj = index_or_series_obj
   38:     klass = type(obj)
   39: 
   40:     if not allow_na_ops(obj):
   41:         pytest.skip(f"{klass} doesn't allow for NA operations")
   42:     elif len(obj) < 1:
   43:         pytest.skip("Test doesn't make sense on empty data")
   44:     elif isinstance(obj, MultiIndex):
   45:         pytest.skip(f"MultiIndex can't hold '{null_obj}'")
   46: 
   47:     values = obj._values
   48:     fill_value = values[0]
   49:     expected = values.copy()
   50:     values[0:2] = null_obj
   51:     expected[0:2] = fill_value
   52: 
   53:     expected = klass(expected)
   54:     obj = klass(values)
   55: 
   56:     result = obj.fillna(fill_value)
   57:     tm.assert_equal(result, expected)
   58: 
   59:     # check shallow_copied
   60:     assert obj is not result
