    1: import numpy as np
    2: import pytest
    3: 
    4: from pandas import (
    5:     DataFrame,
    6:     Series,
    7: )
    8: import pandas._testing as tm
    9: 
   10: 
   11: class TestDataFramePctChange:
   12:     @pytest.mark.parametrize(
   13:         "periods, fill_method, limit, exp",
   14:         [
   15:             (1, "ffill", None, [np.nan, np.nan, np.nan, 1, 1, 1.5, 0, 0]),
   16:             (1, "ffill", 1, [np.nan, np.nan, np.nan, 1, 1, 1.5, 0, np.nan]),
   17:             (1, "bfill", None, [np.nan, 0, 0, 1, 1, 1.5, np.nan, np.nan]),
   18:             (1, "bfill", 1, [np.nan, np.nan, 0, 1, 1, 1.5, np.nan, np.nan]),
   19:             (-1, "ffill", None, [np.nan, np.nan, -0.5, -0.5, -0.6, 0, 0, np.nan]),
   20:             (-1, "ffill", 1, [np.nan, np.nan, -0.5, -0.5, -0.6, 0, np.nan, np.nan]),
   21:             (-1, "bfill", None, [0, 0, -0.5, -0.5, -0.6, np.nan, np.nan, np.nan]),
   22:             (-1, "bfill", 1, [np.nan, 0, -0.5, -0.5, -0.6, np.nan, np.nan, np.nan]),
   23:         ],
   24:     )
   25:     def test_pct_change_with_nas(
   26:         self, periods, fill_method, limit, exp, frame_or_series
   27:     ):
   28:         vals = [np.nan, np.nan, 1, 2, 4, 10, np.nan, np.nan]
   29:         obj = frame_or_series(vals)
   30: 
   31:         msg = (
   32:             "The 'fill_method' keyword being not None and the 'limit' keyword in "
   33:             f"{type(obj).__name__}.pct_change are deprecated"
   34:         )
   35:         with tm.assert_produces_warning(FutureWarning, match=msg):
   36:             res = obj.pct_change(periods=periods, fill_method=fill_method, limit=limit)
   37:         tm.assert_equal(res, frame_or_series(exp))
   38: 
   39:     def test_pct_change_numeric(self):
   40:         # GH#11150
   41:         pnl = DataFrame(
   42:             [np.arange(0, 40, 10), np.arange(0, 40, 10), np.arange(0, 40, 10)]
   43:         ).astype(np.float64)
   44:         pnl.iat[1, 0] = np.nan
   45:         pnl.iat[1, 1] = np.nan
   46:         pnl.iat[2, 3] = 60
   47: 
   48:         msg = (
   49:             "The 'fill_method' keyword being not None and the 'limit' keyword in "
   50:             "DataFrame.pct_change are deprecated"
   51:         )
   52: 
   53:         for axis in range(2):
   54:             expected = pnl.ffill(axis=axis) / pnl.ffill(axis=axis).shift(axis=axis) - 1
   55: 
   56:             with tm.assert_produces_warning(FutureWarning, match=msg):
   57:                 result = pnl.pct_change(axis=axis, fill_method="pad")
   58:             tm.assert_frame_equal(result, expected)
   59: 
   60:     def test_pct_change(self, datetime_frame):
   61:         msg = (
   62:             "The 'fill_method' keyword being not None and the 'limit' keyword in "
   63:             "DataFrame.pct_change are deprecated"
   64:         )
   65: 
   66:         rs = datetime_frame.pct_change(fill_method=None)
   67:         tm.assert_frame_equal(rs, datetime_frame / datetime_frame.shift(1) - 1)
   68: 
   69:         rs = datetime_frame.pct_change(2)
   70:         filled = datetime_frame.ffill()
   71:         tm.assert_frame_equal(rs, filled / filled.shift(2) - 1)
   72: 
   73:         with tm.assert_produces_warning(FutureWarning, match=msg):
   74:             rs = datetime_frame.pct_change(fill_method="bfill", limit=1)
   75:         filled = datetime_frame.bfill(limit=1)
   76:         tm.assert_frame_equal(rs, filled / filled.shift(1) - 1)
   77: 
   78:         rs = datetime_frame.pct_change(freq="5D")
   79:         filled = datetime_frame.ffill()
   80:         tm.assert_frame_equal(
   81:             rs, (filled / filled.shift(freq="5D") - 1).reindex_like(filled)
   82:         )
   83: 
   84:     def test_pct_change_shift_over_nas(self):
   85:         s = Series([1.0, 1.5, np.nan, 2.5, 3.0])
   86: 
   87:         df = DataFrame({"a": s, "b": s})
   88: 
   89:         msg = "The default fill_method='pad' in DataFrame.pct_change is deprecated"
   90:         with tm.assert_produces_warning(FutureWarning, match=msg):
   91:             chg = df.pct_change()
   92: 
   93:         expected = Series([np.nan, 0.5, 0.0, 2.5 / 1.5 - 1, 0.2])
   94:         edf = DataFrame({"a": expected, "b": expected})
   95:         tm.assert_frame_equal(chg, edf)
   96: 
   97:     @pytest.mark.parametrize(
   98:         "freq, periods, fill_method, limit",
   99:         [
  100:             ("5B", 5, None, None),
  101:             ("3B", 3, None, None),
  102:             ("3B", 3, "bfill", None),
  103:             ("7B", 7, "pad", 1),
  104:             ("7B", 7, "bfill", 3),
  105:             ("14B", 14, None, None),
  106:         ],
  107:     )
  108:     def test_pct_change_periods_freq(
  109:         self, datetime_frame, freq, periods, fill_method, limit
  110:     ):
  111:         msg = (
  112:             "The 'fill_method' keyword being not None and the 'limit' keyword in "
  113:             "DataFrame.pct_change are deprecated"
  114:         )
  115: 
  116:         # GH#7292
  117:         with tm.assert_produces_warning(FutureWarning, match=msg):
  118:             rs_freq = datetime_frame.pct_change(
  119:                 freq=freq, fill_method=fill_method, limit=limit
  120:             )
  121:         with tm.assert_produces_warning(FutureWarning, match=msg):
  122:             rs_periods = datetime_frame.pct_change(
  123:                 periods, fill_method=fill_method, limit=limit
  124:             )
  125:         tm.assert_frame_equal(rs_freq, rs_periods)
  126: 
  127:         empty_ts = DataFrame(index=datetime_frame.index, columns=datetime_frame.columns)
  128:         with tm.assert_produces_warning(FutureWarning, match=msg):
  129:             rs_freq = empty_ts.pct_change(
  130:                 freq=freq, fill_method=fill_method, limit=limit
  131:             )
  132:         with tm.assert_produces_warning(FutureWarning, match=msg):
  133:             rs_periods = empty_ts.pct_change(
  134:                 periods, fill_method=fill_method, limit=limit
  135:             )
  136:         tm.assert_frame_equal(rs_freq, rs_periods)
  137: 
  138: 
  139: @pytest.mark.parametrize("fill_method", ["pad", "ffill", None])
  140: def test_pct_change_with_duplicated_indices(fill_method):
  141:     # GH30463
  142:     data = DataFrame(
  143:         {0: [np.nan, 1, 2, 3, 9, 18], 1: [0, 1, np.nan, 3, 9, 18]}, index=["a", "b"] * 3
  144:     )
  145: 
  146:     warn = None if fill_method is None else FutureWarning
  147:     msg = (
  148:         "The 'fill_method' keyword being not None and the 'limit' keyword in "
  149:         "DataFrame.pct_change are deprecated"
  150:     )
  151:     with tm.assert_produces_warning(warn, match=msg):
  152:         result = data.pct_change(fill_method=fill_method)
  153: 
  154:     if fill_method is None:
  155:         second_column = [np.nan, np.inf, np.nan, np.nan, 2.0, 1.0]
  156:     else:
  157:         second_column = [np.nan, np.inf, 0.0, 2.0, 2.0, 1.0]
  158:     expected = DataFrame(
  159:         {0: [np.nan, np.nan, 1.0, 0.5, 2.0, 1.0], 1: second_column},
  160:         index=["a", "b"] * 3,
  161:     )
  162:     tm.assert_frame_equal(result, expected)
  163: 
  164: 
  165: def test_pct_change_none_beginning_no_warning():
  166:     # GH#54481
  167:     df = DataFrame(
  168:         [
  169:             [1, None],
  170:             [2, 1],
  171:             [3, 2],
  172:             [4, 3],
  173:             [5, 4],
  174:         ]
  175:     )
  176:     result = df.pct_change()
  177:     expected = DataFrame(
  178:         {0: [np.nan, 1, 0.5, 1 / 3, 0.25], 1: [np.nan, np.nan, 1, 0.5, 1 / 3]}
  179:     )
  180:     tm.assert_frame_equal(result, expected)
