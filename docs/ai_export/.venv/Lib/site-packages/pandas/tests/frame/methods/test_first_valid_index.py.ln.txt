    1: """
    2: Includes test for last_valid_index.
    3: """
    4: import numpy as np
    5: import pytest
    6: 
    7: from pandas import (
    8:     DataFrame,
    9:     Index,
   10:     Series,
   11:     date_range,
   12: )
   13: 
   14: 
   15: class TestFirstValidIndex:
   16:     def test_first_valid_index_single_nan(self, frame_or_series):
   17:         # GH#9752 Series/DataFrame should both return None, not raise
   18:         obj = frame_or_series([np.nan])
   19: 
   20:         assert obj.first_valid_index() is None
   21:         assert obj.iloc[:0].first_valid_index() is None
   22: 
   23:     @pytest.mark.parametrize(
   24:         "empty", [DataFrame(), Series(dtype=object), Series([], index=[], dtype=object)]
   25:     )
   26:     def test_first_valid_index_empty(self, empty):
   27:         # GH#12800
   28:         assert empty.last_valid_index() is None
   29:         assert empty.first_valid_index() is None
   30: 
   31:     @pytest.mark.parametrize(
   32:         "data,idx,expected_first,expected_last",
   33:         [
   34:             ({"A": [1, 2, 3]}, [1, 1, 2], 1, 2),
   35:             ({"A": [1, 2, 3]}, [1, 2, 2], 1, 2),
   36:             ({"A": [1, 2, 3, 4]}, ["d", "d", "d", "d"], "d", "d"),
   37:             ({"A": [1, np.nan, 3]}, [1, 1, 2], 1, 2),
   38:             ({"A": [np.nan, np.nan, 3]}, [1, 1, 2], 2, 2),
   39:             ({"A": [1, np.nan, 3]}, [1, 2, 2], 1, 2),
   40:         ],
   41:     )
   42:     def test_first_last_valid_frame(self, data, idx, expected_first, expected_last):
   43:         # GH#21441
   44:         df = DataFrame(data, index=idx)
   45:         assert expected_first == df.first_valid_index()
   46:         assert expected_last == df.last_valid_index()
   47: 
   48:     @pytest.mark.parametrize(
   49:         "index",
   50:         [Index([str(i) for i in range(20)]), date_range("2020-01-01", periods=20)],
   51:     )
   52:     def test_first_last_valid(self, index):
   53:         mat = np.random.default_rng(2).standard_normal(len(index))
   54:         mat[:5] = np.nan
   55:         mat[-5:] = np.nan
   56: 
   57:         frame = DataFrame({"foo": mat}, index=index)
   58:         assert frame.first_valid_index() == frame.index[5]
   59:         assert frame.last_valid_index() == frame.index[-6]
   60: 
   61:         ser = frame["foo"]
   62:         assert ser.first_valid_index() == frame.index[5]
   63:         assert ser.last_valid_index() == frame.index[-6]
   64: 
   65:     @pytest.mark.parametrize(
   66:         "index",
   67:         [Index([str(i) for i in range(10)]), date_range("2020-01-01", periods=10)],
   68:     )
   69:     def test_first_last_valid_all_nan(self, index):
   70:         # GH#17400: no valid entries
   71:         frame = DataFrame(np.nan, columns=["foo"], index=index)
   72: 
   73:         assert frame.last_valid_index() is None
   74:         assert frame.first_valid_index() is None
   75: 
   76:         ser = frame["foo"]
   77:         assert ser.first_valid_index() is None
   78:         assert ser.last_valid_index() is None
