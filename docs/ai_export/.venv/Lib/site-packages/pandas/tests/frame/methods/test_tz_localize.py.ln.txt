    1: from datetime import timezone
    2: 
    3: import numpy as np
    4: import pytest
    5: 
    6: from pandas import (
    7:     DataFrame,
    8:     Series,
    9:     date_range,
   10: )
   11: import pandas._testing as tm
   12: 
   13: 
   14: class TestTZLocalize:
   15:     # See also:
   16:     # test_tz_convert_and_localize in test_tz_convert
   17: 
   18:     def test_tz_localize(self, frame_or_series):
   19:         rng = date_range("1/1/2011", periods=100, freq="h")
   20: 
   21:         obj = DataFrame({"a": 1}, index=rng)
   22:         obj = tm.get_obj(obj, frame_or_series)
   23: 
   24:         result = obj.tz_localize("utc")
   25:         expected = DataFrame({"a": 1}, rng.tz_localize("UTC"))
   26:         expected = tm.get_obj(expected, frame_or_series)
   27: 
   28:         assert result.index.tz is timezone.utc
   29:         tm.assert_equal(result, expected)
   30: 
   31:     def test_tz_localize_axis1(self):
   32:         rng = date_range("1/1/2011", periods=100, freq="h")
   33: 
   34:         df = DataFrame({"a": 1}, index=rng)
   35: 
   36:         df = df.T
   37:         result = df.tz_localize("utc", axis=1)
   38:         assert result.columns.tz is timezone.utc
   39: 
   40:         expected = DataFrame({"a": 1}, rng.tz_localize("UTC"))
   41: 
   42:         tm.assert_frame_equal(result, expected.T)
   43: 
   44:     def test_tz_localize_naive(self, frame_or_series):
   45:         # Can't localize if already tz-aware
   46:         rng = date_range("1/1/2011", periods=100, freq="h", tz="utc")
   47:         ts = Series(1, index=rng)
   48:         ts = frame_or_series(ts)
   49: 
   50:         with pytest.raises(TypeError, match="Already tz-aware"):
   51:             ts.tz_localize("US/Eastern")
   52: 
   53:     @pytest.mark.parametrize("copy", [True, False])
   54:     def test_tz_localize_copy_inplace_mutate(self, copy, frame_or_series):
   55:         # GH#6326
   56:         obj = frame_or_series(
   57:             np.arange(0, 5), index=date_range("20131027", periods=5, freq="1h", tz=None)
   58:         )
   59:         orig = obj.copy()
   60:         result = obj.tz_localize("UTC", copy=copy)
   61:         expected = frame_or_series(
   62:             np.arange(0, 5),
   63:             index=date_range("20131027", periods=5, freq="1h", tz="UTC"),
   64:         )
   65:         tm.assert_equal(result, expected)
   66:         tm.assert_equal(obj, orig)
   67:         assert result.index is not obj.index
   68:         assert result is not obj
