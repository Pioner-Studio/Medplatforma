    1: import numpy as np
    2: import pytest
    3: 
    4: from pandas import DataFrame
    5: import pandas._testing as tm
    6: 
    7: 
    8: class TestDataFrameReindexLike:
    9:     def test_reindex_like(self, float_frame):
   10:         other = float_frame.reindex(index=float_frame.index[:10], columns=["C", "B"])
   11: 
   12:         tm.assert_frame_equal(other, float_frame.reindex_like(other))
   13: 
   14:     @pytest.mark.parametrize(
   15:         "method,expected_values",
   16:         [
   17:             ("nearest", [0, 1, 1, 2]),
   18:             ("pad", [np.nan, 0, 1, 1]),
   19:             ("backfill", [0, 1, 2, 2]),
   20:         ],
   21:     )
   22:     def test_reindex_like_methods(self, method, expected_values):
   23:         df = DataFrame({"x": list(range(5))})
   24: 
   25:         result = df.reindex_like(df, method=method, tolerance=0)
   26:         tm.assert_frame_equal(df, result)
   27:         result = df.reindex_like(df, method=method, tolerance=[0, 0, 0, 0])
   28:         tm.assert_frame_equal(df, result)
   29: 
   30:     def test_reindex_like_subclass(self):
   31:         # https://github.com/pandas-dev/pandas/issues/31925
   32:         class MyDataFrame(DataFrame):
   33:             pass
   34: 
   35:         expected = DataFrame()
   36:         df = MyDataFrame()
   37:         result = df.reindex_like(expected)
   38: 
   39:         tm.assert_frame_equal(result, expected)
