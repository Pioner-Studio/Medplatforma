    1: import numpy as np
    2: import pytest
    3: 
    4: from pandas import (
    5:     DataFrame,
    6:     DatetimeIndex,
    7:     PeriodIndex,
    8:     Series,
    9:     date_range,
   10:     period_range,
   11: )
   12: import pandas._testing as tm
   13: 
   14: 
   15: class TestToPeriod:
   16:     def test_to_period(self, frame_or_series):
   17:         K = 5
   18: 
   19:         dr = date_range("1/1/2000", "1/1/2001", freq="D")
   20:         obj = DataFrame(
   21:             np.random.default_rng(2).standard_normal((len(dr), K)),
   22:             index=dr,
   23:             columns=["A", "B", "C", "D", "E"],
   24:         )
   25:         obj["mix"] = "a"
   26:         obj = tm.get_obj(obj, frame_or_series)
   27: 
   28:         pts = obj.to_period()
   29:         exp = obj.copy()
   30:         exp.index = period_range("1/1/2000", "1/1/2001")
   31:         tm.assert_equal(pts, exp)
   32: 
   33:         pts = obj.to_period("M")
   34:         exp.index = exp.index.asfreq("M")
   35:         tm.assert_equal(pts, exp)
   36: 
   37:     def test_to_period_without_freq(self, frame_or_series):
   38:         # GH#7606 without freq
   39:         idx = DatetimeIndex(["2011-01-01", "2011-01-02", "2011-01-03", "2011-01-04"])
   40:         exp_idx = PeriodIndex(
   41:             ["2011-01-01", "2011-01-02", "2011-01-03", "2011-01-04"], freq="D"
   42:         )
   43: 
   44:         obj = DataFrame(
   45:             np.random.default_rng(2).standard_normal((4, 4)), index=idx, columns=idx
   46:         )
   47:         obj = tm.get_obj(obj, frame_or_series)
   48:         expected = obj.copy()
   49:         expected.index = exp_idx
   50:         tm.assert_equal(obj.to_period(), expected)
   51: 
   52:         if frame_or_series is DataFrame:
   53:             expected = obj.copy()
   54:             expected.columns = exp_idx
   55:             tm.assert_frame_equal(obj.to_period(axis=1), expected)
   56: 
   57:     def test_to_period_columns(self):
   58:         dr = date_range("1/1/2000", "1/1/2001")
   59:         df = DataFrame(np.random.default_rng(2).standard_normal((len(dr), 5)), index=dr)
   60:         df["mix"] = "a"
   61: 
   62:         df = df.T
   63:         pts = df.to_period(axis=1)
   64:         exp = df.copy()
   65:         exp.columns = period_range("1/1/2000", "1/1/2001")
   66:         tm.assert_frame_equal(pts, exp)
   67: 
   68:         pts = df.to_period("M", axis=1)
   69:         tm.assert_index_equal(pts.columns, exp.columns.asfreq("M"))
   70: 
   71:     def test_to_period_invalid_axis(self):
   72:         dr = date_range("1/1/2000", "1/1/2001")
   73:         df = DataFrame(np.random.default_rng(2).standard_normal((len(dr), 5)), index=dr)
   74:         df["mix"] = "a"
   75: 
   76:         msg = "No axis named 2 for object type DataFrame"
   77:         with pytest.raises(ValueError, match=msg):
   78:             df.to_period(axis=2)
   79: 
   80:     def test_to_period_raises(self, index, frame_or_series):
   81:         # https://github.com/pandas-dev/pandas/issues/33327
   82:         obj = Series(index=index, dtype=object)
   83:         if frame_or_series is DataFrame:
   84:             obj = obj.to_frame()
   85: 
   86:         if not isinstance(index, DatetimeIndex):
   87:             msg = f"unsupported Type {type(index).__name__}"
   88:             with pytest.raises(TypeError, match=msg):
   89:                 obj.to_period()
