    1: import numpy as np
    2: import pytest
    3: 
    4: import pandas.util._test_decorators as td
    5: 
    6: from pandas import (
    7:     Categorical,
    8:     DataFrame,
    9: )
   10: 
   11: # _is_homogeneous_type always returns True for ArrayManager
   12: pytestmark = td.skip_array_manager_invalid_test
   13: 
   14: 
   15: @pytest.mark.parametrize(
   16:     "data, expected",
   17:     [
   18:         # empty
   19:         (DataFrame(), True),
   20:         # multi-same
   21:         (DataFrame({"A": [1, 2], "B": [1, 2]}), True),
   22:         # multi-object
   23:         (
   24:             DataFrame(
   25:                 {
   26:                     "A": np.array([1, 2], dtype=object),
   27:                     "B": np.array(["a", "b"], dtype=object),
   28:                 },
   29:                 dtype="object",
   30:             ),
   31:             True,
   32:         ),
   33:         # multi-extension
   34:         (
   35:             DataFrame({"A": Categorical(["a", "b"]), "B": Categorical(["a", "b"])}),
   36:             True,
   37:         ),
   38:         # differ types
   39:         (DataFrame({"A": [1, 2], "B": [1.0, 2.0]}), False),
   40:         # differ sizes
   41:         (
   42:             DataFrame(
   43:                 {
   44:                     "A": np.array([1, 2], dtype=np.int32),
   45:                     "B": np.array([1, 2], dtype=np.int64),
   46:                 }
   47:             ),
   48:             False,
   49:         ),
   50:         # multi-extension differ
   51:         (
   52:             DataFrame({"A": Categorical(["a", "b"]), "B": Categorical(["b", "c"])}),
   53:             False,
   54:         ),
   55:     ],
   56: )
   57: def test_is_homogeneous_type(data, expected):
   58:     assert data._is_homogeneous_type is expected
