    1: import pytest
    2: 
    3: from pandas.core.frame import DataFrame
    4: 
    5: 
    6: @pytest.fixture
    7: def dataframe():
    8:     return DataFrame({"a": [1, 2], "b": [3, 4]})
    9: 
   10: 
   11: class TestDataFrameValidate:
   12:     """Tests for error handling related to data types of method arguments."""
   13: 
   14:     @pytest.mark.parametrize(
   15:         "func",
   16:         [
   17:             "query",
   18:             "eval",
   19:             "set_index",
   20:             "reset_index",
   21:             "dropna",
   22:             "drop_duplicates",
   23:             "sort_values",
   24:         ],
   25:     )
   26:     @pytest.mark.parametrize("inplace", [1, "True", [1, 2, 3], 5.0])
   27:     def test_validate_bool_args(self, dataframe, func, inplace):
   28:         msg = 'For argument "inplace" expected type bool'
   29:         kwargs = {"inplace": inplace}
   30: 
   31:         if func == "query":
   32:             kwargs["expr"] = "a > b"
   33:         elif func == "eval":
   34:             kwargs["expr"] = "a + b"
   35:         elif func == "set_index":
   36:             kwargs["keys"] = ["a"]
   37:         elif func == "sort_values":
   38:             kwargs["by"] = ["a"]
   39: 
   40:         with pytest.raises(ValueError, match=msg):
   41:             getattr(dataframe, func)(**kwargs)
