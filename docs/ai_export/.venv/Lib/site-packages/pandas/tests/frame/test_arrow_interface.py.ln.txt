    1: import ctypes
    2: 
    3: import pytest
    4: 
    5: import pandas.util._test_decorators as td
    6: 
    7: import pandas as pd
    8: 
    9: pa = pytest.importorskip("pyarrow")
   10: 
   11: 
   12: @td.skip_if_no("pyarrow", min_version="14.0")
   13: def test_dataframe_arrow_interface():
   14:     df = pd.DataFrame({"a": [1, 2, 3], "b": ["a", "b", "c"]})
   15: 
   16:     capsule = df.__arrow_c_stream__()
   17:     assert (
   18:         ctypes.pythonapi.PyCapsule_IsValid(
   19:             ctypes.py_object(capsule), b"arrow_array_stream"
   20:         )
   21:         == 1
   22:     )
   23: 
   24:     table = pa.table(df)
   25:     expected = pa.table({"a": [1, 2, 3], "b": ["a", "b", "c"]})
   26:     assert table.equals(expected)
   27: 
   28:     schema = pa.schema([("a", pa.int8()), ("b", pa.string())])
   29:     table = pa.table(df, schema=schema)
   30:     expected = expected.cast(schema)
   31:     assert table.equals(expected)
   32: 
   33: 
   34: @td.skip_if_no("pyarrow", min_version="15.0")
   35: def test_dataframe_to_arrow():
   36:     df = pd.DataFrame({"a": [1, 2, 3], "b": ["a", "b", "c"]})
   37: 
   38:     table = pa.RecordBatchReader.from_stream(df).read_all()
   39:     expected = pa.table({"a": [1, 2, 3], "b": ["a", "b", "c"]})
   40:     assert table.equals(expected)
   41: 
   42:     schema = pa.schema([("a", pa.int8()), ("b", pa.string())])
   43:     table = pa.RecordBatchReader.from_stream(df, schema=schema).read_all()
   44:     expected = expected.cast(schema)
   45:     assert table.equals(expected)
