    1: import numpy as np
    2: import pytest
    3: 
    4: from pandas import (
    5:     DataFrame,
    6:     Index,
    7:     NaT,
    8:     date_range,
    9: )
   10: 
   11: 
   12: @pytest.fixture
   13: def datetime_frame() -> DataFrame:
   14:     """
   15:     Fixture for DataFrame of floats with DatetimeIndex
   16: 
   17:     Columns are ['A', 'B', 'C', 'D']
   18:     """
   19:     return DataFrame(
   20:         np.random.default_rng(2).standard_normal((100, 4)),
   21:         columns=Index(list("ABCD"), dtype=object),
   22:         index=date_range("2000-01-01", periods=100, freq="B"),
   23:     )
   24: 
   25: 
   26: @pytest.fixture
   27: def float_string_frame():
   28:     """
   29:     Fixture for DataFrame of floats and strings with index of unique strings
   30: 
   31:     Columns are ['A', 'B', 'C', 'D', 'foo'].
   32:     """
   33:     df = DataFrame(
   34:         np.random.default_rng(2).standard_normal((30, 4)),
   35:         index=Index([f"foo_{i}" for i in range(30)], dtype=object),
   36:         columns=Index(list("ABCD"), dtype=object),
   37:     )
   38:     df["foo"] = "bar"
   39:     return df
   40: 
   41: 
   42: @pytest.fixture
   43: def mixed_float_frame():
   44:     """
   45:     Fixture for DataFrame of different float types with index of unique strings
   46: 
   47:     Columns are ['A', 'B', 'C', 'D'].
   48:     """
   49:     df = DataFrame(
   50:         {
   51:             col: np.random.default_rng(2).random(30, dtype=dtype)
   52:             for col, dtype in zip(
   53:                 list("ABCD"), ["float32", "float32", "float32", "float64"]
   54:             )
   55:         },
   56:         index=Index([f"foo_{i}" for i in range(30)], dtype=object),
   57:     )
   58:     # not supported by numpy random
   59:     df["C"] = df["C"].astype("float16")
   60:     return df
   61: 
   62: 
   63: @pytest.fixture
   64: def mixed_int_frame():
   65:     """
   66:     Fixture for DataFrame of different int types with index of unique strings
   67: 
   68:     Columns are ['A', 'B', 'C', 'D'].
   69:     """
   70:     return DataFrame(
   71:         {
   72:             col: np.ones(30, dtype=dtype)
   73:             for col, dtype in zip(list("ABCD"), ["int32", "uint64", "uint8", "int64"])
   74:         },
   75:         index=Index([f"foo_{i}" for i in range(30)], dtype=object),
   76:     )
   77: 
   78: 
   79: @pytest.fixture
   80: def timezone_frame():
   81:     """
   82:     Fixture for DataFrame of date_range Series with different time zones
   83: 
   84:     Columns are ['A', 'B', 'C']; some entries are missing
   85: 
   86:                A                         B                         C
   87:     0 2013-01-01 2013-01-01 00:00:00-05:00 2013-01-01 00:00:00+01:00
   88:     1 2013-01-02                       NaT                       NaT
   89:     2 2013-01-03 2013-01-03 00:00:00-05:00 2013-01-03 00:00:00+01:00
   90:     """
   91:     df = DataFrame(
   92:         {
   93:             "A": date_range("20130101", periods=3),
   94:             "B": date_range("20130101", periods=3, tz="US/Eastern"),
   95:             "C": date_range("20130101", periods=3, tz="CET"),
   96:         }
   97:     )
   98:     df.iloc[1, 1] = NaT
   99:     df.iloc[1, 2] = NaT
  100:     return df
