    1: import numpy as np
    2: import pytest
    3: 
    4: import pandas as pd
    5: from pandas.core.arrays.integer import (
    6:     Int8Dtype,
    7:     Int16Dtype,
    8:     Int32Dtype,
    9:     Int64Dtype,
   10:     UInt8Dtype,
   11:     UInt16Dtype,
   12:     UInt32Dtype,
   13:     UInt64Dtype,
   14: )
   15: 
   16: 
   17: def test_dtypes(dtype):
   18:     # smoke tests on auto dtype construction
   19: 
   20:     if dtype.is_signed_integer:
   21:         assert np.dtype(dtype.type).kind == "i"
   22:     else:
   23:         assert np.dtype(dtype.type).kind == "u"
   24:     assert dtype.name is not None
   25: 
   26: 
   27: @pytest.mark.parametrize(
   28:     "dtype, expected",
   29:     [
   30:         (Int8Dtype(), "Int8Dtype()"),
   31:         (Int16Dtype(), "Int16Dtype()"),
   32:         (Int32Dtype(), "Int32Dtype()"),
   33:         (Int64Dtype(), "Int64Dtype()"),
   34:         (UInt8Dtype(), "UInt8Dtype()"),
   35:         (UInt16Dtype(), "UInt16Dtype()"),
   36:         (UInt32Dtype(), "UInt32Dtype()"),
   37:         (UInt64Dtype(), "UInt64Dtype()"),
   38:     ],
   39: )
   40: def test_repr_dtype(dtype, expected):
   41:     assert repr(dtype) == expected
   42: 
   43: 
   44: def test_repr_array():
   45:     result = repr(pd.array([1, None, 3]))
   46:     expected = "<IntegerArray>\n[1, <NA>, 3]\nLength: 3, dtype: Int64"
   47:     assert result == expected
   48: 
   49: 
   50: def test_repr_array_long():
   51:     data = pd.array([1, 2, None] * 1000)
   52:     expected = (
   53:         "<IntegerArray>\n"
   54:         "[   1,    2, <NA>,    1,    2, <NA>,    1,    2, <NA>,    1,\n"
   55:         " ...\n"
   56:         " <NA>,    1,    2, <NA>,    1,    2, <NA>,    1,    2, <NA>]\n"
   57:         "Length: 3000, dtype: Int64"
   58:     )
   59:     result = repr(data)
   60:     assert result == expected
   61: 
   62: 
   63: def test_frame_repr(data_missing):
   64:     df = pd.DataFrame({"A": data_missing})
   65:     result = repr(df)
   66:     expected = "      A\n0  <NA>\n1     1"
   67:     assert result == expected
