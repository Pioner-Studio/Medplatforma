    1: import pytest
    2: 
    3: import pandas as pd
    4: import pandas._testing as tm
    5: from pandas.tests.arrays.masked_shared import (
    6:     ComparisonOps,
    7:     NumericOps,
    8: )
    9: 
   10: 
   11: class TestComparisonOps(NumericOps, ComparisonOps):
   12:     @pytest.mark.parametrize("other", [True, False, pd.NA, -1, 0, 1])
   13:     def test_scalar(self, other, comparison_op, dtype):
   14:         ComparisonOps.test_scalar(self, other, comparison_op, dtype)
   15: 
   16:     def test_compare_to_int(self, dtype, comparison_op):
   17:         # GH 28930
   18:         op_name = f"__{comparison_op.__name__}__"
   19:         s1 = pd.Series([1, None, 3], dtype=dtype)
   20:         s2 = pd.Series([1, None, 3], dtype="float")
   21: 
   22:         method = getattr(s1, op_name)
   23:         result = method(2)
   24: 
   25:         method = getattr(s2, op_name)
   26:         expected = method(2).astype("boolean")
   27:         expected[s2.isna()] = pd.NA
   28: 
   29:         tm.assert_series_equal(result, expected)
   30: 
   31: 
   32: def test_equals():
   33:     # GH-30652
   34:     # equals is generally tested in /tests/extension/base/methods, but this
   35:     # specifically tests that two arrays of the same class but different dtype
   36:     # do not evaluate equal
   37:     a1 = pd.array([1, 2, None], dtype="Int64")
   38:     a2 = pd.array([1, 2, None], dtype="Int32")
   39:     assert a1.equals(a2) is False
