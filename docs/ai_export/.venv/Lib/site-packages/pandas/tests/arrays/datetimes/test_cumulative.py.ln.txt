    1: import pytest
    2: 
    3: import pandas._testing as tm
    4: from pandas.core.arrays import DatetimeArray
    5: 
    6: 
    7: class TestAccumulator:
    8:     def test_accumulators_freq(self):
    9:         # GH#50297
   10:         arr = DatetimeArray._from_sequence(
   11:             [
   12:                 "2000-01-01",
   13:                 "2000-01-02",
   14:                 "2000-01-03",
   15:             ],
   16:             dtype="M8[ns]",
   17:         )._with_freq("infer")
   18:         result = arr._accumulate("cummin")
   19:         expected = DatetimeArray._from_sequence(["2000-01-01"] * 3, dtype="M8[ns]")
   20:         tm.assert_datetime_array_equal(result, expected)
   21: 
   22:         result = arr._accumulate("cummax")
   23:         expected = DatetimeArray._from_sequence(
   24:             [
   25:                 "2000-01-01",
   26:                 "2000-01-02",
   27:                 "2000-01-03",
   28:             ],
   29:             dtype="M8[ns]",
   30:         )
   31:         tm.assert_datetime_array_equal(result, expected)
   32: 
   33:     @pytest.mark.parametrize("func", ["cumsum", "cumprod"])
   34:     def test_accumulators_disallowed(self, func):
   35:         # GH#50297
   36:         arr = DatetimeArray._from_sequence(
   37:             [
   38:                 "2000-01-01",
   39:                 "2000-01-02",
   40:             ],
   41:             dtype="M8[ns]",
   42:         )._with_freq("infer")
   43:         with pytest.raises(TypeError, match=f"Accumulation {func}"):
   44:             arr._accumulate(func)
