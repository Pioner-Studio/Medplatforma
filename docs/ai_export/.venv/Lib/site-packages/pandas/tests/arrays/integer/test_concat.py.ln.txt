    1: import numpy as np
    2: import pytest
    3: 
    4: import pandas as pd
    5: import pandas._testing as tm
    6: 
    7: 
    8: @pytest.mark.parametrize(
    9:     "to_concat_dtypes, result_dtype",
   10:     [
   11:         (["Int64", "Int64"], "Int64"),
   12:         (["UInt64", "UInt64"], "UInt64"),
   13:         (["Int8", "Int8"], "Int8"),
   14:         (["Int8", "Int16"], "Int16"),
   15:         (["UInt8", "Int8"], "Int16"),
   16:         (["Int32", "UInt32"], "Int64"),
   17:         (["Int64", "UInt64"], "Float64"),
   18:         (["Int64", "boolean"], "object"),
   19:         (["UInt8", "boolean"], "object"),
   20:     ],
   21: )
   22: def test_concat_series(to_concat_dtypes, result_dtype):
   23:     # we expect the same dtypes as we would get with non-masked inputs,
   24:     #  just masked where available.
   25: 
   26:     result = pd.concat([pd.Series([0, 1, pd.NA], dtype=t) for t in to_concat_dtypes])
   27:     expected = pd.concat([pd.Series([0, 1, pd.NA], dtype=object)] * 2).astype(
   28:         result_dtype
   29:     )
   30:     tm.assert_series_equal(result, expected)
   31: 
   32:     # order doesn't matter for result
   33:     result = pd.concat(
   34:         [pd.Series([0, 1, pd.NA], dtype=t) for t in to_concat_dtypes[::-1]]
   35:     )
   36:     expected = pd.concat([pd.Series([0, 1, pd.NA], dtype=object)] * 2).astype(
   37:         result_dtype
   38:     )
   39:     tm.assert_series_equal(result, expected)
   40: 
   41: 
   42: @pytest.mark.parametrize(
   43:     "to_concat_dtypes, result_dtype",
   44:     [
   45:         (["Int64", "int64"], "Int64"),
   46:         (["UInt64", "uint64"], "UInt64"),
   47:         (["Int8", "int8"], "Int8"),
   48:         (["Int8", "int16"], "Int16"),
   49:         (["UInt8", "int8"], "Int16"),
   50:         (["Int32", "uint32"], "Int64"),
   51:         (["Int64", "uint64"], "Float64"),
   52:         (["Int64", "bool"], "object"),
   53:         (["UInt8", "bool"], "object"),
   54:     ],
   55: )
   56: def test_concat_series_with_numpy(to_concat_dtypes, result_dtype):
   57:     # we expect the same dtypes as we would get with non-masked inputs,
   58:     #  just masked where available.
   59: 
   60:     s1 = pd.Series([0, 1, pd.NA], dtype=to_concat_dtypes[0])
   61:     s2 = pd.Series(np.array([0, 1], dtype=to_concat_dtypes[1]))
   62:     result = pd.concat([s1, s2], ignore_index=True)
   63:     expected = pd.Series([0, 1, pd.NA, 0, 1], dtype=object).astype(result_dtype)
   64:     tm.assert_series_equal(result, expected)
   65: 
   66:     # order doesn't matter for result
   67:     result = pd.concat([s2, s1], ignore_index=True)
   68:     expected = pd.Series([0, 1, 0, 1, pd.NA], dtype=object).astype(result_dtype)
   69:     tm.assert_series_equal(result, expected)
