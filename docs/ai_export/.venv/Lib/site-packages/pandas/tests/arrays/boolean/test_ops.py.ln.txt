    1: import pandas as pd
    2: import pandas._testing as tm
    3: 
    4: 
    5: class TestUnaryOps:
    6:     def test_invert(self):
    7:         a = pd.array([True, False, None], dtype="boolean")
    8:         expected = pd.array([False, True, None], dtype="boolean")
    9:         tm.assert_extension_array_equal(~a, expected)
   10: 
   11:         expected = pd.Series(expected, index=["a", "b", "c"], name="name")
   12:         result = ~pd.Series(a, index=["a", "b", "c"], name="name")
   13:         tm.assert_series_equal(result, expected)
   14: 
   15:         df = pd.DataFrame({"A": a, "B": [True, False, False]}, index=["a", "b", "c"])
   16:         result = ~df
   17:         expected = pd.DataFrame(
   18:             {"A": expected, "B": [False, True, True]}, index=["a", "b", "c"]
   19:         )
   20:         tm.assert_frame_equal(result, expected)
   21: 
   22:     def test_abs(self):
   23:         # matching numpy behavior, abs is the identity function
   24:         arr = pd.array([True, False, None], dtype="boolean")
   25:         result = abs(arr)
   26: 
   27:         tm.assert_extension_array_equal(result, arr)
