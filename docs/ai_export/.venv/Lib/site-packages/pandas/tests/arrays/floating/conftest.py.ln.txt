    1: import numpy as np
    2: import pytest
    3: 
    4: import pandas as pd
    5: from pandas.core.arrays.floating import (
    6:     Float32Dtype,
    7:     Float64Dtype,
    8: )
    9: 
   10: 
   11: @pytest.fixture(params=[Float32Dtype, Float64Dtype])
   12: def dtype(request):
   13:     """Parametrized fixture returning a float 'dtype'"""
   14:     return request.param()
   15: 
   16: 
   17: @pytest.fixture
   18: def data(dtype):
   19:     """Fixture returning 'data' array according to parametrized float 'dtype'"""
   20:     return pd.array(
   21:         list(np.arange(0.1, 0.9, 0.1))
   22:         + [pd.NA]
   23:         + list(np.arange(1, 9.8, 0.1))
   24:         + [pd.NA]
   25:         + [9.9, 10.0],
   26:         dtype=dtype,
   27:     )
   28: 
   29: 
   30: @pytest.fixture
   31: def data_missing(dtype):
   32:     """
   33:     Fixture returning array with missing data according to parametrized float
   34:     'dtype'.
   35:     """
   36:     return pd.array([np.nan, 0.1], dtype=dtype)
   37: 
   38: 
   39: @pytest.fixture(params=["data", "data_missing"])
   40: def all_data(request, data, data_missing):
   41:     """Parametrized fixture returning 'data' or 'data_missing' float arrays.
   42: 
   43:     Used to test dtype conversion with and without missing values.
   44:     """
   45:     if request.param == "data":
   46:         return data
   47:     elif request.param == "data_missing":
   48:         return data_missing
