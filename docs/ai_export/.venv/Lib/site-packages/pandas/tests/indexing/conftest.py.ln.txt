    1: import numpy as np
    2: import pytest
    3: 
    4: from pandas import (
    5:     DataFrame,
    6:     Index,
    7:     MultiIndex,
    8:     Series,
    9:     date_range,
   10: )
   11: 
   12: 
   13: @pytest.fixture
   14: def series_ints():
   15:     return Series(np.random.default_rng(2).random(4), index=np.arange(0, 8, 2))
   16: 
   17: 
   18: @pytest.fixture
   19: def frame_ints():
   20:     return DataFrame(
   21:         np.random.default_rng(2).standard_normal((4, 4)),
   22:         index=np.arange(0, 8, 2),
   23:         columns=np.arange(0, 12, 3),
   24:     )
   25: 
   26: 
   27: @pytest.fixture
   28: def series_uints():
   29:     return Series(
   30:         np.random.default_rng(2).random(4),
   31:         index=Index(np.arange(0, 8, 2, dtype=np.uint64)),
   32:     )
   33: 
   34: 
   35: @pytest.fixture
   36: def frame_uints():
   37:     return DataFrame(
   38:         np.random.default_rng(2).standard_normal((4, 4)),
   39:         index=Index(range(0, 8, 2), dtype=np.uint64),
   40:         columns=Index(range(0, 12, 3), dtype=np.uint64),
   41:     )
   42: 
   43: 
   44: @pytest.fixture
   45: def series_labels():
   46:     return Series(np.random.default_rng(2).standard_normal(4), index=list("abcd"))
   47: 
   48: 
   49: @pytest.fixture
   50: def frame_labels():
   51:     return DataFrame(
   52:         np.random.default_rng(2).standard_normal((4, 4)),
   53:         index=list("abcd"),
   54:         columns=list("ABCD"),
   55:     )
   56: 
   57: 
   58: @pytest.fixture
   59: def series_ts():
   60:     return Series(
   61:         np.random.default_rng(2).standard_normal(4),
   62:         index=date_range("20130101", periods=4),
   63:     )
   64: 
   65: 
   66: @pytest.fixture
   67: def frame_ts():
   68:     return DataFrame(
   69:         np.random.default_rng(2).standard_normal((4, 4)),
   70:         index=date_range("20130101", periods=4),
   71:     )
   72: 
   73: 
   74: @pytest.fixture
   75: def series_floats():
   76:     return Series(
   77:         np.random.default_rng(2).random(4),
   78:         index=Index(range(0, 8, 2), dtype=np.float64),
   79:     )
   80: 
   81: 
   82: @pytest.fixture
   83: def frame_floats():
   84:     return DataFrame(
   85:         np.random.default_rng(2).standard_normal((4, 4)),
   86:         index=Index(range(0, 8, 2), dtype=np.float64),
   87:         columns=Index(range(0, 12, 3), dtype=np.float64),
   88:     )
   89: 
   90: 
   91: @pytest.fixture
   92: def series_mixed():
   93:     return Series(np.random.default_rng(2).standard_normal(4), index=[2, 4, "null", 8])
   94: 
   95: 
   96: @pytest.fixture
   97: def frame_mixed():
   98:     return DataFrame(
   99:         np.random.default_rng(2).standard_normal((4, 4)), index=[2, 4, "null", 8]
  100:     )
  101: 
  102: 
  103: @pytest.fixture
  104: def frame_empty():
  105:     return DataFrame()
  106: 
  107: 
  108: @pytest.fixture
  109: def series_empty():
  110:     return Series(dtype=object)
  111: 
  112: 
  113: @pytest.fixture
  114: def frame_multi():
  115:     return DataFrame(
  116:         np.random.default_rng(2).standard_normal((4, 4)),
  117:         index=MultiIndex.from_product([[1, 2], [3, 4]]),
  118:         columns=MultiIndex.from_product([[5, 6], [7, 8]]),
  119:     )
  120: 
  121: 
  122: @pytest.fixture
  123: def series_multi():
  124:     return Series(
  125:         np.random.default_rng(2).random(4),
  126:         index=MultiIndex.from_product([[1, 2], [3, 4]]),
  127:     )
