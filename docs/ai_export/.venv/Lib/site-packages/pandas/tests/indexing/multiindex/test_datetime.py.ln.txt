    1: from datetime import datetime
    2: 
    3: import numpy as np
    4: 
    5: from pandas import (
    6:     DataFrame,
    7:     Index,
    8:     MultiIndex,
    9:     Period,
   10:     Series,
   11:     period_range,
   12:     to_datetime,
   13: )
   14: import pandas._testing as tm
   15: 
   16: 
   17: def test_multiindex_period_datetime():
   18:     # GH4861, using datetime in period of multiindex raises exception
   19: 
   20:     idx1 = Index(["a", "a", "a", "b", "b"])
   21:     idx2 = period_range("2012-01", periods=len(idx1), freq="M")
   22:     s = Series(np.random.default_rng(2).standard_normal(len(idx1)), [idx1, idx2])
   23: 
   24:     # try Period as index
   25:     expected = s.iloc[0]
   26:     result = s.loc["a", Period("2012-01")]
   27:     assert result == expected
   28: 
   29:     # try datetime as index
   30:     result = s.loc["a", datetime(2012, 1, 1)]
   31:     assert result == expected
   32: 
   33: 
   34: def test_multiindex_datetime_columns():
   35:     # GH35015, using datetime as column indices raises exception
   36: 
   37:     mi = MultiIndex.from_tuples(
   38:         [(to_datetime("02/29/2020"), to_datetime("03/01/2020"))], names=["a", "b"]
   39:     )
   40: 
   41:     df = DataFrame([], columns=mi)
   42: 
   43:     expected_df = DataFrame(
   44:         [],
   45:         columns=MultiIndex.from_arrays(
   46:             [[to_datetime("02/29/2020")], [to_datetime("03/01/2020")]], names=["a", "b"]
   47:         ),
   48:     )
   49: 
   50:     tm.assert_frame_equal(df, expected_df)
