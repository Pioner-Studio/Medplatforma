    1: """
    2: Tests involving custom Index subclasses
    3: """
    4: import numpy as np
    5: 
    6: from pandas import (
    7:     DataFrame,
    8:     Index,
    9: )
   10: import pandas._testing as tm
   11: 
   12: 
   13: class CustomIndex(Index):
   14:     def __new__(cls, data, name=None):
   15:         # assert that this index class cannot hold strings
   16:         if any(isinstance(val, str) for val in data):
   17:             raise TypeError("CustomIndex cannot hold strings")
   18: 
   19:         if name is None and hasattr(data, "name"):
   20:             name = data.name
   21:         data = np.array(data, dtype="O")
   22: 
   23:         return cls._simple_new(data, name)
   24: 
   25: 
   26: def test_insert_fallback_to_base_index():
   27:     # https://github.com/pandas-dev/pandas/issues/47071
   28: 
   29:     idx = CustomIndex([1, 2, 3])
   30:     result = idx.insert(0, "string")
   31:     expected = Index(["string", 1, 2, 3], dtype=object)
   32:     tm.assert_index_equal(result, expected)
   33: 
   34:     df = DataFrame(
   35:         np.random.default_rng(2).standard_normal((2, 3)),
   36:         columns=idx,
   37:         index=Index([1, 2], name="string"),
   38:     )
   39:     result = df.reset_index()
   40:     tm.assert_index_equal(result.columns, expected)
