    1: import pytest
    2: 
    3: from pandas import (
    4:     DatetimeIndex,
    5:     Index,
    6:     MultiIndex,
    7:     Period,
    8:     date_range,
    9: )
   10: import pandas._testing as tm
   11: 
   12: 
   13: class TestMap:
   14:     def test_map(self):
   15:         rng = date_range("1/1/2000", periods=10)
   16: 
   17:         f = lambda x: x.strftime("%Y%m%d")
   18:         result = rng.map(f)
   19:         exp = Index([f(x) for x in rng])
   20:         tm.assert_index_equal(result, exp)
   21: 
   22:     def test_map_fallthrough(self, capsys):
   23:         # GH#22067, check we don't get warnings about silently ignored errors
   24:         dti = date_range("2017-01-01", "2018-01-01", freq="B")
   25: 
   26:         dti.map(lambda x: Period(year=x.year, month=x.month, freq="M"))
   27: 
   28:         captured = capsys.readouterr()
   29:         assert captured.err == ""
   30: 
   31:     def test_map_bug_1677(self):
   32:         index = DatetimeIndex(["2012-04-25 09:30:00.393000"])
   33:         f = index.asof
   34: 
   35:         result = index.map(f)
   36:         expected = Index([f(index[0])])
   37:         tm.assert_index_equal(result, expected)
   38: 
   39:     @pytest.mark.parametrize("name", [None, "name"])
   40:     def test_index_map(self, name):
   41:         # see GH#20990
   42:         count = 6
   43:         index = date_range("2018-01-01", periods=count, freq="ME", name=name).map(
   44:             lambda x: (x.year, x.month)
   45:         )
   46:         exp_index = MultiIndex.from_product(((2018,), range(1, 7)), names=[name, name])
   47:         tm.assert_index_equal(index, exp_index)
