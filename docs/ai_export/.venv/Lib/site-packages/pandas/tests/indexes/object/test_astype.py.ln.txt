    1: import pytest
    2: 
    3: from pandas import (
    4:     Index,
    5:     NaT,
    6:     Series,
    7: )
    8: import pandas._testing as tm
    9: 
   10: 
   11: def test_astype_str_from_bytes():
   12:     # https://github.com/pandas-dev/pandas/issues/38607
   13:     # GH#49658 pre-2.0 Index called .values.astype(str) here, which effectively
   14:     #  did a .decode() on the bytes object.  In 2.0 we go through
   15:     #  ensure_string_array which does f"{val}"
   16:     idx = Index(["гЃ‚", b"a"], dtype="object")
   17:     result = idx.astype(str)
   18:     expected = Index(["гЃ‚", "a"], dtype="object")
   19:     tm.assert_index_equal(result, expected)
   20: 
   21:     # while we're here, check that Series.astype behaves the same
   22:     result = Series(idx).astype(str)
   23:     expected = Series(expected, dtype=object)
   24:     tm.assert_series_equal(result, expected)
   25: 
   26: 
   27: def test_astype_invalid_nas_to_tdt64_raises():
   28:     # GH#45722 don't cast np.datetime64 NaTs to timedelta64 NaT
   29:     idx = Index([NaT.asm8] * 2, dtype=object)
   30: 
   31:     msg = r"Invalid type for timedelta scalar: <class 'numpy.datetime64'>"
   32:     with pytest.raises(TypeError, match=msg):
   33:         idx.astype("m8[ns]")
