    1: import pytest
    2: 
    3: from pandas import (
    4:     DatetimeIndex,
    5:     date_range,
    6: )
    7: 
    8: from pandas.tseries.offsets import (
    9:     BDay,
   10:     DateOffset,
   11:     Day,
   12:     Hour,
   13: )
   14: 
   15: 
   16: class TestFreq:
   17:     def test_freq_setter_errors(self):
   18:         # GH#20678
   19:         idx = DatetimeIndex(["20180101", "20180103", "20180105"])
   20: 
   21:         # setting with an incompatible freq
   22:         msg = (
   23:             "Inferred frequency 2D from passed values does not conform to "
   24:             "passed frequency 5D"
   25:         )
   26:         with pytest.raises(ValueError, match=msg):
   27:             idx._data.freq = "5D"
   28: 
   29:         # setting with non-freq string
   30:         with pytest.raises(ValueError, match="Invalid frequency"):
   31:             idx._data.freq = "foo"
   32: 
   33:     @pytest.mark.parametrize("values", [["20180101", "20180103", "20180105"], []])
   34:     @pytest.mark.parametrize("freq", ["2D", Day(2), "2B", BDay(2), "48h", Hour(48)])
   35:     @pytest.mark.parametrize("tz", [None, "US/Eastern"])
   36:     def test_freq_setter(self, values, freq, tz):
   37:         # GH#20678
   38:         idx = DatetimeIndex(values, tz=tz)
   39: 
   40:         # can set to an offset, converting from string if necessary
   41:         idx._data.freq = freq
   42:         assert idx.freq == freq
   43:         assert isinstance(idx.freq, DateOffset)
   44: 
   45:         # can reset to None
   46:         idx._data.freq = None
   47:         assert idx.freq is None
   48: 
   49:     def test_freq_view_safe(self):
   50:         # Setting the freq for one DatetimeIndex shouldn't alter the freq
   51:         #  for another that views the same data
   52: 
   53:         dti = date_range("2016-01-01", periods=5)
   54:         dta = dti._data
   55: 
   56:         dti2 = DatetimeIndex(dta)._with_freq(None)
   57:         assert dti2.freq is None
   58: 
   59:         # Original was not altered
   60:         assert dti.freq == "D"
   61:         assert dta.freq == "D"
