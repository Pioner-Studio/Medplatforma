    1: from datetime import (
    2:     datetime,
    3:     timezone,
    4: )
    5: 
    6: import dateutil.parser
    7: import dateutil.tz
    8: from dateutil.tz import tzlocal
    9: import numpy as np
   10: 
   11: from pandas import (
   12:     DatetimeIndex,
   13:     date_range,
   14:     to_datetime,
   15: )
   16: import pandas._testing as tm
   17: from pandas.tests.indexes.datetimes.test_timezones import FixedOffset
   18: 
   19: fixed_off = FixedOffset(-420, "-07:00")
   20: 
   21: 
   22: class TestToPyDatetime:
   23:     def test_dti_to_pydatetime(self):
   24:         dt = dateutil.parser.parse("2012-06-13T01:39:00Z")
   25:         dt = dt.replace(tzinfo=tzlocal())
   26: 
   27:         arr = np.array([dt], dtype=object)
   28: 
   29:         result = to_datetime(arr, utc=True)
   30:         assert result.tz is timezone.utc
   31: 
   32:         rng = date_range("2012-11-03 03:00", "2012-11-05 03:00", tz=tzlocal())
   33:         arr = rng.to_pydatetime()
   34:         result = to_datetime(arr, utc=True)
   35:         assert result.tz is timezone.utc
   36: 
   37:     def test_dti_to_pydatetime_fizedtz(self):
   38:         dates = np.array(
   39:             [
   40:                 datetime(2000, 1, 1, tzinfo=fixed_off),
   41:                 datetime(2000, 1, 2, tzinfo=fixed_off),
   42:                 datetime(2000, 1, 3, tzinfo=fixed_off),
   43:             ]
   44:         )
   45:         dti = DatetimeIndex(dates)
   46: 
   47:         result = dti.to_pydatetime()
   48:         tm.assert_numpy_array_equal(dates, result)
   49: 
   50:         result = dti._mpl_repr()
   51:         tm.assert_numpy_array_equal(dates, result)
