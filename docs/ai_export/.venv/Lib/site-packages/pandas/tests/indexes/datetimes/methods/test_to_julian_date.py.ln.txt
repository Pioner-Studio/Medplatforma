    1: import numpy as np
    2: 
    3: from pandas import (
    4:     Index,
    5:     Timestamp,
    6:     date_range,
    7: )
    8: import pandas._testing as tm
    9: 
   10: 
   11: class TestDateTimeIndexToJulianDate:
   12:     def test_1700(self):
   13:         dr = date_range(start=Timestamp("1710-10-01"), periods=5, freq="D")
   14:         r1 = Index([x.to_julian_date() for x in dr])
   15:         r2 = dr.to_julian_date()
   16:         assert isinstance(r2, Index) and r2.dtype == np.float64
   17:         tm.assert_index_equal(r1, r2)
   18: 
   19:     def test_2000(self):
   20:         dr = date_range(start=Timestamp("2000-02-27"), periods=5, freq="D")
   21:         r1 = Index([x.to_julian_date() for x in dr])
   22:         r2 = dr.to_julian_date()
   23:         assert isinstance(r2, Index) and r2.dtype == np.float64
   24:         tm.assert_index_equal(r1, r2)
   25: 
   26:     def test_hour(self):
   27:         dr = date_range(start=Timestamp("2000-02-27"), periods=5, freq="h")
   28:         r1 = Index([x.to_julian_date() for x in dr])
   29:         r2 = dr.to_julian_date()
   30:         assert isinstance(r2, Index) and r2.dtype == np.float64
   31:         tm.assert_index_equal(r1, r2)
   32: 
   33:     def test_minute(self):
   34:         dr = date_range(start=Timestamp("2000-02-27"), periods=5, freq="min")
   35:         r1 = Index([x.to_julian_date() for x in dr])
   36:         r2 = dr.to_julian_date()
   37:         assert isinstance(r2, Index) and r2.dtype == np.float64
   38:         tm.assert_index_equal(r1, r2)
   39: 
   40:     def test_second(self):
   41:         dr = date_range(start=Timestamp("2000-02-27"), periods=5, freq="s")
   42:         r1 = Index([x.to_julian_date() for x in dr])
   43:         r2 = dr.to_julian_date()
   44:         assert isinstance(r2, Index) and r2.dtype == np.float64
   45:         tm.assert_index_equal(r1, r2)
