    1: import dateutil.tz
    2: import numpy as np
    3: import pytest
    4: 
    5: from pandas import (
    6:     DatetimeIndex,
    7:     date_range,
    8:     to_datetime,
    9: )
   10: from pandas.core.arrays import datetimes
   11: 
   12: 
   13: class TestDatetimeIndexIteration:
   14:     @pytest.mark.parametrize(
   15:         "tz", [None, "UTC", "US/Central", dateutil.tz.tzoffset(None, -28800)]
   16:     )
   17:     def test_iteration_preserves_nanoseconds(self, tz):
   18:         # GH#19603
   19:         index = DatetimeIndex(
   20:             ["2018-02-08 15:00:00.168456358", "2018-02-08 15:00:00.168456359"], tz=tz
   21:         )
   22:         for i, ts in enumerate(index):
   23:             assert ts == index[i]  # pylint: disable=unnecessary-list-index-lookup
   24: 
   25:     def test_iter_readonly(self):
   26:         # GH#28055 ints_to_pydatetime with readonly array
   27:         arr = np.array([np.datetime64("2012-02-15T12:00:00.000000000")])
   28:         arr.setflags(write=False)
   29:         dti = to_datetime(arr)
   30:         list(dti)
   31: 
   32:     def test_iteration_preserves_tz(self):
   33:         # see GH#8890
   34:         index = date_range("2012-01-01", periods=3, freq="h", tz="US/Eastern")
   35: 
   36:         for i, ts in enumerate(index):
   37:             result = ts
   38:             expected = index[i]  # pylint: disable=unnecessary-list-index-lookup
   39:             assert result == expected
   40: 
   41:     def test_iteration_preserves_tz2(self):
   42:         index = date_range(
   43:             "2012-01-01", periods=3, freq="h", tz=dateutil.tz.tzoffset(None, -28800)
   44:         )
   45: 
   46:         for i, ts in enumerate(index):
   47:             result = ts
   48:             expected = index[i]  # pylint: disable=unnecessary-list-index-lookup
   49:             assert result._repr_base == expected._repr_base
   50:             assert result == expected
   51: 
   52:     def test_iteration_preserves_tz3(self):
   53:         # GH#9100
   54:         index = DatetimeIndex(
   55:             ["2014-12-01 03:32:39.987000-08:00", "2014-12-01 04:12:34.987000-08:00"]
   56:         )
   57:         for i, ts in enumerate(index):
   58:             result = ts
   59:             expected = index[i]  # pylint: disable=unnecessary-list-index-lookup
   60:             assert result._repr_base == expected._repr_base
   61:             assert result == expected
   62: 
   63:     @pytest.mark.parametrize("offset", [-5, -1, 0, 1])
   64:     def test_iteration_over_chunksize(self, offset, monkeypatch):
   65:         # GH#21012
   66:         chunksize = 5
   67:         index = date_range(
   68:             "2000-01-01 00:00:00", periods=chunksize - offset, freq="min"
   69:         )
   70:         num = 0
   71:         with monkeypatch.context() as m:
   72:             m.setattr(datetimes, "_ITER_CHUNKSIZE", chunksize)
   73:             for stamp in index:
   74:                 assert index[num] == stamp
   75:                 num += 1
   76:         assert num == len(index)
