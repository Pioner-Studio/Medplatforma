    1: import numpy as np
    2: 
    3: from pandas import PeriodIndex
    4: import pandas._testing as tm
    5: 
    6: 
    7: class TestFactorize:
    8:     def test_factorize_period(self):
    9:         idx1 = PeriodIndex(
   10:             ["2014-01", "2014-01", "2014-02", "2014-02", "2014-03", "2014-03"],
   11:             freq="M",
   12:         )
   13: 
   14:         exp_arr = np.array([0, 0, 1, 1, 2, 2], dtype=np.intp)
   15:         exp_idx = PeriodIndex(["2014-01", "2014-02", "2014-03"], freq="M")
   16: 
   17:         arr, idx = idx1.factorize()
   18:         tm.assert_numpy_array_equal(arr, exp_arr)
   19:         tm.assert_index_equal(idx, exp_idx)
   20: 
   21:         arr, idx = idx1.factorize(sort=True)
   22:         tm.assert_numpy_array_equal(arr, exp_arr)
   23:         tm.assert_index_equal(idx, exp_idx)
   24: 
   25:     def test_factorize_period_nonmonotonic(self):
   26:         idx2 = PeriodIndex(
   27:             ["2014-03", "2014-03", "2014-02", "2014-01", "2014-03", "2014-01"],
   28:             freq="M",
   29:         )
   30:         exp_idx = PeriodIndex(["2014-01", "2014-02", "2014-03"], freq="M")
   31: 
   32:         exp_arr = np.array([2, 2, 1, 0, 2, 0], dtype=np.intp)
   33:         arr, idx = idx2.factorize(sort=True)
   34:         tm.assert_numpy_array_equal(arr, exp_arr)
   35:         tm.assert_index_equal(idx, exp_idx)
   36: 
   37:         exp_arr = np.array([0, 0, 1, 2, 0, 2], dtype=np.intp)
   38:         exp_idx = PeriodIndex(["2014-03", "2014-02", "2014-01"], freq="M")
   39:         arr, idx = idx2.factorize()
   40:         tm.assert_numpy_array_equal(arr, exp_arr)
   41:         tm.assert_index_equal(idx, exp_idx)
