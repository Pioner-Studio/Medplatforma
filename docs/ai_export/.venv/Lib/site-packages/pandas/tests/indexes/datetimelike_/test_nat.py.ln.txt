    1: import numpy as np
    2: import pytest
    3: 
    4: from pandas import (
    5:     DatetimeIndex,
    6:     NaT,
    7:     PeriodIndex,
    8:     TimedeltaIndex,
    9: )
   10: import pandas._testing as tm
   11: 
   12: 
   13: class NATests:
   14:     def test_nat(self, index_without_na):
   15:         empty_index = index_without_na[:0]
   16: 
   17:         index_with_na = index_without_na.copy(deep=True)
   18:         index_with_na._data[1] = NaT
   19: 
   20:         assert empty_index._na_value is NaT
   21:         assert index_with_na._na_value is NaT
   22:         assert index_without_na._na_value is NaT
   23: 
   24:         idx = index_without_na
   25:         assert idx._can_hold_na
   26: 
   27:         tm.assert_numpy_array_equal(idx._isnan, np.array([False, False]))
   28:         assert idx.hasnans is False
   29: 
   30:         idx = index_with_na
   31:         assert idx._can_hold_na
   32: 
   33:         tm.assert_numpy_array_equal(idx._isnan, np.array([False, True]))
   34:         assert idx.hasnans is True
   35: 
   36: 
   37: class TestDatetimeIndexNA(NATests):
   38:     @pytest.fixture
   39:     def index_without_na(self, tz_naive_fixture):
   40:         tz = tz_naive_fixture
   41:         return DatetimeIndex(["2011-01-01", "2011-01-02"], tz=tz)
   42: 
   43: 
   44: class TestTimedeltaIndexNA(NATests):
   45:     @pytest.fixture
   46:     def index_without_na(self):
   47:         return TimedeltaIndex(["1 days", "2 days"])
   48: 
   49: 
   50: class TestPeriodIndexNA(NATests):
   51:     @pytest.fixture
   52:     def index_without_na(self):
   53:         return PeriodIndex(["2011-01-01", "2011-01-02"], freq="D")
