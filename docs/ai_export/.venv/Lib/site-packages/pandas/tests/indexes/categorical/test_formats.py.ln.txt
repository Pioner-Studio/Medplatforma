    1: """
    2: Tests for CategoricalIndex.__repr__ and related methods.
    3: """
    4: import pytest
    5: 
    6: from pandas._config import using_pyarrow_string_dtype
    7: import pandas._config.config as cf
    8: 
    9: from pandas import CategoricalIndex
   10: import pandas._testing as tm
   11: 
   12: 
   13: class TestCategoricalIndexRepr:
   14:     def test_format_different_scalar_lengths(self):
   15:         # GH#35439
   16:         idx = CategoricalIndex(["aaaaaaaaa", "b"])
   17:         expected = ["aaaaaaaaa", "b"]
   18:         msg = r"CategoricalIndex\.format is deprecated"
   19:         with tm.assert_produces_warning(FutureWarning, match=msg):
   20:             assert idx.format() == expected
   21: 
   22:     @pytest.mark.xfail(using_pyarrow_string_dtype(), reason="repr different")
   23:     def test_string_categorical_index_repr(self):
   24:         # short
   25:         idx = CategoricalIndex(["a", "bb", "ccc"])
   26:         expected = """CategoricalIndex(['a', 'bb', 'ccc'], categories=['a', 'bb', 'ccc'], ordered=False, dtype='category')"""  # noqa: E501
   27:         assert repr(idx) == expected
   28: 
   29:         # multiple lines
   30:         idx = CategoricalIndex(["a", "bb", "ccc"] * 10)
   31:         expected = """CategoricalIndex(['a', 'bb', 'ccc', 'a', 'bb', 'ccc', 'a', 'bb', 'ccc', 'a',
   32:                   'bb', 'ccc', 'a', 'bb', 'ccc', 'a', 'bb', 'ccc', 'a', 'bb',
   33:                   'ccc', 'a', 'bb', 'ccc', 'a', 'bb', 'ccc', 'a', 'bb', 'ccc'],
   34:                  categories=['a', 'bb', 'ccc'], ordered=False, dtype='category')"""  # noqa: E501
   35: 
   36:         assert repr(idx) == expected
   37: 
   38:         # truncated
   39:         idx = CategoricalIndex(["a", "bb", "ccc"] * 100)
   40:         expected = """CategoricalIndex(['a', 'bb', 'ccc', 'a', 'bb', 'ccc', 'a', 'bb', 'ccc', 'a',
   41:                   ...
   42:                   'ccc', 'a', 'bb', 'ccc', 'a', 'bb', 'ccc', 'a', 'bb', 'ccc'],
   43:                  categories=['a', 'bb', 'ccc'], ordered=False, dtype='category', length=300)"""  # noqa: E501
   44: 
   45:         assert repr(idx) == expected
   46: 
   47:         # larger categories
   48:         idx = CategoricalIndex(list("abcdefghijklmmo"))
   49:         expected = """CategoricalIndex(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',
   50:                   'm', 'm', 'o'],
   51:                  categories=['a', 'b', 'c', 'd', ..., 'k', 'l', 'm', 'o'], ordered=False, dtype='category')"""  # noqa: E501
   52: 
   53:         assert repr(idx) == expected
   54: 
   55:         # short
   56:         idx = CategoricalIndex(["гЃ‚", "гЃ„гЃ„", "гЃ†гЃ†гЃ†"])
   57:         expected = """CategoricalIndex(['гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†'], categories=['гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†'], ordered=False, dtype='category')"""  # noqa: E501
   58:         assert repr(idx) == expected
   59: 
   60:         # multiple lines
   61:         idx = CategoricalIndex(["гЃ‚", "гЃ„гЃ„", "гЃ†гЃ†гЃ†"] * 10)
   62:         expected = """CategoricalIndex(['гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚',
   63:                   'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„',
   64:                   'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†'],
   65:                  categories=['гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†'], ordered=False, dtype='category')"""  # noqa: E501
   66: 
   67:         assert repr(idx) == expected
   68: 
   69:         # truncated
   70:         idx = CategoricalIndex(["гЃ‚", "гЃ„гЃ„", "гЃ†гЃ†гЃ†"] * 100)
   71:         expected = """CategoricalIndex(['гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚',
   72:                   ...
   73:                   'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†'],
   74:                  categories=['гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†'], ordered=False, dtype='category', length=300)"""  # noqa: E501
   75: 
   76:         assert repr(idx) == expected
   77: 
   78:         # larger categories
   79:         idx = CategoricalIndex(list("гЃ‚гЃ„гЃ†гЃ€гЃЉгЃ‹гЃЌгЃЏгЃ‘гЃ“гЃ•гЃ—гЃ™гЃ›гЃќ"))
   80:         expected = """CategoricalIndex(['гЃ‚', 'гЃ„', 'гЃ†', 'гЃ€', 'гЃЉ', 'гЃ‹', 'гЃЌ', 'гЃЏ', 'гЃ‘', 'гЃ“', 'гЃ•', 'гЃ—',
   81:                   'гЃ™', 'гЃ›', 'гЃќ'],
   82:                  categories=['гЃ‚', 'гЃ„', 'гЃ†', 'гЃ€', ..., 'гЃ—', 'гЃ™', 'гЃ›', 'гЃќ'], ordered=False, dtype='category')"""  # noqa: E501
   83: 
   84:         assert repr(idx) == expected
   85: 
   86:         # Enable Unicode option -----------------------------------------
   87:         with cf.option_context("display.unicode.east_asian_width", True):
   88:             # short
   89:             idx = CategoricalIndex(["гЃ‚", "гЃ„гЃ„", "гЃ†гЃ†гЃ†"])
   90:             expected = """CategoricalIndex(['гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†'], categories=['гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†'], ordered=False, dtype='category')"""  # noqa: E501
   91:             assert repr(idx) == expected
   92: 
   93:             # multiple lines
   94:             idx = CategoricalIndex(["гЃ‚", "гЃ„гЃ„", "гЃ†гЃ†гЃ†"] * 10)
   95:             expected = """CategoricalIndex(['гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„',
   96:                   'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†',
   97:                   'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„',
   98:                   'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†'],
   99:                  categories=['гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†'], ordered=False, dtype='category')"""  # noqa: E501
  100: 
  101:             assert repr(idx) == expected
  102: 
  103:             # truncated
  104:             idx = CategoricalIndex(["гЃ‚", "гЃ„гЃ„", "гЃ†гЃ†гЃ†"] * 100)
  105:             expected = """CategoricalIndex(['гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„',
  106:                   'гЃ†гЃ†гЃ†', 'гЃ‚',
  107:                   ...
  108:                   'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†', 'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†',
  109:                   'гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†'],
  110:                  categories=['гЃ‚', 'гЃ„гЃ„', 'гЃ†гЃ†гЃ†'], ordered=False, dtype='category', length=300)"""  # noqa: E501
  111: 
  112:             assert repr(idx) == expected
  113: 
  114:             # larger categories
  115:             idx = CategoricalIndex(list("гЃ‚гЃ„гЃ†гЃ€гЃЉгЃ‹гЃЌгЃЏгЃ‘гЃ“гЃ•гЃ—гЃ™гЃ›гЃќ"))
  116:             expected = """CategoricalIndex(['гЃ‚', 'гЃ„', 'гЃ†', 'гЃ€', 'гЃЉ', 'гЃ‹', 'гЃЌ', 'гЃЏ', 'гЃ‘', 'гЃ“',
  117:                   'гЃ•', 'гЃ—', 'гЃ™', 'гЃ›', 'гЃќ'],
  118:                  categories=['гЃ‚', 'гЃ„', 'гЃ†', 'гЃ€', ..., 'гЃ—', 'гЃ™', 'гЃ›', 'гЃќ'], ordered=False, dtype='category')"""  # noqa: E501
  119: 
  120:             assert repr(idx) == expected
