    1: import numpy as np
    2: import pytest
    3: 
    4: from pandas.core.dtypes.cast import construct_1d_arraylike_from_scalar
    5: from pandas.core.dtypes.dtypes import CategoricalDtype
    6: 
    7: from pandas import (
    8:     Categorical,
    9:     Timedelta,
   10: )
   11: import pandas._testing as tm
   12: 
   13: 
   14: def test_cast_1d_array_like_from_scalar_categorical():
   15:     # see gh-19565
   16:     #
   17:     # Categorical result from scalar did not maintain
   18:     # categories and ordering of the passed dtype.
   19:     cats = ["a", "b", "c"]
   20:     cat_type = CategoricalDtype(categories=cats, ordered=False)
   21:     expected = Categorical(["a", "a"], categories=cats)
   22: 
   23:     result = construct_1d_arraylike_from_scalar("a", len(expected), cat_type)
   24:     tm.assert_categorical_equal(result, expected)
   25: 
   26: 
   27: def test_cast_1d_array_like_from_timestamp(fixed_now_ts):
   28:     # check we dont lose nanoseconds
   29:     ts = fixed_now_ts + Timedelta(1)
   30:     res = construct_1d_arraylike_from_scalar(ts, 2, np.dtype("M8[ns]"))
   31:     assert res[0] == ts
   32: 
   33: 
   34: def test_cast_1d_array_like_from_timedelta():
   35:     # check we dont lose nanoseconds
   36:     td = Timedelta(1)
   37:     res = construct_1d_arraylike_from_scalar(td, 2, np.dtype("m8[ns]"))
   38:     assert res[0] == td
   39: 
   40: 
   41: def test_cast_1d_array_like_mismatched_datetimelike():
   42:     td = np.timedelta64("NaT", "ns")
   43:     dt = np.datetime64("NaT", "ns")
   44: 
   45:     with pytest.raises(TypeError, match="Cannot cast"):
   46:         construct_1d_arraylike_from_scalar(td, 2, dt.dtype)
   47: 
   48:     with pytest.raises(TypeError, match="Cannot cast"):
   49:         construct_1d_arraylike_from_scalar(np.timedelta64(4, "ns"), 2, dt.dtype)
   50: 
   51:     with pytest.raises(TypeError, match="Cannot cast"):
   52:         construct_1d_arraylike_from_scalar(dt, 2, td.dtype)
   53: 
   54:     with pytest.raises(TypeError, match="Cannot cast"):
   55:         construct_1d_arraylike_from_scalar(np.datetime64(4, "ns"), 2, td.dtype)
