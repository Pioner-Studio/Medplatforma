    1: """
    2: Tests for offsets.BusinessHour
    3: """
    4: from __future__ import annotations
    5: 
    6: from datetime import (
    7:     datetime,
    8:     time as dt_time,
    9: )
   10: 
   11: import pytest
   12: 
   13: from pandas._libs.tslibs import (
   14:     Timedelta,
   15:     Timestamp,
   16: )
   17: from pandas._libs.tslibs.offsets import (
   18:     BDay,
   19:     BusinessHour,
   20:     Nano,
   21: )
   22: 
   23: from pandas import (
   24:     DatetimeIndex,
   25:     _testing as tm,
   26:     date_range,
   27: )
   28: from pandas.tests.tseries.offsets.common import assert_offset_equal
   29: 
   30: 
   31: @pytest.fixture
   32: def dt():
   33:     return datetime(2014, 7, 1, 10, 00)
   34: 
   35: 
   36: @pytest.fixture
   37: def _offset():
   38:     return BusinessHour
   39: 
   40: 
   41: @pytest.fixture
   42: def offset1():
   43:     return BusinessHour()
   44: 
   45: 
   46: @pytest.fixture
   47: def offset2():
   48:     return BusinessHour(n=3)
   49: 
   50: 
   51: @pytest.fixture
   52: def offset3():
   53:     return BusinessHour(n=-1)
   54: 
   55: 
   56: @pytest.fixture
   57: def offset4():
   58:     return BusinessHour(n=-4)
   59: 
   60: 
   61: @pytest.fixture
   62: def offset5():
   63:     return BusinessHour(start=dt_time(11, 0), end=dt_time(14, 30))
   64: 
   65: 
   66: @pytest.fixture
   67: def offset6():
   68:     return BusinessHour(start="20:00", end="05:00")
   69: 
   70: 
   71: @pytest.fixture
   72: def offset7():
   73:     return BusinessHour(n=-2, start=dt_time(21, 30), end=dt_time(6, 30))
   74: 
   75: 
   76: @pytest.fixture
   77: def offset8():
   78:     return BusinessHour(start=["09:00", "13:00"], end=["12:00", "17:00"])
   79: 
   80: 
   81: @pytest.fixture
   82: def offset9():
   83:     return BusinessHour(n=3, start=["09:00", "22:00"], end=["13:00", "03:00"])
   84: 
   85: 
   86: @pytest.fixture
   87: def offset10():
   88:     return BusinessHour(n=-1, start=["23:00", "13:00"], end=["02:00", "17:00"])
   89: 
   90: 
   91: class TestBusinessHour:
   92:     @pytest.mark.parametrize(
   93:         "start,end,match",
   94:         [
   95:             (
   96:                 dt_time(11, 0, 5),
   97:                 "17:00",
   98:                 "time data must be specified only with hour and minute",
   99:             ),
  100:             ("AAA", "17:00", "time data must match '%H:%M' format"),
  101:             ("14:00:05", "17:00", "time data must match '%H:%M' format"),
  102:             ([], "17:00", "Must include at least 1 start time"),
  103:             ("09:00", [], "Must include at least 1 end time"),
  104:             (
  105:                 ["09:00", "11:00"],
  106:                 "17:00",
  107:                 "number of starting time and ending time must be the same",
  108:             ),
  109:             (
  110:                 ["09:00", "11:00"],
  111:                 ["10:00"],
  112:                 "number of starting time and ending time must be the same",
  113:             ),
  114:             (
  115:                 ["09:00", "11:00"],
  116:                 ["12:00", "20:00"],
  117:                 r"invalid starting and ending time\(s\): opening hours should not "
  118:                 "touch or overlap with one another",
  119:             ),
  120:             (
  121:                 ["12:00", "20:00"],
  122:                 ["09:00", "11:00"],
  123:                 r"invalid starting and ending time\(s\): opening hours should not "
  124:                 "touch or overlap with one another",
  125:             ),
  126:         ],
  127:     )
  128:     def test_constructor_errors(self, start, end, match):
  129:         with pytest.raises(ValueError, match=match):
  130:             BusinessHour(start=start, end=end)
  131: 
  132:     def test_different_normalize_equals(self, _offset):
  133:         # GH#21404 changed __eq__ to return False when `normalize` does not match
  134:         offset = _offset()
  135:         offset2 = _offset(normalize=True)
  136:         assert offset != offset2
  137: 
  138:     def test_repr(
  139:         self,
  140:         offset1,
  141:         offset2,
  142:         offset3,
  143:         offset4,
  144:         offset5,
  145:         offset6,
  146:         offset7,
  147:         offset8,
  148:         offset9,
  149:         offset10,
  150:     ):
  151:         assert repr(offset1) == "<BusinessHour: bh=09:00-17:00>"
  152:         assert repr(offset2) == "<3 * BusinessHours: bh=09:00-17:00>"
  153:         assert repr(offset3) == "<-1 * BusinessHour: bh=09:00-17:00>"
  154:         assert repr(offset4) == "<-4 * BusinessHours: bh=09:00-17:00>"
  155: 
  156:         assert repr(offset5) == "<BusinessHour: bh=11:00-14:30>"
  157:         assert repr(offset6) == "<BusinessHour: bh=20:00-05:00>"
  158:         assert repr(offset7) == "<-2 * BusinessHours: bh=21:30-06:30>"
  159:         assert repr(offset8) == "<BusinessHour: bh=09:00-12:00,13:00-17:00>"
  160:         assert repr(offset9) == "<3 * BusinessHours: bh=09:00-13:00,22:00-03:00>"
  161:         assert repr(offset10) == "<-1 * BusinessHour: bh=13:00-17:00,23:00-02:00>"
  162: 
  163:     def test_with_offset(self, dt):
  164:         expected = Timestamp("2014-07-01 13:00")
  165: 
  166:         assert dt + BusinessHour() * 3 == expected
  167:         assert dt + BusinessHour(n=3) == expected
  168: 
  169:     @pytest.mark.parametrize(
  170:         "offset_name",
  171:         ["offset1", "offset2", "offset3", "offset4", "offset8", "offset9", "offset10"],
  172:     )
  173:     def test_eq_attribute(self, offset_name, request):
  174:         offset = request.getfixturevalue(offset_name)
  175:         assert offset == offset
  176: 
  177:     @pytest.mark.parametrize(
  178:         "offset1,offset2",
  179:         [
  180:             (BusinessHour(start="09:00"), BusinessHour()),
  181:             (
  182:                 BusinessHour(start=["23:00", "13:00"], end=["12:00", "17:00"]),
  183:                 BusinessHour(start=["13:00", "23:00"], end=["17:00", "12:00"]),
  184:             ),
  185:         ],
  186:     )
  187:     def test_eq(self, offset1, offset2):
  188:         assert offset1 == offset2
  189: 
  190:     @pytest.mark.parametrize(
  191:         "offset1,offset2",
  192:         [
  193:             (BusinessHour(), BusinessHour(-1)),
  194:             (BusinessHour(start="09:00"), BusinessHour(start="09:01")),
  195:             (
  196:                 BusinessHour(start="09:00", end="17:00"),
  197:                 BusinessHour(start="17:00", end="09:01"),
  198:             ),
  199:             (
  200:                 BusinessHour(start=["13:00", "23:00"], end=["18:00", "07:00"]),
  201:                 BusinessHour(start=["13:00", "23:00"], end=["17:00", "12:00"]),
  202:             ),
  203:         ],
  204:     )
  205:     def test_neq(self, offset1, offset2):
  206:         assert offset1 != offset2
  207: 
  208:     @pytest.mark.parametrize(
  209:         "offset_name",
  210:         ["offset1", "offset2", "offset3", "offset4", "offset8", "offset9", "offset10"],
  211:     )
  212:     def test_hash(self, offset_name, request):
  213:         offset = request.getfixturevalue(offset_name)
  214:         assert offset == offset
  215: 
  216:     def test_add_datetime(
  217:         self,
  218:         dt,
  219:         offset1,
  220:         offset2,
  221:         offset3,
  222:         offset4,
  223:         offset8,
  224:         offset9,
  225:         offset10,
  226:     ):
  227:         assert offset1 + dt == datetime(2014, 7, 1, 11)
  228:         assert offset2 + dt == datetime(2014, 7, 1, 13)
  229:         assert offset3 + dt == datetime(2014, 6, 30, 17)
  230:         assert offset4 + dt == datetime(2014, 6, 30, 14)
  231:         assert offset8 + dt == datetime(2014, 7, 1, 11)
  232:         assert offset9 + dt == datetime(2014, 7, 1, 22)
  233:         assert offset10 + dt == datetime(2014, 7, 1, 1)
  234: 
  235:     def test_sub(self, dt, offset2, _offset):
  236:         off = offset2
  237:         msg = "Cannot subtract datetime from offset"
  238:         with pytest.raises(TypeError, match=msg):
  239:             off - dt
  240:         assert 2 * off - off == off
  241: 
  242:         assert dt - offset2 == dt + _offset(-3)
  243: 
  244:     def test_multiply_by_zero(self, dt, offset1, offset2):
  245:         assert dt - 0 * offset1 == dt
  246:         assert dt + 0 * offset1 == dt
  247:         assert dt - 0 * offset2 == dt
  248:         assert dt + 0 * offset2 == dt
  249: 
  250:     def testRollback1(
  251:         self,
  252:         dt,
  253:         _offset,
  254:         offset1,
  255:         offset2,
  256:         offset3,
  257:         offset4,
  258:         offset5,
  259:         offset6,
  260:         offset7,
  261:         offset8,
  262:         offset9,
  263:         offset10,
  264:     ):
  265:         assert offset1.rollback(dt) == dt
  266:         assert offset2.rollback(dt) == dt
  267:         assert offset3.rollback(dt) == dt
  268:         assert offset4.rollback(dt) == dt
  269:         assert offset5.rollback(dt) == datetime(2014, 6, 30, 14, 30)
  270:         assert offset6.rollback(dt) == datetime(2014, 7, 1, 5, 0)
  271:         assert offset7.rollback(dt) == datetime(2014, 7, 1, 6, 30)
  272:         assert offset8.rollback(dt) == dt
  273:         assert offset9.rollback(dt) == dt
  274:         assert offset10.rollback(dt) == datetime(2014, 7, 1, 2)
  275: 
  276:         datet = datetime(2014, 7, 1, 0)
  277:         assert offset1.rollback(datet) == datetime(2014, 6, 30, 17)
  278:         assert offset2.rollback(datet) == datetime(2014, 6, 30, 17)
  279:         assert offset3.rollback(datet) == datetime(2014, 6, 30, 17)
  280:         assert offset4.rollback(datet) == datetime(2014, 6, 30, 17)
  281:         assert offset5.rollback(datet) == datetime(2014, 6, 30, 14, 30)
  282:         assert offset6.rollback(datet) == datet
  283:         assert offset7.rollback(datet) == datet
  284:         assert offset8.rollback(datet) == datetime(2014, 6, 30, 17)
  285:         assert offset9.rollback(datet) == datet
  286:         assert offset10.rollback(datet) == datet
  287: 
  288:         assert _offset(5).rollback(dt) == dt
  289: 
  290:     def testRollback2(self, _offset):
  291:         assert _offset(-3).rollback(datetime(2014, 7, 5, 15, 0)) == datetime(
  292:             2014, 7, 4, 17, 0
  293:         )
  294: 
  295:     def testRollforward1(
  296:         self,
  297:         dt,
  298:         _offset,
  299:         offset1,
  300:         offset2,
  301:         offset3,
  302:         offset4,
  303:         offset5,
  304:         offset6,
  305:         offset7,
  306:         offset8,
  307:         offset9,
  308:         offset10,
  309:     ):
  310:         assert offset1.rollforward(dt) == dt
  311:         assert offset2.rollforward(dt) == dt
  312:         assert offset3.rollforward(dt) == dt
  313:         assert offset4.rollforward(dt) == dt
  314:         assert offset5.rollforward(dt) == datetime(2014, 7, 1, 11, 0)
  315:         assert offset6.rollforward(dt) == datetime(2014, 7, 1, 20, 0)
  316:         assert offset7.rollforward(dt) == datetime(2014, 7, 1, 21, 30)
  317:         assert offset8.rollforward(dt) == dt
  318:         assert offset9.rollforward(dt) == dt
  319:         assert offset10.rollforward(dt) == datetime(2014, 7, 1, 13)
  320: 
  321:         datet = datetime(2014, 7, 1, 0)
  322:         assert offset1.rollforward(datet) == datetime(2014, 7, 1, 9)
  323:         assert offset2.rollforward(datet) == datetime(2014, 7, 1, 9)
  324:         assert offset3.rollforward(datet) == datetime(2014, 7, 1, 9)
  325:         assert offset4.rollforward(datet) == datetime(2014, 7, 1, 9)
  326:         assert offset5.rollforward(datet) == datetime(2014, 7, 1, 11)
  327:         assert offset6.rollforward(datet) == datet
  328:         assert offset7.rollforward(datet) == datet
  329:         assert offset8.rollforward(datet) == datetime(2014, 7, 1, 9)
  330:         assert offset9.rollforward(datet) == datet
  331:         assert offset10.rollforward(datet) == datet
  332: 
  333:         assert _offset(5).rollforward(dt) == dt
  334: 
  335:     def testRollforward2(self, _offset):
  336:         assert _offset(-3).rollforward(datetime(2014, 7, 5, 16, 0)) == datetime(
  337:             2014, 7, 7, 9
  338:         )
  339: 
  340:     def test_roll_date_object(self):
  341:         offset = BusinessHour()
  342: 
  343:         dt = datetime(2014, 7, 6, 15, 0)
  344: 
  345:         result = offset.rollback(dt)
  346:         assert result == datetime(2014, 7, 4, 17)
  347: 
  348:         result = offset.rollforward(dt)
  349:         assert result == datetime(2014, 7, 7, 9)
  350: 
  351:     normalize_cases = []
  352:     normalize_cases.append(
  353:         (
  354:             BusinessHour(normalize=True),
  355:             {
  356:                 datetime(2014, 7, 1, 8): datetime(2014, 7, 1),
  357:                 datetime(2014, 7, 1, 17): datetime(2014, 7, 2),
  358:                 datetime(2014, 7, 1, 16): datetime(2014, 7, 2),
  359:                 datetime(2014, 7, 1, 23): datetime(2014, 7, 2),
  360:                 datetime(2014, 7, 1, 0): datetime(2014, 7, 1),
  361:                 datetime(2014, 7, 4, 15): datetime(2014, 7, 4),
  362:                 datetime(2014, 7, 4, 15, 59): datetime(2014, 7, 4),
  363:                 datetime(2014, 7, 4, 16, 30): datetime(2014, 7, 7),
  364:                 datetime(2014, 7, 5, 23): datetime(2014, 7, 7),
  365:                 datetime(2014, 7, 6, 10): datetime(2014, 7, 7),
  366:             },
  367:         )
  368:     )
  369: 
  370:     normalize_cases.append(
  371:         (
  372:             BusinessHour(-1, normalize=True),
  373:             {
  374:                 datetime(2014, 7, 1, 8): datetime(2014, 6, 30),
  375:                 datetime(2014, 7, 1, 17): datetime(2014, 7, 1),
  376:                 datetime(2014, 7, 1, 16): datetime(2014, 7, 1),
  377:                 datetime(2014, 7, 1, 10): datetime(2014, 6, 30),
  378:                 datetime(2014, 7, 1, 0): datetime(2014, 6, 30),
  379:                 datetime(2014, 7, 7, 10): datetime(2014, 7, 4),
  380:                 datetime(2014, 7, 7, 10, 1): datetime(2014, 7, 7),
  381:                 datetime(2014, 7, 5, 23): datetime(2014, 7, 4),
  382:                 datetime(2014, 7, 6, 10): datetime(2014, 7, 4),
  383:             },
  384:         )
  385:     )
  386: 
  387:     normalize_cases.append(
  388:         (
  389:             BusinessHour(1, normalize=True, start="17:00", end="04:00"),
  390:             {
  391:                 datetime(2014, 7, 1, 8): datetime(2014, 7, 1),
  392:                 datetime(2014, 7, 1, 17): datetime(2014, 7, 1),
  393:                 datetime(2014, 7, 1, 23): datetime(2014, 7, 2),
  394:                 datetime(2014, 7, 2, 2): datetime(2014, 7, 2),
  395:                 datetime(2014, 7, 2, 3): datetime(2014, 7, 2),
  396:                 datetime(2014, 7, 4, 23): datetime(2014, 7, 5),
  397:                 datetime(2014, 7, 5, 2): datetime(2014, 7, 5),
  398:                 datetime(2014, 7, 7, 2): datetime(2014, 7, 7),
  399:                 datetime(2014, 7, 7, 17): datetime(2014, 7, 7),
  400:             },
  401:         )
  402:     )
  403: 
  404:     @pytest.mark.parametrize("case", normalize_cases)
  405:     def test_normalize(self, case):
  406:         offset, cases = case
  407:         for dt, expected in cases.items():
  408:             assert offset._apply(dt) == expected
  409: 
  410:     on_offset_cases = []
  411:     on_offset_cases.append(
  412:         (
  413:             BusinessHour(),
  414:             {
  415:                 datetime(2014, 7, 1, 9): True,
  416:                 datetime(2014, 7, 1, 8, 59): False,
  417:                 datetime(2014, 7, 1, 8): False,
  418:                 datetime(2014, 7, 1, 17): True,
  419:                 datetime(2014, 7, 1, 17, 1): False,
  420:                 datetime(2014, 7, 1, 18): False,
  421:                 datetime(2014, 7, 5, 9): False,
  422:                 datetime(2014, 7, 6, 12): False,
  423:             },
  424:         )
  425:     )
  426: 
  427:     on_offset_cases.append(
  428:         (
  429:             BusinessHour(start="10:00", end="15:00"),
  430:             {
  431:                 datetime(2014, 7, 1, 9): False,
  432:                 datetime(2014, 7, 1, 10): True,
  433:                 datetime(2014, 7, 1, 15): True,
  434:                 datetime(2014, 7, 1, 15, 1): False,
  435:                 datetime(2014, 7, 5, 12): False,
  436:                 datetime(2014, 7, 6, 12): False,
  437:             },
  438:         )
  439:     )
  440: 
  441:     on_offset_cases.append(
  442:         (
  443:             BusinessHour(start="19:00", end="05:00"),
  444:             {
  445:                 datetime(2014, 7, 1, 9, 0): False,
  446:                 datetime(2014, 7, 1, 10, 0): False,
  447:                 datetime(2014, 7, 1, 15): False,
  448:                 datetime(2014, 7, 1, 15, 1): False,
  449:                 datetime(2014, 7, 5, 12, 0): False,
  450:                 datetime(2014, 7, 6, 12, 0): False,
  451:                 datetime(2014, 7, 1, 19, 0): True,
  452:                 datetime(2014, 7, 2, 0, 0): True,
  453:                 datetime(2014, 7, 4, 23): True,
  454:                 datetime(2014, 7, 5, 1): True,
  455:                 datetime(2014, 7, 5, 5, 0): True,
  456:                 datetime(2014, 7, 6, 23, 0): False,
  457:                 datetime(2014, 7, 7, 3, 0): False,
  458:             },
  459:         )
  460:     )
  461: 
  462:     on_offset_cases.append(
  463:         (
  464:             BusinessHour(start=["09:00", "13:00"], end=["12:00", "17:00"]),
  465:             {
  466:                 datetime(2014, 7, 1, 9): True,
  467:                 datetime(2014, 7, 1, 8, 59): False,
  468:                 datetime(2014, 7, 1, 8): False,
  469:                 datetime(2014, 7, 1, 17): True,
  470:                 datetime(2014, 7, 1, 17, 1): False,
  471:                 datetime(2014, 7, 1, 18): False,
  472:                 datetime(2014, 7, 5, 9): False,
  473:                 datetime(2014, 7, 6, 12): False,
  474:                 datetime(2014, 7, 1, 12, 30): False,
  475:             },
  476:         )
  477:     )
  478: 
  479:     on_offset_cases.append(
  480:         (
  481:             BusinessHour(start=["19:00", "23:00"], end=["21:00", "05:00"]),
  482:             {
  483:                 datetime(2014, 7, 1, 9, 0): False,
  484:                 datetime(2014, 7, 1, 10, 0): False,
  485:                 datetime(2014, 7, 1, 15): False,
  486:                 datetime(2014, 7, 1, 15, 1): False,
  487:                 datetime(2014, 7, 5, 12, 0): False,
  488:                 datetime(2014, 7, 6, 12, 0): False,
  489:                 datetime(2014, 7, 1, 19, 0): True,
  490:                 datetime(2014, 7, 2, 0, 0): True,
  491:                 datetime(2014, 7, 4, 23): True,
  492:                 datetime(2014, 7, 5, 1): True,
  493:                 datetime(2014, 7, 5, 5, 0): True,
  494:                 datetime(2014, 7, 6, 23, 0): False,
  495:                 datetime(2014, 7, 7, 3, 0): False,
  496:                 datetime(2014, 7, 4, 22): False,
  497:             },
  498:         )
  499:     )
  500: 
  501:     @pytest.mark.parametrize("case", on_offset_cases)
  502:     def test_is_on_offset(self, case):
  503:         offset, cases = case
  504:         for dt, expected in cases.items():
  505:             assert offset.is_on_offset(dt) == expected
  506: 
  507:     apply_cases = [
  508:         (
  509:             BusinessHour(),
  510:             {
  511:                 datetime(2014, 7, 1, 11): datetime(2014, 7, 1, 12),
  512:                 datetime(2014, 7, 1, 13): datetime(2014, 7, 1, 14),
  513:                 datetime(2014, 7, 1, 15): datetime(2014, 7, 1, 16),
  514:                 datetime(2014, 7, 1, 19): datetime(2014, 7, 2, 10),
  515:                 datetime(2014, 7, 1, 16): datetime(2014, 7, 2, 9),
  516:                 datetime(2014, 7, 1, 16, 30, 15): datetime(2014, 7, 2, 9, 30, 15),
  517:                 datetime(2014, 7, 1, 17): datetime(2014, 7, 2, 10),
  518:                 datetime(2014, 7, 2, 11): datetime(2014, 7, 2, 12),
  519:                 # out of business hours
  520:                 datetime(2014, 7, 2, 8): datetime(2014, 7, 2, 10),
  521:                 datetime(2014, 7, 2, 19): datetime(2014, 7, 3, 10),
  522:                 datetime(2014, 7, 2, 23): datetime(2014, 7, 3, 10),
  523:                 datetime(2014, 7, 3, 0): datetime(2014, 7, 3, 10),
  524:                 # saturday
  525:                 datetime(2014, 7, 5, 15): datetime(2014, 7, 7, 10),
  526:                 datetime(2014, 7, 4, 17): datetime(2014, 7, 7, 10),
  527:                 datetime(2014, 7, 4, 16, 30): datetime(2014, 7, 7, 9, 30),
  528:                 datetime(2014, 7, 4, 16, 30, 30): datetime(2014, 7, 7, 9, 30, 30),
  529:             },
  530:         ),
  531:         (
  532:             BusinessHour(4),
  533:             {
  534:                 datetime(2014, 7, 1, 11): datetime(2014, 7, 1, 15),
  535:                 datetime(2014, 7, 1, 13): datetime(2014, 7, 2, 9),
  536:                 datetime(2014, 7, 1, 15): datetime(2014, 7, 2, 11),
  537:                 datetime(2014, 7, 1, 16): datetime(2014, 7, 2, 12),
  538:                 datetime(2014, 7, 1, 17): datetime(2014, 7, 2, 13),
  539:                 datetime(2014, 7, 2, 11): datetime(2014, 7, 2, 15),
  540:                 datetime(2014, 7, 2, 8): datetime(2014, 7, 2, 13),
  541:                 datetime(2014, 7, 2, 19): datetime(2014, 7, 3, 13),
  542:                 datetime(2014, 7, 2, 23): datetime(2014, 7, 3, 13),
  543:                 datetime(2014, 7, 3, 0): datetime(2014, 7, 3, 13),
  544:                 datetime(2014, 7, 5, 15): datetime(2014, 7, 7, 13),
  545:                 datetime(2014, 7, 4, 17): datetime(2014, 7, 7, 13),
  546:                 datetime(2014, 7, 4, 16, 30): datetime(2014, 7, 7, 12, 30),
  547:                 datetime(2014, 7, 4, 16, 30, 30): datetime(2014, 7, 7, 12, 30, 30),
  548:             },
  549:         ),
  550:         (
  551:             BusinessHour(-1),
  552:             {
  553:                 datetime(2014, 7, 1, 11): datetime(2014, 7, 1, 10),
  554:                 datetime(2014, 7, 1, 13): datetime(2014, 7, 1, 12),
  555:                 datetime(2014, 7, 1, 15): datetime(2014, 7, 1, 14),
  556:                 datetime(2014, 7, 1, 16): datetime(2014, 7, 1, 15),
  557:                 datetime(2014, 7, 1, 10): datetime(2014, 6, 30, 17),
  558:                 datetime(2014, 7, 1, 16, 30, 15): datetime(2014, 7, 1, 15, 30, 15),
  559:                 datetime(2014, 7, 1, 9, 30, 15): datetime(2014, 6, 30, 16, 30, 15),
  560:                 datetime(2014, 7, 1, 17): datetime(2014, 7, 1, 16),
  561:                 datetime(2014, 7, 1, 5): datetime(2014, 6, 30, 16),
  562:                 datetime(2014, 7, 2, 11): datetime(2014, 7, 2, 10),
  563:                 # out of business hours
  564:                 datetime(2014, 7, 2, 8): datetime(2014, 7, 1, 16),
  565:                 datetime(2014, 7, 2, 19): datetime(2014, 7, 2, 16),
  566:                 datetime(2014, 7, 2, 23): datetime(2014, 7, 2, 16),
  567:                 datetime(2014, 7, 3, 0): datetime(2014, 7, 2, 16),
  568:                 # saturday
  569:                 datetime(2014, 7, 5, 15): datetime(2014, 7, 4, 16),
  570:                 datetime(2014, 7, 7, 9): datetime(2014, 7, 4, 16),
  571:                 datetime(2014, 7, 7, 9, 30): datetime(2014, 7, 4, 16, 30),
  572:                 datetime(2014, 7, 7, 9, 30, 30): datetime(2014, 7, 4, 16, 30, 30),
  573:             },
  574:         ),
  575:         (
  576:             BusinessHour(-4),
  577:             {
  578:                 datetime(2014, 7, 1, 11): datetime(2014, 6, 30, 15),
  579:                 datetime(2014, 7, 1, 13): datetime(2014, 6, 30, 17),
  580:                 datetime(2014, 7, 1, 15): datetime(2014, 7, 1, 11),
  581:                 datetime(2014, 7, 1, 16): datetime(2014, 7, 1, 12),
  582:                 datetime(2014, 7, 1, 17): datetime(2014, 7, 1, 13),
  583:                 datetime(2014, 7, 2, 11): datetime(2014, 7, 1, 15),
  584:                 datetime(2014, 7, 2, 8): datetime(2014, 7, 1, 13),
  585:                 datetime(2014, 7, 2, 19): datetime(2014, 7, 2, 13),
  586:                 datetime(2014, 7, 2, 23): datetime(2014, 7, 2, 13),
  587:                 datetime(2014, 7, 3, 0): datetime(2014, 7, 2, 13),
  588:                 datetime(2014, 7, 5, 15): datetime(2014, 7, 4, 13),
  589:                 datetime(2014, 7, 4, 18): datetime(2014, 7, 4, 13),
  590:                 datetime(2014, 7, 7, 9, 30): datetime(2014, 7, 4, 13, 30),
  591:                 datetime(2014, 7, 7, 9, 30, 30): datetime(2014, 7, 4, 13, 30, 30),
  592:             },
  593:         ),
  594:         (
  595:             BusinessHour(start="13:00", end="16:00"),
  596:             {
  597:                 datetime(2014, 7, 1, 11): datetime(2014, 7, 1, 14),
  598:                 datetime(2014, 7, 1, 13): datetime(2014, 7, 1, 14),
  599:                 datetime(2014, 7, 1, 15): datetime(2014, 7, 2, 13),
  600:                 datetime(2014, 7, 1, 19): datetime(2014, 7, 2, 14),
  601:                 datetime(2014, 7, 1, 16): datetime(2014, 7, 2, 14),
  602:                 datetime(2014, 7, 1, 15, 30, 15): datetime(2014, 7, 2, 13, 30, 15),
  603:                 datetime(2014, 7, 5, 15): datetime(2014, 7, 7, 14),
  604:                 datetime(2014, 7, 4, 17): datetime(2014, 7, 7, 14),
  605:             },
  606:         ),
  607:         (
  608:             BusinessHour(n=2, start="13:00", end="16:00"),
  609:             {
  610:                 datetime(2014, 7, 1, 17): datetime(2014, 7, 2, 15),
  611:                 datetime(2014, 7, 2, 14): datetime(2014, 7, 3, 13),
  612:                 datetime(2014, 7, 2, 8): datetime(2014, 7, 2, 15),
  613:                 datetime(2014, 7, 2, 19): datetime(2014, 7, 3, 15),
  614:                 datetime(2014, 7, 2, 14, 30): datetime(2014, 7, 3, 13, 30),
  615:                 datetime(2014, 7, 3, 0): datetime(2014, 7, 3, 15),
  616:                 datetime(2014, 7, 5, 15): datetime(2014, 7, 7, 15),
  617:                 datetime(2014, 7, 4, 17): datetime(2014, 7, 7, 15),
  618:                 datetime(2014, 7, 4, 14, 30): datetime(2014, 7, 7, 13, 30),
  619:                 datetime(2014, 7, 4, 14, 30, 30): datetime(2014, 7, 7, 13, 30, 30),
  620:             },
  621:         ),
  622:         (
  623:             BusinessHour(n=-1, start="13:00", end="16:00"),
  624:             {
  625:                 datetime(2014, 7, 2, 11): datetime(2014, 7, 1, 15),
  626:                 datetime(2014, 7, 2, 13): datetime(2014, 7, 1, 15),
  627:                 datetime(2014, 7, 2, 14): datetime(2014, 7, 1, 16),
  628:                 datetime(2014, 7, 2, 15): datetime(2014, 7, 2, 14),
  629:                 datetime(2014, 7, 2, 19): datetime(2014, 7, 2, 15),
  630:                 datetime(2014, 7, 2, 16): datetime(2014, 7, 2, 15),
  631:                 datetime(2014, 7, 2, 13, 30, 15): datetime(2014, 7, 1, 15, 30, 15),
  632:                 datetime(2014, 7, 5, 15): datetime(2014, 7, 4, 15),
  633:                 datetime(2014, 7, 7, 11): datetime(2014, 7, 4, 15),
  634:             },
  635:         ),
  636:         (
  637:             BusinessHour(n=-3, start="10:00", end="16:00"),
  638:             {
  639:                 datetime(2014, 7, 1, 17): datetime(2014, 7, 1, 13),
  640:                 datetime(2014, 7, 2, 14): datetime(2014, 7, 2, 11),
  641:                 datetime(2014, 7, 2, 8): datetime(2014, 7, 1, 13),
  642:                 datetime(2014, 7, 2, 13): datetime(2014, 7, 1, 16),
  643:                 datetime(2014, 7, 2, 19): datetime(2014, 7, 2, 13),
  644:                 datetime(2014, 7, 2, 11, 30): datetime(2014, 7, 1, 14, 30),
  645:                 datetime(2014, 7, 3, 0): datetime(2014, 7, 2, 13),
  646:                 datetime(2014, 7, 4, 10): datetime(2014, 7, 3, 13),
  647:                 datetime(2014, 7, 5, 15): datetime(2014, 7, 4, 13),
  648:                 datetime(2014, 7, 4, 16): datetime(2014, 7, 4, 13),
  649:                 datetime(2014, 7, 4, 12, 30): datetime(2014, 7, 3, 15, 30),
  650:                 datetime(2014, 7, 4, 12, 30, 30): datetime(2014, 7, 3, 15, 30, 30),
  651:             },
  652:         ),
  653:         (
  654:             BusinessHour(start="19:00", end="05:00"),
  655:             {
  656:                 datetime(2014, 7, 1, 17): datetime(2014, 7, 1, 20),
  657:                 datetime(2014, 7, 2, 14): datetime(2014, 7, 2, 20),
  658:                 datetime(2014, 7, 2, 8): datetime(2014, 7, 2, 20),
  659:                 datetime(2014, 7, 2, 13): datetime(2014, 7, 2, 20),
  660:                 datetime(2014, 7, 2, 19): datetime(2014, 7, 2, 20),
  661:                 datetime(2014, 7, 2, 4, 30): datetime(2014, 7, 2, 19, 30),
  662:                 datetime(2014, 7, 3, 0): datetime(2014, 7, 3, 1),
  663:                 datetime(2014, 7, 4, 10): datetime(2014, 7, 4, 20),
  664:                 datetime(2014, 7, 4, 23): datetime(2014, 7, 5, 0),
  665:                 datetime(2014, 7, 5, 0): datetime(2014, 7, 5, 1),
  666:                 datetime(2014, 7, 5, 4): datetime(2014, 7, 7, 19),
  667:                 datetime(2014, 7, 5, 4, 30): datetime(2014, 7, 7, 19, 30),
  668:                 datetime(2014, 7, 5, 4, 30, 30): datetime(2014, 7, 7, 19, 30, 30),
  669:             },
  670:         ),
  671:         (
  672:             BusinessHour(n=-1, start="19:00", end="05:00"),
  673:             {
  674:                 datetime(2014, 7, 1, 17): datetime(2014, 7, 1, 4),
  675:                 datetime(2014, 7, 2, 14): datetime(2014, 7, 2, 4),
  676:                 datetime(2014, 7, 2, 8): datetime(2014, 7, 2, 4),
  677:                 datetime(2014, 7, 2, 13): datetime(2014, 7, 2, 4),
  678:                 datetime(2014, 7, 2, 20): datetime(2014, 7, 2, 5),
  679:                 datetime(2014, 7, 2, 19): datetime(2014, 7, 2, 4),
  680:                 datetime(2014, 7, 2, 19, 30): datetime(2014, 7, 2, 4, 30),
  681:                 datetime(2014, 7, 3, 0): datetime(2014, 7, 2, 23),
  682:                 datetime(2014, 7, 3, 6): datetime(2014, 7, 3, 4),
  683:                 datetime(2014, 7, 4, 23): datetime(2014, 7, 4, 22),
  684:                 datetime(2014, 7, 5, 0): datetime(2014, 7, 4, 23),
  685:                 datetime(2014, 7, 5, 4): datetime(2014, 7, 5, 3),
  686:                 datetime(2014, 7, 7, 19, 30): datetime(2014, 7, 5, 4, 30),
  687:                 datetime(2014, 7, 7, 19, 30, 30): datetime(2014, 7, 5, 4, 30, 30),
  688:             },
  689:         ),
  690:         (
  691:             BusinessHour(n=4, start="00:00", end="23:00"),
  692:             {
  693:                 datetime(2014, 7, 3, 22): datetime(2014, 7, 4, 3),
  694:                 datetime(2014, 7, 4, 22): datetime(2014, 7, 7, 3),
  695:                 datetime(2014, 7, 3, 22, 30): datetime(2014, 7, 4, 3, 30),
  696:                 datetime(2014, 7, 3, 22, 20): datetime(2014, 7, 4, 3, 20),
  697:                 datetime(2014, 7, 4, 22, 30, 30): datetime(2014, 7, 7, 3, 30, 30),
  698:                 datetime(2014, 7, 4, 22, 30, 20): datetime(2014, 7, 7, 3, 30, 20),
  699:             },
  700:         ),
  701:         (
  702:             BusinessHour(n=-4, start="00:00", end="23:00"),
  703:             {
  704:                 datetime(2014, 7, 4, 3): datetime(2014, 7, 3, 22),
  705:                 datetime(2014, 7, 7, 3): datetime(2014, 7, 4, 22),
  706:                 datetime(2014, 7, 4, 3, 30): datetime(2014, 7, 3, 22, 30),
  707:                 datetime(2014, 7, 4, 3, 20): datetime(2014, 7, 3, 22, 20),
  708:                 datetime(2014, 7, 7, 3, 30, 30): datetime(2014, 7, 4, 22, 30, 30),
  709:                 datetime(2014, 7, 7, 3, 30, 20): datetime(2014, 7, 4, 22, 30, 20),
  710:             },
  711:         ),
  712:         (
  713:             BusinessHour(start=["09:00", "14:00"], end=["12:00", "18:00"]),
  714:             {
  715:                 datetime(2014, 7, 1, 11): datetime(2014, 7, 1, 14),
  716:                 datetime(2014, 7, 1, 15): datetime(2014, 7, 1, 16),
  717:                 datetime(2014, 7, 1, 19): datetime(2014, 7, 2, 10),
  718:                 datetime(2014, 7, 1, 16): datetime(2014, 7, 1, 17),
  719:                 datetime(2014, 7, 1, 16, 30, 15): datetime(2014, 7, 1, 17, 30, 15),
  720:                 datetime(2014, 7, 1, 17): datetime(2014, 7, 2, 9),
  721:                 datetime(2014, 7, 2, 11): datetime(2014, 7, 2, 14),
  722:                 # out of business hours
  723:                 datetime(2014, 7, 1, 13): datetime(2014, 7, 1, 15),
  724:                 datetime(2014, 7, 2, 8): datetime(2014, 7, 2, 10),
  725:                 datetime(2014, 7, 2, 19): datetime(2014, 7, 3, 10),
  726:                 datetime(2014, 7, 2, 23): datetime(2014, 7, 3, 10),
  727:                 datetime(2014, 7, 3, 0): datetime(2014, 7, 3, 10),
  728:                 # saturday
  729:                 datetime(2014, 7, 5, 15): datetime(2014, 7, 7, 10),
  730:                 datetime(2014, 7, 4, 17): datetime(2014, 7, 7, 9),
  731:                 datetime(2014, 7, 4, 17, 30): datetime(2014, 7, 7, 9, 30),
  732:                 datetime(2014, 7, 4, 17, 30, 30): datetime(2014, 7, 7, 9, 30, 30),
  733:             },
  734:         ),
  735:         (
  736:             BusinessHour(n=4, start=["09:00", "14:00"], end=["12:00", "18:00"]),
  737:             {
  738:                 datetime(2014, 7, 1, 11): datetime(2014, 7, 1, 17),
  739:                 datetime(2014, 7, 1, 13): datetime(2014, 7, 2, 9),
  740:                 datetime(2014, 7, 1, 15): datetime(2014, 7, 2, 10),
  741:                 datetime(2014, 7, 1, 16): datetime(2014, 7, 2, 11),
  742:                 datetime(2014, 7, 1, 17): datetime(2014, 7, 2, 14),
  743:                 datetime(2014, 7, 2, 11): datetime(2014, 7, 2, 17),
  744:                 datetime(2014, 7, 2, 8): datetime(2014, 7, 2, 15),
  745:                 datetime(2014, 7, 2, 19): datetime(2014, 7, 3, 15),
  746:                 datetime(2014, 7, 2, 23): datetime(2014, 7, 3, 15),
  747:                 datetime(2014, 7, 3, 0): datetime(2014, 7, 3, 15),
  748:                 datetime(2014, 7, 5, 15): datetime(2014, 7, 7, 15),
  749:                 datetime(2014, 7, 4, 17): datetime(2014, 7, 7, 14),
  750:                 datetime(2014, 7, 4, 16, 30): datetime(2014, 7, 7, 11, 30),
  751:                 datetime(2014, 7, 4, 16, 30, 30): datetime(2014, 7, 7, 11, 30, 30),
  752:             },
  753:         ),
  754:         (
  755:             BusinessHour(n=-4, start=["09:00", "14:00"], end=["12:00", "18:00"]),
  756:             {
  757:                 datetime(2014, 7, 1, 11): datetime(2014, 6, 30, 16),
  758:                 datetime(2014, 7, 1, 13): datetime(2014, 6, 30, 17),
  759:                 datetime(2014, 7, 1, 15): datetime(2014, 6, 30, 18),
  760:                 datetime(2014, 7, 1, 16): datetime(2014, 7, 1, 10),
  761:                 datetime(2014, 7, 1, 17): datetime(2014, 7, 1, 11),
  762:                 datetime(2014, 7, 2, 11): datetime(2014, 7, 1, 16),
  763:                 datetime(2014, 7, 2, 8): datetime(2014, 7, 1, 12),
  764:                 datetime(2014, 7, 2, 19): datetime(2014, 7, 2, 12),
  765:                 datetime(2014, 7, 2, 23): datetime(2014, 7, 2, 12),
  766:                 datetime(2014, 7, 3, 0): datetime(2014, 7, 2, 12),
  767:                 datetime(2014, 7, 5, 15): datetime(2014, 7, 4, 12),
  768:                 datetime(2014, 7, 4, 18): datetime(2014, 7, 4, 12),
  769:                 datetime(2014, 7, 7, 9, 30): datetime(2014, 7, 4, 14, 30),
  770:                 datetime(2014, 7, 7, 9, 30, 30): datetime(2014, 7, 4, 14, 30, 30),
  771:             },
  772:         ),
  773:         (
  774:             BusinessHour(n=-1, start=["19:00", "03:00"], end=["01:00", "05:00"]),
  775:             {
  776:                 datetime(2014, 7, 1, 17): datetime(2014, 7, 1, 4),
  777:                 datetime(2014, 7, 2, 14): datetime(2014, 7, 2, 4),
  778:                 datetime(2014, 7, 2, 8): datetime(2014, 7, 2, 4),
  779:                 datetime(2014, 7, 2, 13): datetime(2014, 7, 2, 4),
  780:                 datetime(2014, 7, 2, 20): datetime(2014, 7, 2, 5),
  781:                 datetime(2014, 7, 2, 19): datetime(2014, 7, 2, 4),
  782:                 datetime(2014, 7, 2, 4): datetime(2014, 7, 2, 1),
  783:                 datetime(2014, 7, 2, 19, 30): datetime(2014, 7, 2, 4, 30),
  784:                 datetime(2014, 7, 3, 0): datetime(2014, 7, 2, 23),
  785:                 datetime(2014, 7, 3, 6): datetime(2014, 7, 3, 4),
  786:                 datetime(2014, 7, 4, 23): datetime(2014, 7, 4, 22),
  787:                 datetime(2014, 7, 5, 0): datetime(2014, 7, 4, 23),
  788:                 datetime(2014, 7, 5, 4): datetime(2014, 7, 5, 0),
  789:                 datetime(2014, 7, 7, 3, 30): datetime(2014, 7, 5, 0, 30),
  790:                 datetime(2014, 7, 7, 19, 30): datetime(2014, 7, 7, 4, 30),
  791:                 datetime(2014, 7, 7, 19, 30, 30): datetime(2014, 7, 7, 4, 30, 30),
  792:             },
  793:         ),
  794:     ]
  795: 
  796:     # long business hours (see gh-26381)
  797: 
  798:     # multiple business hours
  799: 
  800:     @pytest.mark.parametrize("case", apply_cases)
  801:     def test_apply(self, case):
  802:         offset, cases = case
  803:         for base, expected in cases.items():
  804:             assert_offset_equal(offset, base, expected)
  805: 
  806:     apply_large_n_cases = [
  807:         (
  808:             # A week later
  809:             BusinessHour(40),
  810:             {
  811:                 datetime(2014, 7, 1, 11): datetime(2014, 7, 8, 11),
  812:                 datetime(2014, 7, 1, 13): datetime(2014, 7, 8, 13),
  813:                 datetime(2014, 7, 1, 15): datetime(2014, 7, 8, 15),
  814:                 datetime(2014, 7, 1, 16): datetime(2014, 7, 8, 16),
  815:                 datetime(2014, 7, 1, 17): datetime(2014, 7, 9, 9),
  816:                 datetime(2014, 7, 2, 11): datetime(2014, 7, 9, 11),
  817:                 datetime(2014, 7, 2, 8): datetime(2014, 7, 9, 9),
  818:                 datetime(2014, 7, 2, 19): datetime(2014, 7, 10, 9),
  819:                 datetime(2014, 7, 2, 23): datetime(2014, 7, 10, 9),
  820:                 datetime(2014, 7, 3, 0): datetime(2014, 7, 10, 9),
  821:                 datetime(2014, 7, 5, 15): datetime(2014, 7, 14, 9),
  822:                 datetime(2014, 7, 4, 18): datetime(2014, 7, 14, 9),
  823:                 datetime(2014, 7, 7, 9, 30): datetime(2014, 7, 14, 9, 30),
  824:                 datetime(2014, 7, 7, 9, 30, 30): datetime(2014, 7, 14, 9, 30, 30),
  825:             },
  826:         ),
  827:         (
  828:             # 3 days and 1 hour before
  829:             BusinessHour(-25),
  830:             {
  831:                 datetime(2014, 7, 1, 11): datetime(2014, 6, 26, 10),
  832:                 datetime(2014, 7, 1, 13): datetime(2014, 6, 26, 12),
  833:                 datetime(2014, 7, 1, 9): datetime(2014, 6, 25, 16),
  834:                 datetime(2014, 7, 1, 10): datetime(2014, 6, 25, 17),
  835:                 datetime(2014, 7, 3, 11): datetime(2014, 6, 30, 10),
  836:                 datetime(2014, 7, 3, 8): datetime(2014, 6, 27, 16),
  837:                 datetime(2014, 7, 3, 19): datetime(2014, 6, 30, 16),
  838:                 datetime(2014, 7, 3, 23): datetime(2014, 6, 30, 16),
  839:                 datetime(2014, 7, 4, 9): datetime(2014, 6, 30, 16),
  840:                 datetime(2014, 7, 5, 15): datetime(2014, 7, 1, 16),
  841:                 datetime(2014, 7, 6, 18): datetime(2014, 7, 1, 16),
  842:                 datetime(2014, 7, 7, 9, 30): datetime(2014, 7, 1, 16, 30),
  843:                 datetime(2014, 7, 7, 10, 30, 30): datetime(2014, 7, 2, 9, 30, 30),
  844:             },
  845:         ),
  846:         (
  847:             # 5 days and 3 hours later
  848:             BusinessHour(28, start="21:00", end="02:00"),
  849:             {
  850:                 datetime(2014, 7, 1, 11): datetime(2014, 7, 9, 0),
  851:                 datetime(2014, 7, 1, 22): datetime(2014, 7, 9, 1),
  852:                 datetime(2014, 7, 1, 23): datetime(2014, 7, 9, 21),
  853:                 datetime(2014, 7, 2, 2): datetime(2014, 7, 10, 0),
  854:                 datetime(2014, 7, 3, 21): datetime(2014, 7, 11, 0),
  855:                 datetime(2014, 7, 4, 1): datetime(2014, 7, 11, 23),
  856:                 datetime(2014, 7, 4, 2): datetime(2014, 7, 12, 0),
  857:                 datetime(2014, 7, 4, 3): datetime(2014, 7, 12, 0),
  858:                 datetime(2014, 7, 5, 1): datetime(2014, 7, 14, 23),
  859:                 datetime(2014, 7, 5, 15): datetime(2014, 7, 15, 0),
  860:                 datetime(2014, 7, 6, 18): datetime(2014, 7, 15, 0),
  861:                 datetime(2014, 7, 7, 1): datetime(2014, 7, 15, 0),
  862:                 datetime(2014, 7, 7, 23, 30): datetime(2014, 7, 15, 21, 30),
  863:             },
  864:         ),
  865:         (
  866:             # large n for multiple opening hours (3 days and 1 hour before)
  867:             BusinessHour(n=-25, start=["09:00", "14:00"], end=["12:00", "19:00"]),
  868:             {
  869:                 datetime(2014, 7, 1, 11): datetime(2014, 6, 26, 10),
  870:                 datetime(2014, 7, 1, 13): datetime(2014, 6, 26, 11),
  871:                 datetime(2014, 7, 1, 9): datetime(2014, 6, 25, 18),
  872:                 datetime(2014, 7, 1, 10): datetime(2014, 6, 25, 19),
  873:                 datetime(2014, 7, 3, 11): datetime(2014, 6, 30, 10),
  874:                 datetime(2014, 7, 3, 8): datetime(2014, 6, 27, 18),
  875:                 datetime(2014, 7, 3, 19): datetime(2014, 6, 30, 18),
  876:                 datetime(2014, 7, 3, 23): datetime(2014, 6, 30, 18),
  877:                 datetime(2014, 7, 4, 9): datetime(2014, 6, 30, 18),
  878:                 datetime(2014, 7, 5, 15): datetime(2014, 7, 1, 18),
  879:                 datetime(2014, 7, 6, 18): datetime(2014, 7, 1, 18),
  880:                 datetime(2014, 7, 7, 9, 30): datetime(2014, 7, 1, 18, 30),
  881:                 datetime(2014, 7, 7, 10, 30, 30): datetime(2014, 7, 2, 9, 30, 30),
  882:             },
  883:         ),
  884:         (
  885:             # 5 days and 3 hours later
  886:             BusinessHour(28, start=["21:00", "03:00"], end=["01:00", "04:00"]),
  887:             {
  888:                 datetime(2014, 7, 1, 11): datetime(2014, 7, 9, 0),
  889:                 datetime(2014, 7, 1, 22): datetime(2014, 7, 9, 3),
  890:                 datetime(2014, 7, 1, 23): datetime(2014, 7, 9, 21),
  891:                 datetime(2014, 7, 2, 2): datetime(2014, 7, 9, 23),
  892:                 datetime(2014, 7, 3, 21): datetime(2014, 7, 11, 0),
  893:                 datetime(2014, 7, 4, 1): datetime(2014, 7, 11, 23),
  894:                 datetime(2014, 7, 4, 2): datetime(2014, 7, 11, 23),
  895:                 datetime(2014, 7, 4, 3): datetime(2014, 7, 11, 23),
  896:                 datetime(2014, 7, 4, 21): datetime(2014, 7, 12, 0),
  897:                 datetime(2014, 7, 5, 0): datetime(2014, 7, 14, 22),
  898:                 datetime(2014, 7, 5, 1): datetime(2014, 7, 14, 23),
  899:                 datetime(2014, 7, 5, 15): datetime(2014, 7, 14, 23),
  900:                 datetime(2014, 7, 6, 18): datetime(2014, 7, 14, 23),
  901:                 datetime(2014, 7, 7, 1): datetime(2014, 7, 14, 23),
  902:                 datetime(2014, 7, 7, 23, 30): datetime(2014, 7, 15, 21, 30),
  903:             },
  904:         ),
  905:     ]
  906: 
  907:     @pytest.mark.parametrize("case", apply_large_n_cases)
  908:     def test_apply_large_n(self, case):
  909:         offset, cases = case
  910:         for base, expected in cases.items():
  911:             assert_offset_equal(offset, base, expected)
  912: 
  913:     def test_apply_nanoseconds(self):
  914:         tests = [
  915:             (
  916:                 BusinessHour(),
  917:                 {
  918:                     Timestamp("2014-07-04 15:00")
  919:                     + Nano(5): Timestamp("2014-07-04 16:00")
  920:                     + Nano(5),
  921:                     Timestamp("2014-07-04 16:00")
  922:                     + Nano(5): Timestamp("2014-07-07 09:00")
  923:                     + Nano(5),
  924:                     Timestamp("2014-07-04 16:00")
  925:                     - Nano(5): Timestamp("2014-07-04 17:00")
  926:                     - Nano(5),
  927:                 },
  928:             ),
  929:             (
  930:                 BusinessHour(-1),
  931:                 {
  932:                     Timestamp("2014-07-04 15:00")
  933:                     + Nano(5): Timestamp("2014-07-04 14:00")
  934:                     + Nano(5),
  935:                     Timestamp("2014-07-04 10:00")
  936:                     + Nano(5): Timestamp("2014-07-04 09:00")
  937:                     + Nano(5),
  938:                     Timestamp("2014-07-04 10:00")
  939:                     - Nano(5): Timestamp("2014-07-03 17:00")
  940:                     - Nano(5),
  941:                 },
  942:             ),
  943:         ]
  944: 
  945:         for offset, cases in tests:
  946:             for base, expected in cases.items():
  947:                 assert_offset_equal(offset, base, expected)
  948: 
  949:     @pytest.mark.parametrize("td_unit", ["s", "ms", "us", "ns"])
  950:     @pytest.mark.parametrize("unit", ["s", "ms", "us", "ns"])
  951:     def test_bday_ignores_timedeltas(self, unit, td_unit):
  952:         # GH#55608
  953:         idx = date_range("2010/02/01", "2010/02/10", freq="12h", unit=unit)
  954:         td = Timedelta(3, unit="h").as_unit(td_unit)
  955:         off = BDay(offset=td)
  956:         t1 = idx + off
  957: 
  958:         exp_unit = tm.get_finest_unit(td.unit, idx.unit)
  959: 
  960:         expected = DatetimeIndex(
  961:             [
  962:                 "2010-02-02 03:00:00",
  963:                 "2010-02-02 15:00:00",
  964:                 "2010-02-03 03:00:00",
  965:                 "2010-02-03 15:00:00",
  966:                 "2010-02-04 03:00:00",
  967:                 "2010-02-04 15:00:00",
  968:                 "2010-02-05 03:00:00",
  969:                 "2010-02-05 15:00:00",
  970:                 "2010-02-08 03:00:00",
  971:                 "2010-02-08 15:00:00",
  972:                 "2010-02-08 03:00:00",
  973:                 "2010-02-08 15:00:00",
  974:                 "2010-02-08 03:00:00",
  975:                 "2010-02-08 15:00:00",
  976:                 "2010-02-09 03:00:00",
  977:                 "2010-02-09 15:00:00",
  978:                 "2010-02-10 03:00:00",
  979:                 "2010-02-10 15:00:00",
  980:                 "2010-02-11 03:00:00",
  981:             ],
  982:             freq=None,
  983:         ).as_unit(exp_unit)
  984:         tm.assert_index_equal(t1, expected)
  985: 
  986:         # TODO(GH#55564): as_unit will be unnecessary
  987:         pointwise = DatetimeIndex([x + off for x in idx]).as_unit(exp_unit)
  988:         tm.assert_index_equal(pointwise, expected)
  989: 
  990:     def test_add_bday_offset_nanos(self):
  991:         # GH#55608
  992:         idx = date_range("2010/02/01", "2010/02/10", freq="12h", unit="ns")
  993:         off = BDay(offset=Timedelta(3, unit="ns"))
  994: 
  995:         result = idx + off
  996:         expected = DatetimeIndex([x + off for x in idx])
  997:         tm.assert_index_equal(result, expected)
  998: 
  999: 
 1000: class TestOpeningTimes:
 1001:     # opening time should be affected by sign of n, not by n's value and end
 1002:     opening_time_cases = [
 1003:         (
 1004:             [
 1005:                 BusinessHour(),
 1006:                 BusinessHour(n=2),
 1007:                 BusinessHour(n=4),
 1008:                 BusinessHour(end="10:00"),
 1009:                 BusinessHour(n=2, end="4:00"),
 1010:                 BusinessHour(n=4, end="15:00"),
 1011:             ],
 1012:             {
 1013:                 datetime(2014, 7, 1, 11): (
 1014:                     datetime(2014, 7, 2, 9),
 1015:                     datetime(2014, 7, 1, 9),
 1016:                 ),
 1017:                 datetime(2014, 7, 1, 18): (
 1018:                     datetime(2014, 7, 2, 9),
 1019:                     datetime(2014, 7, 1, 9),
 1020:                 ),
 1021:                 datetime(2014, 7, 1, 23): (
 1022:                     datetime(2014, 7, 2, 9),
 1023:                     datetime(2014, 7, 1, 9),
 1024:                 ),
 1025:                 datetime(2014, 7, 2, 8): (
 1026:                     datetime(2014, 7, 2, 9),
 1027:                     datetime(2014, 7, 1, 9),
 1028:                 ),
 1029:                 # if timestamp is on opening time, next opening time is
 1030:                 # as it is
 1031:                 datetime(2014, 7, 2, 9): (
 1032:                     datetime(2014, 7, 2, 9),
 1033:                     datetime(2014, 7, 2, 9),
 1034:                 ),
 1035:                 datetime(2014, 7, 2, 10): (
 1036:                     datetime(2014, 7, 3, 9),
 1037:                     datetime(2014, 7, 2, 9),
 1038:                 ),
 1039:                 # 2014-07-05 is saturday
 1040:                 datetime(2014, 7, 5, 10): (
 1041:                     datetime(2014, 7, 7, 9),
 1042:                     datetime(2014, 7, 4, 9),
 1043:                 ),
 1044:                 datetime(2014, 7, 4, 10): (
 1045:                     datetime(2014, 7, 7, 9),
 1046:                     datetime(2014, 7, 4, 9),
 1047:                 ),
 1048:                 datetime(2014, 7, 4, 23): (
 1049:                     datetime(2014, 7, 7, 9),
 1050:                     datetime(2014, 7, 4, 9),
 1051:                 ),
 1052:                 datetime(2014, 7, 6, 10): (
 1053:                     datetime(2014, 7, 7, 9),
 1054:                     datetime(2014, 7, 4, 9),
 1055:                 ),
 1056:                 datetime(2014, 7, 7, 5): (
 1057:                     datetime(2014, 7, 7, 9),
 1058:                     datetime(2014, 7, 4, 9),
 1059:                 ),
 1060:                 datetime(2014, 7, 7, 9, 1): (
 1061:                     datetime(2014, 7, 8, 9),
 1062:                     datetime(2014, 7, 7, 9),
 1063:                 ),
 1064:             },
 1065:         ),
 1066:         (
 1067:             [
 1068:                 BusinessHour(start="11:15"),
 1069:                 BusinessHour(n=2, start="11:15"),
 1070:                 BusinessHour(n=3, start="11:15"),
 1071:                 BusinessHour(start="11:15", end="10:00"),
 1072:                 BusinessHour(n=2, start="11:15", end="4:00"),
 1073:                 BusinessHour(n=3, start="11:15", end="15:00"),
 1074:             ],
 1075:             {
 1076:                 datetime(2014, 7, 1, 11): (
 1077:                     datetime(2014, 7, 1, 11, 15),
 1078:                     datetime(2014, 6, 30, 11, 15),
 1079:                 ),
 1080:                 datetime(2014, 7, 1, 18): (
 1081:                     datetime(2014, 7, 2, 11, 15),
 1082:                     datetime(2014, 7, 1, 11, 15),
 1083:                 ),
 1084:                 datetime(2014, 7, 1, 23): (
 1085:                     datetime(2014, 7, 2, 11, 15),
 1086:                     datetime(2014, 7, 1, 11, 15),
 1087:                 ),
 1088:                 datetime(2014, 7, 2, 8): (
 1089:                     datetime(2014, 7, 2, 11, 15),
 1090:                     datetime(2014, 7, 1, 11, 15),
 1091:                 ),
 1092:                 datetime(2014, 7, 2, 9): (
 1093:                     datetime(2014, 7, 2, 11, 15),
 1094:                     datetime(2014, 7, 1, 11, 15),
 1095:                 ),
 1096:                 datetime(2014, 7, 2, 10): (
 1097:                     datetime(2014, 7, 2, 11, 15),
 1098:                     datetime(2014, 7, 1, 11, 15),
 1099:                 ),
 1100:                 datetime(2014, 7, 2, 11, 15): (
 1101:                     datetime(2014, 7, 2, 11, 15),
 1102:                     datetime(2014, 7, 2, 11, 15),
 1103:                 ),
 1104:                 datetime(2014, 7, 2, 11, 15, 1): (
 1105:                     datetime(2014, 7, 3, 11, 15),
 1106:                     datetime(2014, 7, 2, 11, 15),
 1107:                 ),
 1108:                 datetime(2014, 7, 5, 10): (
 1109:                     datetime(2014, 7, 7, 11, 15),
 1110:                     datetime(2014, 7, 4, 11, 15),
 1111:                 ),
 1112:                 datetime(2014, 7, 4, 10): (
 1113:                     datetime(2014, 7, 4, 11, 15),
 1114:                     datetime(2014, 7, 3, 11, 15),
 1115:                 ),
 1116:                 datetime(2014, 7, 4, 23): (
 1117:                     datetime(2014, 7, 7, 11, 15),
 1118:                     datetime(2014, 7, 4, 11, 15),
 1119:                 ),
 1120:                 datetime(2014, 7, 6, 10): (
 1121:                     datetime(2014, 7, 7, 11, 15),
 1122:                     datetime(2014, 7, 4, 11, 15),
 1123:                 ),
 1124:                 datetime(2014, 7, 7, 5): (
 1125:                     datetime(2014, 7, 7, 11, 15),
 1126:                     datetime(2014, 7, 4, 11, 15),
 1127:                 ),
 1128:                 datetime(2014, 7, 7, 9, 1): (
 1129:                     datetime(2014, 7, 7, 11, 15),
 1130:                     datetime(2014, 7, 4, 11, 15),
 1131:                 ),
 1132:             },
 1133:         ),
 1134:         (
 1135:             [
 1136:                 BusinessHour(-1),
 1137:                 BusinessHour(n=-2),
 1138:                 BusinessHour(n=-4),
 1139:                 BusinessHour(n=-1, end="10:00"),
 1140:                 BusinessHour(n=-2, end="4:00"),
 1141:                 BusinessHour(n=-4, end="15:00"),
 1142:             ],
 1143:             {
 1144:                 datetime(2014, 7, 1, 11): (
 1145:                     datetime(2014, 7, 1, 9),
 1146:                     datetime(2014, 7, 2, 9),
 1147:                 ),
 1148:                 datetime(2014, 7, 1, 18): (
 1149:                     datetime(2014, 7, 1, 9),
 1150:                     datetime(2014, 7, 2, 9),
 1151:                 ),
 1152:                 datetime(2014, 7, 1, 23): (
 1153:                     datetime(2014, 7, 1, 9),
 1154:                     datetime(2014, 7, 2, 9),
 1155:                 ),
 1156:                 datetime(2014, 7, 2, 8): (
 1157:                     datetime(2014, 7, 1, 9),
 1158:                     datetime(2014, 7, 2, 9),
 1159:                 ),
 1160:                 datetime(2014, 7, 2, 9): (
 1161:                     datetime(2014, 7, 2, 9),
 1162:                     datetime(2014, 7, 2, 9),
 1163:                 ),
 1164:                 datetime(2014, 7, 2, 10): (
 1165:                     datetime(2014, 7, 2, 9),
 1166:                     datetime(2014, 7, 3, 9),
 1167:                 ),
 1168:                 datetime(2014, 7, 5, 10): (
 1169:                     datetime(2014, 7, 4, 9),
 1170:                     datetime(2014, 7, 7, 9),
 1171:                 ),
 1172:                 datetime(2014, 7, 4, 10): (
 1173:                     datetime(2014, 7, 4, 9),
 1174:                     datetime(2014, 7, 7, 9),
 1175:                 ),
 1176:                 datetime(2014, 7, 4, 23): (
 1177:                     datetime(2014, 7, 4, 9),
 1178:                     datetime(2014, 7, 7, 9),
 1179:                 ),
 1180:                 datetime(2014, 7, 6, 10): (
 1181:                     datetime(2014, 7, 4, 9),
 1182:                     datetime(2014, 7, 7, 9),
 1183:                 ),
 1184:                 datetime(2014, 7, 7, 5): (
 1185:                     datetime(2014, 7, 4, 9),
 1186:                     datetime(2014, 7, 7, 9),
 1187:                 ),
 1188:                 datetime(2014, 7, 7, 9): (
 1189:                     datetime(2014, 7, 7, 9),
 1190:                     datetime(2014, 7, 7, 9),
 1191:                 ),
 1192:                 datetime(2014, 7, 7, 9, 1): (
 1193:                     datetime(2014, 7, 7, 9),
 1194:                     datetime(2014, 7, 8, 9),
 1195:                 ),
 1196:             },
 1197:         ),
 1198:         (
 1199:             [
 1200:                 BusinessHour(start="17:00", end="05:00"),
 1201:                 BusinessHour(n=3, start="17:00", end="03:00"),
 1202:             ],
 1203:             {
 1204:                 datetime(2014, 7, 1, 11): (
 1205:                     datetime(2014, 7, 1, 17),
 1206:                     datetime(2014, 6, 30, 17),
 1207:                 ),
 1208:                 datetime(2014, 7, 1, 18): (
 1209:                     datetime(2014, 7, 2, 17),
 1210:                     datetime(2014, 7, 1, 17),
 1211:                 ),
 1212:                 datetime(2014, 7, 1, 23): (
 1213:                     datetime(2014, 7, 2, 17),
 1214:                     datetime(2014, 7, 1, 17),
 1215:                 ),
 1216:                 datetime(2014, 7, 2, 8): (
 1217:                     datetime(2014, 7, 2, 17),
 1218:                     datetime(2014, 7, 1, 17),
 1219:                 ),
 1220:                 datetime(2014, 7, 2, 9): (
 1221:                     datetime(2014, 7, 2, 17),
 1222:                     datetime(2014, 7, 1, 17),
 1223:                 ),
 1224:                 datetime(2014, 7, 4, 17): (
 1225:                     datetime(2014, 7, 4, 17),
 1226:                     datetime(2014, 7, 4, 17),
 1227:                 ),
 1228:                 datetime(2014, 7, 5, 10): (
 1229:                     datetime(2014, 7, 7, 17),
 1230:                     datetime(2014, 7, 4, 17),
 1231:                 ),
 1232:                 datetime(2014, 7, 4, 10): (
 1233:                     datetime(2014, 7, 4, 17),
 1234:                     datetime(2014, 7, 3, 17),
 1235:                 ),
 1236:                 datetime(2014, 7, 4, 23): (
 1237:                     datetime(2014, 7, 7, 17),
 1238:                     datetime(2014, 7, 4, 17),
 1239:                 ),
 1240:                 datetime(2014, 7, 6, 10): (
 1241:                     datetime(2014, 7, 7, 17),
 1242:                     datetime(2014, 7, 4, 17),
 1243:                 ),
 1244:                 datetime(2014, 7, 7, 5): (
 1245:                     datetime(2014, 7, 7, 17),
 1246:                     datetime(2014, 7, 4, 17),
 1247:                 ),
 1248:                 datetime(2014, 7, 7, 17, 1): (
 1249:                     datetime(2014, 7, 8, 17),
 1250:                     datetime(2014, 7, 7, 17),
 1251:                 ),
 1252:             },
 1253:         ),
 1254:         (
 1255:             [
 1256:                 BusinessHour(-1, start="17:00", end="05:00"),
 1257:                 BusinessHour(n=-2, start="17:00", end="03:00"),
 1258:             ],
 1259:             {
 1260:                 datetime(2014, 7, 1, 11): (
 1261:                     datetime(2014, 6, 30, 17),
 1262:                     datetime(2014, 7, 1, 17),
 1263:                 ),
 1264:                 datetime(2014, 7, 1, 18): (
 1265:                     datetime(2014, 7, 1, 17),
 1266:                     datetime(2014, 7, 2, 17),
 1267:                 ),
 1268:                 datetime(2014, 7, 1, 23): (
 1269:                     datetime(2014, 7, 1, 17),
 1270:                     datetime(2014, 7, 2, 17),
 1271:                 ),
 1272:                 datetime(2014, 7, 2, 8): (
 1273:                     datetime(2014, 7, 1, 17),
 1274:                     datetime(2014, 7, 2, 17),
 1275:                 ),
 1276:                 datetime(2014, 7, 2, 9): (
 1277:                     datetime(2014, 7, 1, 17),
 1278:                     datetime(2014, 7, 2, 17),
 1279:                 ),
 1280:                 datetime(2014, 7, 2, 16, 59): (
 1281:                     datetime(2014, 7, 1, 17),
 1282:                     datetime(2014, 7, 2, 17),
 1283:                 ),
 1284:                 datetime(2014, 7, 5, 10): (
 1285:                     datetime(2014, 7, 4, 17),
 1286:                     datetime(2014, 7, 7, 17),
 1287:                 ),
 1288:                 datetime(2014, 7, 4, 10): (
 1289:                     datetime(2014, 7, 3, 17),
 1290:                     datetime(2014, 7, 4, 17),
 1291:                 ),
 1292:                 datetime(2014, 7, 4, 23): (
 1293:                     datetime(2014, 7, 4, 17),
 1294:                     datetime(2014, 7, 7, 17),
 1295:                 ),
 1296:                 datetime(2014, 7, 6, 10): (
 1297:                     datetime(2014, 7, 4, 17),
 1298:                     datetime(2014, 7, 7, 17),
 1299:                 ),
 1300:                 datetime(2014, 7, 7, 5): (
 1301:                     datetime(2014, 7, 4, 17),
 1302:                     datetime(2014, 7, 7, 17),
 1303:                 ),
 1304:                 datetime(2014, 7, 7, 18): (
 1305:                     datetime(2014, 7, 7, 17),
 1306:                     datetime(2014, 7, 8, 17),
 1307:                 ),
 1308:             },
 1309:         ),
 1310:         (
 1311:             [
 1312:                 BusinessHour(start=["11:15", "15:00"], end=["13:00", "20:00"]),
 1313:                 BusinessHour(n=3, start=["11:15", "15:00"], end=["12:00", "20:00"]),
 1314:                 BusinessHour(start=["11:15", "15:00"], end=["13:00", "17:00"]),
 1315:                 BusinessHour(n=2, start=["11:15", "15:00"], end=["12:00", "03:00"]),
 1316:                 BusinessHour(n=3, start=["11:15", "15:00"], end=["13:00", "16:00"]),
 1317:             ],
 1318:             {
 1319:                 datetime(2014, 7, 1, 11): (
 1320:                     datetime(2014, 7, 1, 11, 15),
 1321:                     datetime(2014, 6, 30, 15),
 1322:                 ),
 1323:                 datetime(2014, 7, 1, 18): (
 1324:                     datetime(2014, 7, 2, 11, 15),
 1325:                     datetime(2014, 7, 1, 15),
 1326:                 ),
 1327:                 datetime(2014, 7, 1, 23): (
 1328:                     datetime(2014, 7, 2, 11, 15),
 1329:                     datetime(2014, 7, 1, 15),
 1330:                 ),
 1331:                 datetime(2014, 7, 2, 8): (
 1332:                     datetime(2014, 7, 2, 11, 15),
 1333:                     datetime(2014, 7, 1, 15),
 1334:                 ),
 1335:                 datetime(2014, 7, 2, 9): (
 1336:                     datetime(2014, 7, 2, 11, 15),
 1337:                     datetime(2014, 7, 1, 15),
 1338:                 ),
 1339:                 datetime(2014, 7, 2, 10): (
 1340:                     datetime(2014, 7, 2, 11, 15),
 1341:                     datetime(2014, 7, 1, 15),
 1342:                 ),
 1343:                 datetime(2014, 7, 2, 11, 15): (
 1344:                     datetime(2014, 7, 2, 11, 15),
 1345:                     datetime(2014, 7, 2, 11, 15),
 1346:                 ),
 1347:                 datetime(2014, 7, 2, 11, 15, 1): (
 1348:                     datetime(2014, 7, 2, 15),
 1349:                     datetime(2014, 7, 2, 11, 15),
 1350:                 ),
 1351:                 datetime(2014, 7, 5, 10): (
 1352:                     datetime(2014, 7, 7, 11, 15),
 1353:                     datetime(2014, 7, 4, 15),
 1354:                 ),
 1355:                 datetime(2014, 7, 4, 10): (
 1356:                     datetime(2014, 7, 4, 11, 15),
 1357:                     datetime(2014, 7, 3, 15),
 1358:                 ),
 1359:                 datetime(2014, 7, 4, 23): (
 1360:                     datetime(2014, 7, 7, 11, 15),
 1361:                     datetime(2014, 7, 4, 15),
 1362:                 ),
 1363:                 datetime(2014, 7, 6, 10): (
 1364:                     datetime(2014, 7, 7, 11, 15),
 1365:                     datetime(2014, 7, 4, 15),
 1366:                 ),
 1367:                 datetime(2014, 7, 7, 5): (
 1368:                     datetime(2014, 7, 7, 11, 15),
 1369:                     datetime(2014, 7, 4, 15),
 1370:                 ),
 1371:                 datetime(2014, 7, 7, 9, 1): (
 1372:                     datetime(2014, 7, 7, 11, 15),
 1373:                     datetime(2014, 7, 4, 15),
 1374:                 ),
 1375:                 datetime(2014, 7, 7, 12): (
 1376:                     datetime(2014, 7, 7, 15),
 1377:                     datetime(2014, 7, 7, 11, 15),
 1378:                 ),
 1379:             },
 1380:         ),
 1381:         (
 1382:             [
 1383:                 BusinessHour(n=-1, start=["17:00", "08:00"], end=["05:00", "10:00"]),
 1384:                 BusinessHour(n=-2, start=["08:00", "17:00"], end=["10:00", "03:00"]),
 1385:             ],
 1386:             {
 1387:                 datetime(2014, 7, 1, 11): (
 1388:                     datetime(2014, 7, 1, 8),
 1389:                     datetime(2014, 7, 1, 17),
 1390:                 ),
 1391:                 datetime(2014, 7, 1, 18): (
 1392:                     datetime(2014, 7, 1, 17),
 1393:                     datetime(2014, 7, 2, 8),
 1394:                 ),
 1395:                 datetime(2014, 7, 1, 23): (
 1396:                     datetime(2014, 7, 1, 17),
 1397:                     datetime(2014, 7, 2, 8),
 1398:                 ),
 1399:                 datetime(2014, 7, 2, 8): (
 1400:                     datetime(2014, 7, 2, 8),
 1401:                     datetime(2014, 7, 2, 8),
 1402:                 ),
 1403:                 datetime(2014, 7, 2, 9): (
 1404:                     datetime(2014, 7, 2, 8),
 1405:                     datetime(2014, 7, 2, 17),
 1406:                 ),
 1407:                 datetime(2014, 7, 2, 16, 59): (
 1408:                     datetime(2014, 7, 2, 8),
 1409:                     datetime(2014, 7, 2, 17),
 1410:                 ),
 1411:                 datetime(2014, 7, 5, 10): (
 1412:                     datetime(2014, 7, 4, 17),
 1413:                     datetime(2014, 7, 7, 8),
 1414:                 ),
 1415:                 datetime(2014, 7, 4, 10): (
 1416:                     datetime(2014, 7, 4, 8),
 1417:                     datetime(2014, 7, 4, 17),
 1418:                 ),
 1419:                 datetime(2014, 7, 4, 23): (
 1420:                     datetime(2014, 7, 4, 17),
 1421:                     datetime(2014, 7, 7, 8),
 1422:                 ),
 1423:                 datetime(2014, 7, 6, 10): (
 1424:                     datetime(2014, 7, 4, 17),
 1425:                     datetime(2014, 7, 7, 8),
 1426:                 ),
 1427:                 datetime(2014, 7, 7, 5): (
 1428:                     datetime(2014, 7, 4, 17),
 1429:                     datetime(2014, 7, 7, 8),
 1430:                 ),
 1431:                 datetime(2014, 7, 7, 18): (
 1432:                     datetime(2014, 7, 7, 17),
 1433:                     datetime(2014, 7, 8, 8),
 1434:                 ),
 1435:             },
 1436:         ),
 1437:     ]
 1438: 
 1439:     @pytest.mark.parametrize("case", opening_time_cases)
 1440:     def test_opening_time(self, case):
 1441:         _offsets, cases = case
 1442:         for offset in _offsets:
 1443:             for dt, (exp_next, exp_prev) in cases.items():
 1444:                 assert offset._next_opening_time(dt) == exp_next
 1445:                 assert offset._prev_opening_time(dt) == exp_prev
