    1: from datetime import datetime
    2: 
    3: import pytest
    4: 
    5: import pandas as pd
    6: from pandas import (
    7:     Series,
    8:     date_range,
    9: )
   10: import pandas._testing as tm
   11: 
   12: 
   13: class TestTruncate:
   14:     def test_truncate_datetimeindex_tz(self):
   15:         # GH 9243
   16:         idx = date_range("4/1/2005", "4/30/2005", freq="D", tz="US/Pacific")
   17:         s = Series(range(len(idx)), index=idx)
   18:         with pytest.raises(TypeError, match="Cannot compare tz-naive"):
   19:             # GH#36148 as of 2.0 we require tzawareness compat
   20:             s.truncate(datetime(2005, 4, 2), datetime(2005, 4, 4))
   21: 
   22:         lb = idx[1]
   23:         ub = idx[3]
   24:         result = s.truncate(lb.to_pydatetime(), ub.to_pydatetime())
   25:         expected = Series([1, 2, 3], index=idx[1:4])
   26:         tm.assert_series_equal(result, expected)
   27: 
   28:     def test_truncate_periodindex(self):
   29:         # GH 17717
   30:         idx1 = pd.PeriodIndex(
   31:             [pd.Period("2017-09-02"), pd.Period("2017-09-02"), pd.Period("2017-09-03")]
   32:         )
   33:         series1 = Series([1, 2, 3], index=idx1)
   34:         result1 = series1.truncate(after="2017-09-02")
   35: 
   36:         expected_idx1 = pd.PeriodIndex(
   37:             [pd.Period("2017-09-02"), pd.Period("2017-09-02")]
   38:         )
   39:         tm.assert_series_equal(result1, Series([1, 2], index=expected_idx1))
   40: 
   41:         idx2 = pd.PeriodIndex(
   42:             [pd.Period("2017-09-03"), pd.Period("2017-09-02"), pd.Period("2017-09-03")]
   43:         )
   44:         series2 = Series([1, 2, 3], index=idx2)
   45:         result2 = series2.sort_index().truncate(after="2017-09-02")
   46: 
   47:         expected_idx2 = pd.PeriodIndex([pd.Period("2017-09-02")])
   48:         tm.assert_series_equal(result2, Series([2], index=expected_idx2))
   49: 
   50:     def test_truncate_one_element_series(self):
   51:         # GH 35544
   52:         series = Series([0.1], index=pd.DatetimeIndex(["2020-08-04"]))
   53:         before = pd.Timestamp("2020-08-02")
   54:         after = pd.Timestamp("2020-08-04")
   55: 
   56:         result = series.truncate(before=before, after=after)
   57: 
   58:         # the input Series and the expected Series are the same
   59:         tm.assert_series_equal(result, series)
   60: 
   61:     def test_truncate_index_only_one_unique_value(self):
   62:         # GH 42365
   63:         obj = Series(0, index=date_range("2021-06-30", "2021-06-30")).repeat(5)
   64: 
   65:         truncated = obj.truncate("2021-06-28", "2021-07-01")
   66: 
   67:         tm.assert_series_equal(truncated, obj)
