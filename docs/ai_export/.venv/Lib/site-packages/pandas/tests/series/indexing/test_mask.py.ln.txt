    1: import numpy as np
    2: import pytest
    3: 
    4: from pandas import Series
    5: import pandas._testing as tm
    6: 
    7: 
    8: def test_mask():
    9:     # compare with tested results in test_where
   10:     s = Series(np.random.default_rng(2).standard_normal(5))
   11:     cond = s > 0
   12: 
   13:     rs = s.where(~cond, np.nan)
   14:     tm.assert_series_equal(rs, s.mask(cond))
   15: 
   16:     rs = s.where(~cond)
   17:     rs2 = s.mask(cond)
   18:     tm.assert_series_equal(rs, rs2)
   19: 
   20:     rs = s.where(~cond, -s)
   21:     rs2 = s.mask(cond, -s)
   22:     tm.assert_series_equal(rs, rs2)
   23: 
   24:     cond = Series([True, False, False, True, False], index=s.index)
   25:     s2 = -(s.abs())
   26:     rs = s2.where(~cond[:3])
   27:     rs2 = s2.mask(cond[:3])
   28:     tm.assert_series_equal(rs, rs2)
   29: 
   30:     rs = s2.where(~cond[:3], -s2)
   31:     rs2 = s2.mask(cond[:3], -s2)
   32:     tm.assert_series_equal(rs, rs2)
   33: 
   34:     msg = "Array conditional must be same shape as self"
   35:     with pytest.raises(ValueError, match=msg):
   36:         s.mask(1)
   37:     with pytest.raises(ValueError, match=msg):
   38:         s.mask(cond[:3].values, -s)
   39: 
   40: 
   41: def test_mask_casts():
   42:     # dtype changes
   43:     ser = Series([1, 2, 3, 4])
   44:     result = ser.mask(ser > 2, np.nan)
   45:     expected = Series([1, 2, np.nan, np.nan])
   46:     tm.assert_series_equal(result, expected)
   47: 
   48: 
   49: def test_mask_casts2():
   50:     # see gh-21891
   51:     ser = Series([1, 2])
   52:     res = ser.mask([True, False])
   53: 
   54:     exp = Series([np.nan, 2])
   55:     tm.assert_series_equal(res, exp)
   56: 
   57: 
   58: def test_mask_inplace():
   59:     s = Series(np.random.default_rng(2).standard_normal(5))
   60:     cond = s > 0
   61: 
   62:     rs = s.copy()
   63:     rs.mask(cond, inplace=True)
   64:     tm.assert_series_equal(rs.dropna(), s[~cond])
   65:     tm.assert_series_equal(rs, s.mask(cond))
   66: 
   67:     rs = s.copy()
   68:     rs.mask(cond, -s, inplace=True)
   69:     tm.assert_series_equal(rs, s.mask(cond, -s))
