    1: from datetime import datetime
    2: 
    3: import numpy as np
    4: 
    5: from pandas import Series
    6: import pandas._testing as tm
    7: 
    8: 
    9: def test_reindex_like(datetime_series):
   10:     other = datetime_series[::2]
   11:     tm.assert_series_equal(
   12:         datetime_series.reindex(other.index), datetime_series.reindex_like(other)
   13:     )
   14: 
   15:     # GH#7179
   16:     day1 = datetime(2013, 3, 5)
   17:     day2 = datetime(2013, 5, 5)
   18:     day3 = datetime(2014, 3, 5)
   19: 
   20:     series1 = Series([5, None, None], [day1, day2, day3])
   21:     series2 = Series([None, None], [day1, day3])
   22: 
   23:     result = series1.reindex_like(series2, method="pad")
   24:     expected = Series([5, np.nan], index=[day1, day3])
   25:     tm.assert_series_equal(result, expected)
   26: 
   27: 
   28: def test_reindex_like_nearest():
   29:     ser = Series(np.arange(10, dtype="int64"))
   30: 
   31:     target = [0.1, 0.9, 1.5, 2.0]
   32:     other = ser.reindex(target, method="nearest")
   33:     expected = Series(np.around(target).astype("int64"), target)
   34: 
   35:     result = ser.reindex_like(other, method="nearest")
   36:     tm.assert_series_equal(expected, result)
   37: 
   38:     result = ser.reindex_like(other, method="nearest", tolerance=1)
   39:     tm.assert_series_equal(expected, result)
   40:     result = ser.reindex_like(other, method="nearest", tolerance=[1, 2, 3, 4])
   41:     tm.assert_series_equal(expected, result)
