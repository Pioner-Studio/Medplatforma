    1: import numpy as np
    2: import pytest
    3: 
    4: from pandas import Series
    5: 
    6: 
    7: @pytest.mark.parametrize(
    8:     "data, expected",
    9:     [
   10:         (np.random.default_rng(2).integers(0, 10, size=1000), False),
   11:         (np.arange(1000), True),
   12:         ([], True),
   13:         ([np.nan], True),
   14:         (["foo", "bar", np.nan], True),
   15:         (["foo", "foo", np.nan], False),
   16:         (["foo", "bar", np.nan, np.nan], False),
   17:     ],
   18: )
   19: def test_is_unique(data, expected):
   20:     # GH#11946 / GH#25180
   21:     ser = Series(data)
   22:     assert ser.is_unique is expected
   23: 
   24: 
   25: def test_is_unique_class_ne(capsys):
   26:     # GH#20661
   27:     class Foo:
   28:         def __init__(self, val) -> None:
   29:             self._value = val
   30: 
   31:         def __ne__(self, other):
   32:             raise Exception("NEQ not supported")
   33: 
   34:     with capsys.disabled():
   35:         li = [Foo(i) for i in range(5)]
   36:         ser = Series(li, index=list(range(5)))
   37: 
   38:     ser.is_unique
   39:     captured = capsys.readouterr()
   40:     assert len(captured.err) == 0
