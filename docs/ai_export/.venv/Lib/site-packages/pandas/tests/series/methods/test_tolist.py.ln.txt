    1: import pytest
    2: 
    3: import pandas.util._test_decorators as td
    4: 
    5: from pandas import (
    6:     Interval,
    7:     Period,
    8:     Series,
    9:     Timedelta,
   10:     Timestamp,
   11: )
   12: 
   13: 
   14: @pytest.mark.parametrize(
   15:     "values, dtype, expected_dtype",
   16:     (
   17:         ([1], "int64", int),
   18:         ([1], "Int64", int),
   19:         ([1.0], "float64", float),
   20:         ([1.0], "Float64", float),
   21:         (["abc"], "object", str),
   22:         (["abc"], "string", str),
   23:         ([Interval(1, 3)], "interval", Interval),
   24:         ([Period("2000-01-01", "D")], "period[D]", Period),
   25:         ([Timedelta(days=1)], "timedelta64[ns]", Timedelta),
   26:         ([Timestamp("2000-01-01")], "datetime64[ns]", Timestamp),
   27:         pytest.param([1], "int64[pyarrow]", int, marks=td.skip_if_no("pyarrow")),
   28:         pytest.param([1.0], "float64[pyarrow]", float, marks=td.skip_if_no("pyarrow")),
   29:         pytest.param(["abc"], "string[pyarrow]", str, marks=td.skip_if_no("pyarrow")),
   30:     ),
   31: )
   32: def test_tolist_scalar_dtype(values, dtype, expected_dtype):
   33:     # GH49890
   34:     ser = Series(values, dtype=dtype)
   35:     result_dtype = type(ser.tolist()[0])
   36:     assert result_dtype == expected_dtype
