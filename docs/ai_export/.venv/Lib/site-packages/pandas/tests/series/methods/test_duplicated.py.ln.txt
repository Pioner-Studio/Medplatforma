    1: import numpy as np
    2: import pytest
    3: 
    4: from pandas import (
    5:     NA,
    6:     Categorical,
    7:     Series,
    8: )
    9: import pandas._testing as tm
   10: 
   11: 
   12: @pytest.mark.parametrize(
   13:     "keep, expected",
   14:     [
   15:         ("first", Series([False, False, True, False, True], name="name")),
   16:         ("last", Series([True, True, False, False, False], name="name")),
   17:         (False, Series([True, True, True, False, True], name="name")),
   18:     ],
   19: )
   20: def test_duplicated_keep(keep, expected):
   21:     ser = Series(["a", "b", "b", "c", "a"], name="name")
   22: 
   23:     result = ser.duplicated(keep=keep)
   24:     tm.assert_series_equal(result, expected)
   25: 
   26: 
   27: @pytest.mark.parametrize(
   28:     "keep, expected",
   29:     [
   30:         ("first", Series([False, False, True, False, True])),
   31:         ("last", Series([True, True, False, False, False])),
   32:         (False, Series([True, True, True, False, True])),
   33:     ],
   34: )
   35: def test_duplicated_nan_none(keep, expected):
   36:     ser = Series([np.nan, 3, 3, None, np.nan], dtype=object)
   37: 
   38:     result = ser.duplicated(keep=keep)
   39:     tm.assert_series_equal(result, expected)
   40: 
   41: 
   42: def test_duplicated_categorical_bool_na(nulls_fixture):
   43:     # GH#44351
   44:     ser = Series(
   45:         Categorical(
   46:             [True, False, True, False, nulls_fixture],
   47:             categories=[True, False],
   48:             ordered=True,
   49:         )
   50:     )
   51:     result = ser.duplicated()
   52:     expected = Series([False, False, True, True, False])
   53:     tm.assert_series_equal(result, expected)
   54: 
   55: 
   56: @pytest.mark.parametrize(
   57:     "keep, vals",
   58:     [
   59:         ("last", [True, True, False]),
   60:         ("first", [False, True, True]),
   61:         (False, [True, True, True]),
   62:     ],
   63: )
   64: def test_duplicated_mask(keep, vals):
   65:     # GH#48150
   66:     ser = Series([1, 2, NA, NA, NA], dtype="Int64")
   67:     result = ser.duplicated(keep=keep)
   68:     expected = Series([False, False] + vals)
   69:     tm.assert_series_equal(result, expected)
   70: 
   71: 
   72: def test_duplicated_mask_no_duplicated_na(keep):
   73:     # GH#48150
   74:     ser = Series([1, 2, NA], dtype="Int64")
   75:     result = ser.duplicated(keep=keep)
   76:     expected = Series([False, False, False])
   77:     tm.assert_series_equal(result, expected)
