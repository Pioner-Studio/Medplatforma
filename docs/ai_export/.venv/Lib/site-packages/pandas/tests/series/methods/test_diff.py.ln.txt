    1: import numpy as np
    2: import pytest
    3: 
    4: from pandas import (
    5:     Series,
    6:     TimedeltaIndex,
    7:     date_range,
    8: )
    9: import pandas._testing as tm
   10: 
   11: 
   12: class TestSeriesDiff:
   13:     def test_diff_np(self):
   14:         # TODO(__array_function__): could make np.diff return a Series
   15:         #  matching ser.diff()
   16: 
   17:         ser = Series(np.arange(5))
   18: 
   19:         res = np.diff(ser)
   20:         expected = np.array([1, 1, 1, 1])
   21:         tm.assert_numpy_array_equal(res, expected)
   22: 
   23:     def test_diff_int(self):
   24:         # int dtype
   25:         a = 10000000000000000
   26:         b = a + 1
   27:         ser = Series([a, b])
   28: 
   29:         result = ser.diff()
   30:         assert result[1] == 1
   31: 
   32:     def test_diff_tz(self):
   33:         # Combined datetime diff, normal diff and boolean diff test
   34:         ts = Series(
   35:             np.arange(10, dtype=np.float64),
   36:             index=date_range("2020-01-01", periods=10),
   37:             name="ts",
   38:         )
   39:         ts.diff()
   40: 
   41:         # neg n
   42:         result = ts.diff(-1)
   43:         expected = ts - ts.shift(-1)
   44:         tm.assert_series_equal(result, expected)
   45: 
   46:         # 0
   47:         result = ts.diff(0)
   48:         expected = ts - ts
   49:         tm.assert_series_equal(result, expected)
   50: 
   51:     def test_diff_dt64(self):
   52:         # datetime diff (GH#3100)
   53:         ser = Series(date_range("20130102", periods=5))
   54:         result = ser.diff()
   55:         expected = ser - ser.shift(1)
   56:         tm.assert_series_equal(result, expected)
   57: 
   58:         # timedelta diff
   59:         result = result - result.shift(1)  # previous result
   60:         expected = expected.diff()  # previously expected
   61:         tm.assert_series_equal(result, expected)
   62: 
   63:     def test_diff_dt64tz(self):
   64:         # with tz
   65:         ser = Series(
   66:             date_range("2000-01-01 09:00:00", periods=5, tz="US/Eastern"), name="foo"
   67:         )
   68:         result = ser.diff()
   69:         expected = Series(TimedeltaIndex(["NaT"] + ["1 days"] * 4), name="foo")
   70:         tm.assert_series_equal(result, expected)
   71: 
   72:     @pytest.mark.parametrize(
   73:         "input,output,diff",
   74:         [([False, True, True, False, False], [np.nan, True, False, True, False], 1)],
   75:     )
   76:     def test_diff_bool(self, input, output, diff):
   77:         # boolean series (test for fixing #17294)
   78:         ser = Series(input)
   79:         result = ser.diff()
   80:         expected = Series(output)
   81:         tm.assert_series_equal(result, expected)
   82: 
   83:     def test_diff_object_dtype(self):
   84:         # object series
   85:         ser = Series([False, True, 5.0, np.nan, True, False])
   86:         result = ser.diff()
   87:         expected = ser - ser.shift(1)
   88:         tm.assert_series_equal(result, expected)
