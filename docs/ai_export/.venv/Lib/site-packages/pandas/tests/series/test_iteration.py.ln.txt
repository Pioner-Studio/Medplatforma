    1: class TestIteration:
    2:     def test_keys(self, datetime_series):
    3:         assert datetime_series.keys() is datetime_series.index
    4: 
    5:     def test_iter_datetimes(self, datetime_series):
    6:         for i, val in enumerate(datetime_series):
    7:             # pylint: disable-next=unnecessary-list-index-lookup
    8:             assert val == datetime_series.iloc[i]
    9: 
   10:     def test_iter_strings(self, string_series):
   11:         for i, val in enumerate(string_series):
   12:             # pylint: disable-next=unnecessary-list-index-lookup
   13:             assert val == string_series.iloc[i]
   14: 
   15:     def test_iteritems_datetimes(self, datetime_series):
   16:         for idx, val in datetime_series.items():
   17:             assert val == datetime_series[idx]
   18: 
   19:     def test_iteritems_strings(self, string_series):
   20:         for idx, val in string_series.items():
   21:             assert val == string_series[idx]
   22: 
   23:         # assert is lazy (generators don't define reverse, lists do)
   24:         assert not hasattr(string_series.items(), "reverse")
   25: 
   26:     def test_items_datetimes(self, datetime_series):
   27:         for idx, val in datetime_series.items():
   28:             assert val == datetime_series[idx]
   29: 
   30:     def test_items_strings(self, string_series):
   31:         for idx, val in string_series.items():
   32:             assert val == string_series[idx]
   33: 
   34:         # assert is lazy (generators don't define reverse, lists do)
   35:         assert not hasattr(string_series.items(), "reverse")
