    1: import numpy as np
    2: import pytest
    3: 
    4: from pandas.errors import DtypeWarning
    5: 
    6: import pandas._testing as tm
    7: from pandas.core.arrays import ArrowExtensionArray
    8: 
    9: from pandas.io.parsers.c_parser_wrapper import _concatenate_chunks
   10: 
   11: 
   12: def test_concatenate_chunks_pyarrow():
   13:     # GH#51876
   14:     pa = pytest.importorskip("pyarrow")
   15:     chunks = [
   16:         {0: ArrowExtensionArray(pa.array([1.5, 2.5]))},
   17:         {0: ArrowExtensionArray(pa.array([1, 2]))},
   18:     ]
   19:     result = _concatenate_chunks(chunks)
   20:     expected = ArrowExtensionArray(pa.array([1.5, 2.5, 1.0, 2.0]))
   21:     tm.assert_extension_array_equal(result[0], expected)
   22: 
   23: 
   24: def test_concatenate_chunks_pyarrow_strings():
   25:     # GH#51876
   26:     pa = pytest.importorskip("pyarrow")
   27:     chunks = [
   28:         {0: ArrowExtensionArray(pa.array([1.5, 2.5]))},
   29:         {0: ArrowExtensionArray(pa.array(["a", "b"]))},
   30:     ]
   31:     with tm.assert_produces_warning(DtypeWarning, match="have mixed types"):
   32:         result = _concatenate_chunks(chunks)
   33:     expected = np.concatenate(
   34:         [np.array([1.5, 2.5], dtype=object), np.array(["a", "b"])]
   35:     )
   36:     tm.assert_numpy_array_equal(result[0], expected)
