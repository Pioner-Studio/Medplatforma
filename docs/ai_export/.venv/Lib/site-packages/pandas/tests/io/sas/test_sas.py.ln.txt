    1: from io import StringIO
    2: 
    3: import pytest
    4: 
    5: from pandas import read_sas
    6: import pandas._testing as tm
    7: 
    8: 
    9: class TestSas:
   10:     def test_sas_buffer_format(self):
   11:         # see gh-14947
   12:         b = StringIO("")
   13: 
   14:         msg = (
   15:             "If this is a buffer object rather than a string "
   16:             "name, you must specify a format string"
   17:         )
   18:         with pytest.raises(ValueError, match=msg):
   19:             read_sas(b)
   20: 
   21:     def test_sas_read_no_format_or_extension(self):
   22:         # see gh-24548
   23:         msg = "unable to infer format of SAS file.+"
   24:         with tm.ensure_clean("test_file_no_extension") as path:
   25:             with pytest.raises(ValueError, match=msg):
   26:                 read_sas(path)
   27: 
   28: 
   29: def test_sas_archive(datapath):
   30:     fname_uncompressed = datapath("io", "sas", "data", "airline.sas7bdat")
   31:     df_uncompressed = read_sas(fname_uncompressed)
   32:     fname_compressed = datapath("io", "sas", "data", "airline.sas7bdat.gz")
   33:     df_compressed = read_sas(fname_compressed, format="sas7bdat")
   34:     tm.assert_frame_equal(df_uncompressed, df_compressed)
