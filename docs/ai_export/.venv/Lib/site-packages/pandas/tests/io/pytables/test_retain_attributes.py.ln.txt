    1: import pytest
    2: 
    3: from pandas import (
    4:     DataFrame,
    5:     DatetimeIndex,
    6:     Series,
    7:     _testing as tm,
    8:     date_range,
    9:     errors,
   10:     read_hdf,
   11: )
   12: from pandas.tests.io.pytables.common import (
   13:     _maybe_remove,
   14:     ensure_clean_store,
   15: )
   16: 
   17: pytestmark = pytest.mark.single_cpu
   18: 
   19: 
   20: def test_retain_index_attributes(setup_path, unit):
   21:     # GH 3499, losing frequency info on index recreation
   22:     dti = date_range("2000-1-1", periods=3, freq="h", unit=unit)
   23:     df = DataFrame({"A": Series(range(3), index=dti)})
   24: 
   25:     with ensure_clean_store(setup_path) as store:
   26:         _maybe_remove(store, "data")
   27:         store.put("data", df, format="table")
   28: 
   29:         result = store.get("data")
   30:         tm.assert_frame_equal(df, result)
   31: 
   32:         for attr in ["freq", "tz", "name"]:
   33:             for idx in ["index", "columns"]:
   34:                 assert getattr(getattr(df, idx), attr, None) == getattr(
   35:                     getattr(result, idx), attr, None
   36:                 )
   37: 
   38:         dti2 = date_range("2002-1-1", periods=3, freq="D", unit=unit)
   39:         # try to append a table with a different frequency
   40:         with tm.assert_produces_warning(errors.AttributeConflictWarning):
   41:             df2 = DataFrame({"A": Series(range(3), index=dti2)})
   42:             store.append("data", df2)
   43: 
   44:         assert store.get_storer("data").info["index"]["freq"] is None
   45: 
   46:         # this is ok
   47:         _maybe_remove(store, "df2")
   48:         dti3 = DatetimeIndex(
   49:             ["2001-01-01", "2001-01-02", "2002-01-01"], dtype=f"M8[{unit}]"
   50:         )
   51:         df2 = DataFrame(
   52:             {
   53:                 "A": Series(
   54:                     range(3),
   55:                     index=dti3,
   56:                 )
   57:             }
   58:         )
   59:         store.append("df2", df2)
   60:         dti4 = date_range("2002-1-1", periods=3, freq="D", unit=unit)
   61:         df3 = DataFrame({"A": Series(range(3), index=dti4)})
   62:         store.append("df2", df3)
   63: 
   64: 
   65: def test_retain_index_attributes2(tmp_path, setup_path):
   66:     path = tmp_path / setup_path
   67: 
   68:     with tm.assert_produces_warning(errors.AttributeConflictWarning):
   69:         df = DataFrame(
   70:             {"A": Series(range(3), index=date_range("2000-1-1", periods=3, freq="h"))}
   71:         )
   72:         df.to_hdf(path, key="data", mode="w", append=True)
   73:         df2 = DataFrame(
   74:             {"A": Series(range(3), index=date_range("2002-1-1", periods=3, freq="D"))}
   75:         )
   76: 
   77:         df2.to_hdf(path, key="data", append=True)
   78: 
   79:         idx = date_range("2000-1-1", periods=3, freq="h")
   80:         idx.name = "foo"
   81:         df = DataFrame({"A": Series(range(3), index=idx)})
   82:         df.to_hdf(path, key="data", mode="w", append=True)
   83: 
   84:     assert read_hdf(path, key="data").index.name == "foo"
   85: 
   86:     with tm.assert_produces_warning(errors.AttributeConflictWarning):
   87:         idx2 = date_range("2001-1-1", periods=3, freq="h")
   88:         idx2.name = "bar"
   89:         df2 = DataFrame({"A": Series(range(3), index=idx2)})
   90:         df2.to_hdf(path, key="data", append=True)
   91: 
   92:     assert read_hdf(path, "data").index.name is None
