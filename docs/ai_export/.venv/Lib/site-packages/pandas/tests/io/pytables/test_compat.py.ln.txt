    1: import pytest
    2: 
    3: import pandas as pd
    4: import pandas._testing as tm
    5: 
    6: tables = pytest.importorskip("tables")
    7: 
    8: 
    9: @pytest.fixture
   10: def pytables_hdf5_file(tmp_path):
   11:     """
   12:     Use PyTables to create a simple HDF5 file.
   13:     """
   14:     table_schema = {
   15:         "c0": tables.Time64Col(pos=0),
   16:         "c1": tables.StringCol(5, pos=1),
   17:         "c2": tables.Int64Col(pos=2),
   18:     }
   19: 
   20:     t0 = 1_561_105_000.0
   21: 
   22:     testsamples = [
   23:         {"c0": t0, "c1": "aaaaa", "c2": 1},
   24:         {"c0": t0 + 1, "c1": "bbbbb", "c2": 2},
   25:         {"c0": t0 + 2, "c1": "ccccc", "c2": 10**5},
   26:         {"c0": t0 + 3, "c1": "ddddd", "c2": 4_294_967_295},
   27:     ]
   28: 
   29:     objname = "pandas_test_timeseries"
   30: 
   31:     path = tmp_path / "written_with_pytables.h5"
   32:     with tables.open_file(path, mode="w") as f:
   33:         t = f.create_table("/", name=objname, description=table_schema)
   34:         for sample in testsamples:
   35:             for key, value in sample.items():
   36:                 t.row[key] = value
   37:             t.row.append()
   38: 
   39:     yield path, objname, pd.DataFrame(testsamples)
   40: 
   41: 
   42: class TestReadPyTablesHDF5:
   43:     """
   44:     A group of tests which covers reading HDF5 files written by plain PyTables
   45:     (not written by pandas).
   46: 
   47:     Was introduced for regression-testing issue 11188.
   48:     """
   49: 
   50:     def test_read_complete(self, pytables_hdf5_file):
   51:         path, objname, df = pytables_hdf5_file
   52:         result = pd.read_hdf(path, key=objname)
   53:         expected = df
   54:         tm.assert_frame_equal(result, expected, check_index_type=True)
   55: 
   56:     def test_read_with_start(self, pytables_hdf5_file):
   57:         path, objname, df = pytables_hdf5_file
   58:         # This is a regression test for pandas-dev/pandas/issues/11188
   59:         result = pd.read_hdf(path, key=objname, start=1)
   60:         expected = df[1:].reset_index(drop=True)
   61:         tm.assert_frame_equal(result, expected, check_index_type=True)
   62: 
   63:     def test_read_with_stop(self, pytables_hdf5_file):
   64:         path, objname, df = pytables_hdf5_file
   65:         # This is a regression test for pandas-dev/pandas/issues/11188
   66:         result = pd.read_hdf(path, key=objname, stop=1)
   67:         expected = df[:1].reset_index(drop=True)
   68:         tm.assert_frame_equal(result, expected, check_index_type=True)
   69: 
   70:     def test_read_with_startstop(self, pytables_hdf5_file):
   71:         path, objname, df = pytables_hdf5_file
   72:         # This is a regression test for pandas-dev/pandas/issues/11188
   73:         result = pd.read_hdf(path, key=objname, start=1, stop=2)
   74:         expected = df[1:2].reset_index(drop=True)
   75:         tm.assert_frame_equal(result, expected, check_index_type=True)
