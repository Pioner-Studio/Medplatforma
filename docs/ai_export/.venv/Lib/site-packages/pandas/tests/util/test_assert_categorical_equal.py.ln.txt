    1: import pytest
    2: 
    3: from pandas import Categorical
    4: import pandas._testing as tm
    5: 
    6: 
    7: @pytest.mark.parametrize(
    8:     "c",
    9:     [Categorical([1, 2, 3, 4]), Categorical([1, 2, 3, 4], categories=[1, 2, 3, 4, 5])],
   10: )
   11: def test_categorical_equal(c):
   12:     tm.assert_categorical_equal(c, c)
   13: 
   14: 
   15: @pytest.mark.parametrize("check_category_order", [True, False])
   16: def test_categorical_equal_order_mismatch(check_category_order):
   17:     c1 = Categorical([1, 2, 3, 4], categories=[1, 2, 3, 4])
   18:     c2 = Categorical([1, 2, 3, 4], categories=[4, 3, 2, 1])
   19:     kwargs = {"check_category_order": check_category_order}
   20: 
   21:     if check_category_order:
   22:         msg = """Categorical\\.categories are different
   23: 
   24: Categorical\\.categories values are different \\(100\\.0 %\\)
   25: \\[left\\]:  Index\\(\\[1, 2, 3, 4\\], dtype='int64'\\)
   26: \\[right\\]: Index\\(\\[4, 3, 2, 1\\], dtype='int64'\\)"""
   27:         with pytest.raises(AssertionError, match=msg):
   28:             tm.assert_categorical_equal(c1, c2, **kwargs)
   29:     else:
   30:         tm.assert_categorical_equal(c1, c2, **kwargs)
   31: 
   32: 
   33: def test_categorical_equal_categories_mismatch():
   34:     msg = """Categorical\\.categories are different
   35: 
   36: Categorical\\.categories values are different \\(25\\.0 %\\)
   37: \\[left\\]:  Index\\(\\[1, 2, 3, 4\\], dtype='int64'\\)
   38: \\[right\\]: Index\\(\\[1, 2, 3, 5\\], dtype='int64'\\)"""
   39: 
   40:     c1 = Categorical([1, 2, 3, 4])
   41:     c2 = Categorical([1, 2, 3, 5])
   42: 
   43:     with pytest.raises(AssertionError, match=msg):
   44:         tm.assert_categorical_equal(c1, c2)
   45: 
   46: 
   47: def test_categorical_equal_codes_mismatch():
   48:     categories = [1, 2, 3, 4]
   49:     msg = """Categorical\\.codes are different
   50: 
   51: Categorical\\.codes values are different \\(50\\.0 %\\)
   52: \\[left\\]:  \\[0, 1, 3, 2\\]
   53: \\[right\\]: \\[0, 1, 2, 3\\]"""
   54: 
   55:     c1 = Categorical([1, 2, 4, 3], categories=categories)
   56:     c2 = Categorical([1, 2, 3, 4], categories=categories)
   57: 
   58:     with pytest.raises(AssertionError, match=msg):
   59:         tm.assert_categorical_equal(c1, c2)
   60: 
   61: 
   62: def test_categorical_equal_ordered_mismatch():
   63:     data = [1, 2, 3, 4]
   64:     msg = """Categorical are different
   65: 
   66: Attribute "ordered" are different
   67: \\[left\\]:  False
   68: \\[right\\]: True"""
   69: 
   70:     c1 = Categorical(data, ordered=False)
   71:     c2 = Categorical(data, ordered=True)
   72: 
   73:     with pytest.raises(AssertionError, match=msg):
   74:         tm.assert_categorical_equal(c1, c2)
   75: 
   76: 
   77: @pytest.mark.parametrize("obj", ["index", "foo", "pandas"])
   78: def test_categorical_equal_object_override(obj):
   79:     data = [1, 2, 3, 4]
   80:     msg = f"""{obj} are different
   81: 
   82: Attribute "ordered" are different
   83: \\[left\\]:  False
   84: \\[right\\]: True"""
   85: 
   86:     c1 = Categorical(data, ordered=False)
   87:     c2 = Categorical(data, ordered=True)
   88: 
   89:     with pytest.raises(AssertionError, match=msg):
   90:         tm.assert_categorical_equal(c1, c2, obj=obj)
