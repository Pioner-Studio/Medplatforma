    1: import pytest
    2: 
    3: from pandas import interval_range
    4: import pandas._testing as tm
    5: 
    6: 
    7: @pytest.mark.parametrize(
    8:     "kwargs",
    9:     [
   10:         {"start": 0, "periods": 4},
   11:         {"start": 1, "periods": 5},
   12:         {"start": 5, "end": 10, "closed": "left"},
   13:     ],
   14: )
   15: def test_interval_array_equal(kwargs):
   16:     arr = interval_range(**kwargs).values
   17:     tm.assert_interval_array_equal(arr, arr)
   18: 
   19: 
   20: def test_interval_array_equal_closed_mismatch():
   21:     kwargs = {"start": 0, "periods": 5}
   22:     arr1 = interval_range(closed="left", **kwargs).values
   23:     arr2 = interval_range(closed="right", **kwargs).values
   24: 
   25:     msg = """\
   26: IntervalArray are different
   27: 
   28: Attribute "closed" are different
   29: \\[left\\]:  left
   30: \\[right\\]: right"""
   31: 
   32:     with pytest.raises(AssertionError, match=msg):
   33:         tm.assert_interval_array_equal(arr1, arr2)
   34: 
   35: 
   36: def test_interval_array_equal_periods_mismatch():
   37:     kwargs = {"start": 0}
   38:     arr1 = interval_range(periods=5, **kwargs).values
   39:     arr2 = interval_range(periods=6, **kwargs).values
   40: 
   41:     msg = """\
   42: IntervalArray.left are different
   43: 
   44: IntervalArray.left shapes are different
   45: \\[left\\]:  \\(5,\\)
   46: \\[right\\]: \\(6,\\)"""
   47: 
   48:     with pytest.raises(AssertionError, match=msg):
   49:         tm.assert_interval_array_equal(arr1, arr2)
   50: 
   51: 
   52: def test_interval_array_equal_end_mismatch():
   53:     kwargs = {"start": 0, "periods": 5}
   54:     arr1 = interval_range(end=10, **kwargs).values
   55:     arr2 = interval_range(end=20, **kwargs).values
   56: 
   57:     msg = """\
   58: IntervalArray.left are different
   59: 
   60: IntervalArray.left values are different \\(80.0 %\\)
   61: \\[left\\]:  \\[0, 2, 4, 6, 8\\]
   62: \\[right\\]: \\[0, 4, 8, 12, 16\\]"""
   63: 
   64:     with pytest.raises(AssertionError, match=msg):
   65:         tm.assert_interval_array_equal(arr1, arr2)
   66: 
   67: 
   68: def test_interval_array_equal_start_mismatch():
   69:     kwargs = {"periods": 4}
   70:     arr1 = interval_range(start=0, **kwargs).values
   71:     arr2 = interval_range(start=1, **kwargs).values
   72: 
   73:     msg = """\
   74: IntervalArray.left are different
   75: 
   76: IntervalArray.left values are different \\(100.0 %\\)
   77: \\[left\\]:  \\[0, 1, 2, 3\\]
   78: \\[right\\]: \\[1, 2, 3, 4\\]"""
   79: 
   80:     with pytest.raises(AssertionError, match=msg):
   81:         tm.assert_interval_array_equal(arr1, arr2)
