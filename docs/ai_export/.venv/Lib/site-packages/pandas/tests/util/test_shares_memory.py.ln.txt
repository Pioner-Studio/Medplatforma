    1: import pandas.util._test_decorators as td
    2: 
    3: import pandas as pd
    4: import pandas._testing as tm
    5: 
    6: 
    7: def test_shares_memory_interval():
    8:     obj = pd.interval_range(1, 5)
    9: 
   10:     assert tm.shares_memory(obj, obj)
   11:     assert tm.shares_memory(obj, obj._data)
   12:     assert tm.shares_memory(obj, obj[::-1])
   13:     assert tm.shares_memory(obj, obj[:2])
   14: 
   15:     assert not tm.shares_memory(obj, obj._data.copy())
   16: 
   17: 
   18: @td.skip_if_no("pyarrow")
   19: def test_shares_memory_string():
   20:     # GH#55823
   21:     import pyarrow as pa
   22: 
   23:     obj = pd.array(["a", "b"], dtype="string[pyarrow]")
   24:     assert tm.shares_memory(obj, obj)
   25: 
   26:     obj = pd.array(["a", "b"], dtype="string[pyarrow_numpy]")
   27:     assert tm.shares_memory(obj, obj)
   28: 
   29:     obj = pd.array(["a", "b"], dtype=pd.ArrowDtype(pa.string()))
   30:     assert tm.shares_memory(obj, obj)
