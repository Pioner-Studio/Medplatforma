    1: from textwrap import dedent
    2: 
    3: import pytest
    4: 
    5: from pandas.util._decorators import deprecate
    6: 
    7: import pandas._testing as tm
    8: 
    9: 
   10: def new_func():
   11:     """
   12:     This is the summary. The deprecate directive goes next.
   13: 
   14:     This is the extended summary. The deprecate directive goes before this.
   15:     """
   16:     return "new_func called"
   17: 
   18: 
   19: def new_func_no_docstring():
   20:     return "new_func_no_docstring called"
   21: 
   22: 
   23: def new_func_wrong_docstring():
   24:     """Summary should be in the next line."""
   25:     return "new_func_wrong_docstring called"
   26: 
   27: 
   28: def new_func_with_deprecation():
   29:     """
   30:     This is the summary. The deprecate directive goes next.
   31: 
   32:     .. deprecated:: 1.0
   33:         Use new_func instead.
   34: 
   35:     This is the extended summary. The deprecate directive goes before this.
   36:     """
   37: 
   38: 
   39: def test_deprecate_ok():
   40:     depr_func = deprecate("depr_func", new_func, "1.0", msg="Use new_func instead.")
   41: 
   42:     with tm.assert_produces_warning(FutureWarning):
   43:         result = depr_func()
   44: 
   45:     assert result == "new_func called"
   46:     assert depr_func.__doc__ == dedent(new_func_with_deprecation.__doc__)
   47: 
   48: 
   49: def test_deprecate_no_docstring():
   50:     depr_func = deprecate(
   51:         "depr_func", new_func_no_docstring, "1.0", msg="Use new_func instead."
   52:     )
   53:     with tm.assert_produces_warning(FutureWarning):
   54:         result = depr_func()
   55:     assert result == "new_func_no_docstring called"
   56: 
   57: 
   58: def test_deprecate_wrong_docstring():
   59:     msg = "deprecate needs a correctly formatted docstring"
   60:     with pytest.raises(AssertionError, match=msg):
   61:         deprecate(
   62:             "depr_func", new_func_wrong_docstring, "1.0", msg="Use new_func instead."
   63:         )
