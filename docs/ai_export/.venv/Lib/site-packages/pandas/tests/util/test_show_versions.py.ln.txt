    1: import json
    2: import os
    3: import re
    4: 
    5: from pandas.util._print_versions import (
    6:     _get_dependency_info,
    7:     _get_sys_info,
    8: )
    9: 
   10: import pandas as pd
   11: 
   12: 
   13: def test_show_versions(tmpdir):
   14:     # GH39701
   15:     as_json = os.path.join(tmpdir, "test_output.json")
   16: 
   17:     pd.show_versions(as_json=as_json)
   18: 
   19:     with open(as_json, encoding="utf-8") as fd:
   20:         # check if file output is valid JSON, will raise an exception if not
   21:         result = json.load(fd)
   22: 
   23:     # Basic check that each version element is found in output
   24:     expected = {
   25:         "system": _get_sys_info(),
   26:         "dependencies": _get_dependency_info(),
   27:     }
   28: 
   29:     assert result == expected
   30: 
   31: 
   32: def test_show_versions_console_json(capsys):
   33:     # GH39701
   34:     pd.show_versions(as_json=True)
   35:     stdout = capsys.readouterr().out
   36: 
   37:     # check valid json is printed to the console if as_json is True
   38:     result = json.loads(stdout)
   39: 
   40:     # Basic check that each version element is found in output
   41:     expected = {
   42:         "system": _get_sys_info(),
   43:         "dependencies": _get_dependency_info(),
   44:     }
   45: 
   46:     assert result == expected
   47: 
   48: 
   49: def test_show_versions_console(capsys):
   50:     # gh-32041
   51:     # gh-32041
   52:     pd.show_versions(as_json=False)
   53:     result = capsys.readouterr().out
   54: 
   55:     # check header
   56:     assert "INSTALLED VERSIONS" in result
   57: 
   58:     # check full commit hash
   59:     assert re.search(r"commit\s*:\s[0-9a-f]{40}\n", result)
   60: 
   61:     # check required dependency
   62:     # 2020-12-09 npdev has "dirty" in the tag
   63:     # 2022-05-25 npdev released with RC wo/ "dirty".
   64:     # Just ensure we match [0-9]+\..* since npdev version is variable
   65:     assert re.search(r"numpy\s*:\s[0-9]+\..*\n", result)
   66: 
   67:     # check optional dependency
   68:     assert re.search(r"pyarrow\s*:\s([0-9]+.*|None)\n", result)
   69: 
   70: 
   71: def test_json_output_match(capsys, tmpdir):
   72:     # GH39701
   73:     pd.show_versions(as_json=True)
   74:     result_console = capsys.readouterr().out
   75: 
   76:     out_path = os.path.join(tmpdir, "test_json.json")
   77:     pd.show_versions(as_json=out_path)
   78:     with open(out_path, encoding="utf-8") as out_fd:
   79:         result_file = out_fd.read()
   80: 
   81:     assert result_console == result_file
