    1: import numpy as np
    2: import pytest
    3: 
    4: from pandas.util._validators import validate_inclusive
    5: 
    6: import pandas as pd
    7: 
    8: 
    9: @pytest.mark.parametrize(
   10:     "invalid_inclusive",
   11:     (
   12:         "ccc",
   13:         2,
   14:         object(),
   15:         None,
   16:         np.nan,
   17:         pd.NA,
   18:         pd.DataFrame(),
   19:     ),
   20: )
   21: def test_invalid_inclusive(invalid_inclusive):
   22:     with pytest.raises(
   23:         ValueError,
   24:         match="Inclusive has to be either 'both', 'neither', 'left' or 'right'",
   25:     ):
   26:         validate_inclusive(invalid_inclusive)
   27: 
   28: 
   29: @pytest.mark.parametrize(
   30:     "valid_inclusive, expected_tuple",
   31:     (
   32:         ("left", (True, False)),
   33:         ("right", (False, True)),
   34:         ("both", (True, True)),
   35:         ("neither", (False, False)),
   36:     ),
   37: )
   38: def test_valid_inclusive(valid_inclusive, expected_tuple):
   39:     resultant_tuple = validate_inclusive(valid_inclusive)
   40:     assert expected_tuple == resultant_tuple
