    1: from textwrap import dedent
    2: 
    3: from pandas.util._decorators import doc
    4: 
    5: 
    6: @doc(method="cumsum", operation="sum")
    7: def cumsum(whatever):
    8:     """
    9:     This is the {method} method.
   10: 
   11:     It computes the cumulative {operation}.
   12:     """
   13: 
   14: 
   15: @doc(
   16:     cumsum,
   17:     dedent(
   18:         """
   19:         Examples
   20:         --------
   21: 
   22:         >>> cumavg([1, 2, 3])
   23:         2
   24:         """
   25:     ),
   26:     method="cumavg",
   27:     operation="average",
   28: )
   29: def cumavg(whatever):
   30:     pass
   31: 
   32: 
   33: @doc(cumsum, method="cummax", operation="maximum")
   34: def cummax(whatever):
   35:     pass
   36: 
   37: 
   38: @doc(cummax, method="cummin", operation="minimum")
   39: def cummin(whatever):
   40:     pass
   41: 
   42: 
   43: def test_docstring_formatting():
   44:     docstr = dedent(
   45:         """
   46:         This is the cumsum method.
   47: 
   48:         It computes the cumulative sum.
   49:         """
   50:     )
   51:     assert cumsum.__doc__ == docstr
   52: 
   53: 
   54: def test_docstring_appending():
   55:     docstr = dedent(
   56:         """
   57:         This is the cumavg method.
   58: 
   59:         It computes the cumulative average.
   60: 
   61:         Examples
   62:         --------
   63: 
   64:         >>> cumavg([1, 2, 3])
   65:         2
   66:         """
   67:     )
   68:     assert cumavg.__doc__ == docstr
   69: 
   70: 
   71: def test_doc_template_from_func():
   72:     docstr = dedent(
   73:         """
   74:         This is the cummax method.
   75: 
   76:         It computes the cumulative maximum.
   77:         """
   78:     )
   79:     assert cummax.__doc__ == docstr
   80: 
   81: 
   82: def test_inherit_doc_template():
   83:     docstr = dedent(
   84:         """
   85:         This is the cummin method.
   86: 
   87:         It computes the cumulative minimum.
   88:         """
   89:     )
   90:     assert cummin.__doc__ == docstr
