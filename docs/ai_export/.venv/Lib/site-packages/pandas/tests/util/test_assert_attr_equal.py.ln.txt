    1: from types import SimpleNamespace
    2: 
    3: import pytest
    4: 
    5: from pandas.core.dtypes.common import is_float
    6: 
    7: import pandas._testing as tm
    8: 
    9: 
   10: def test_assert_attr_equal(nulls_fixture):
   11:     obj = SimpleNamespace()
   12:     obj.na_value = nulls_fixture
   13:     tm.assert_attr_equal("na_value", obj, obj)
   14: 
   15: 
   16: def test_assert_attr_equal_different_nulls(nulls_fixture, nulls_fixture2):
   17:     obj = SimpleNamespace()
   18:     obj.na_value = nulls_fixture
   19: 
   20:     obj2 = SimpleNamespace()
   21:     obj2.na_value = nulls_fixture2
   22: 
   23:     if nulls_fixture is nulls_fixture2:
   24:         tm.assert_attr_equal("na_value", obj, obj2)
   25:     elif is_float(nulls_fixture) and is_float(nulls_fixture2):
   26:         # we consider float("nan") and np.float64("nan") to be equivalent
   27:         tm.assert_attr_equal("na_value", obj, obj2)
   28:     elif type(nulls_fixture) is type(nulls_fixture2):
   29:         # e.g. Decimal("NaN")
   30:         tm.assert_attr_equal("na_value", obj, obj2)
   31:     else:
   32:         with pytest.raises(AssertionError, match='"na_value" are different'):
   33:             tm.assert_attr_equal("na_value", obj, obj2)
