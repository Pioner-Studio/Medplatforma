    1: import typing as t
    2: 
    3: from .filters import FILTERS as DEFAULT_FILTERS  # noqa: F401
    4: from .tests import TESTS as DEFAULT_TESTS  # noqa: F401
    5: from .utils import Cycler
    6: from .utils import generate_lorem_ipsum
    7: from .utils import Joiner
    8: from .utils import Namespace
    9: 
   10: if t.TYPE_CHECKING:
   11:     import typing_extensions as te
   12: 
   13: # defaults for the parser / lexer
   14: BLOCK_START_STRING = "{%"
   15: BLOCK_END_STRING = "%}"
   16: VARIABLE_START_STRING = "{{"
   17: VARIABLE_END_STRING = "}}"
   18: COMMENT_START_STRING = "{#"
   19: COMMENT_END_STRING = "#}"
   20: LINE_STATEMENT_PREFIX: t.Optional[str] = None
   21: LINE_COMMENT_PREFIX: t.Optional[str] = None
   22: TRIM_BLOCKS = False
   23: LSTRIP_BLOCKS = False
   24: NEWLINE_SEQUENCE: "te.Literal['\\n', '\\r\\n', '\\r']" = "\n"
   25: KEEP_TRAILING_NEWLINE = False
   26: 
   27: # default filters, tests and namespace
   28: 
   29: DEFAULT_NAMESPACE = {
   30:     "range": range,
   31:     "dict": dict,
   32:     "lipsum": generate_lorem_ipsum,
   33:     "cycler": Cycler,
   34:     "joiner": Joiner,
   35:     "namespace": Namespace,
   36: }
   37: 
   38: # default policies
   39: DEFAULT_POLICIES: t.Dict[str, t.Any] = {
   40:     "compiler.ascii_str": True,
   41:     "urlize.rel": "noopener",
   42:     "urlize.target": None,
   43:     "urlize.extra_schemes": None,
   44:     "truncate.leeway": 5,
   45:     "json.dumps_function": None,
   46:     "json.dumps_kwargs": {"sort_keys": True},
   47:     "ext.i18n.trimmed": False,
   48: }
