    1: """Jinja is a template engine written in pure Python. It provides a
    2: non-XML syntax that supports inline expressions and an optional
    3: sandboxed environment.
    4: """
    5: 
    6: from .bccache import BytecodeCache as BytecodeCache
    7: from .bccache import FileSystemBytecodeCache as FileSystemBytecodeCache
    8: from .bccache import MemcachedBytecodeCache as MemcachedBytecodeCache
    9: from .environment import Environment as Environment
   10: from .environment import Template as Template
   11: from .exceptions import TemplateAssertionError as TemplateAssertionError
   12: from .exceptions import TemplateError as TemplateError
   13: from .exceptions import TemplateNotFound as TemplateNotFound
   14: from .exceptions import TemplateRuntimeError as TemplateRuntimeError
   15: from .exceptions import TemplatesNotFound as TemplatesNotFound
   16: from .exceptions import TemplateSyntaxError as TemplateSyntaxError
   17: from .exceptions import UndefinedError as UndefinedError
   18: from .loaders import BaseLoader as BaseLoader
   19: from .loaders import ChoiceLoader as ChoiceLoader
   20: from .loaders import DictLoader as DictLoader
   21: from .loaders import FileSystemLoader as FileSystemLoader
   22: from .loaders import FunctionLoader as FunctionLoader
   23: from .loaders import ModuleLoader as ModuleLoader
   24: from .loaders import PackageLoader as PackageLoader
   25: from .loaders import PrefixLoader as PrefixLoader
   26: from .runtime import ChainableUndefined as ChainableUndefined
   27: from .runtime import DebugUndefined as DebugUndefined
   28: from .runtime import make_logging_undefined as make_logging_undefined
   29: from .runtime import StrictUndefined as StrictUndefined
   30: from .runtime import Undefined as Undefined
   31: from .utils import clear_caches as clear_caches
   32: from .utils import is_undefined as is_undefined
   33: from .utils import pass_context as pass_context
   34: from .utils import pass_environment as pass_environment
   35: from .utils import pass_eval_context as pass_eval_context
   36: from .utils import select_autoescape as select_autoescape
   37: 
   38: __version__ = "3.1.4"
