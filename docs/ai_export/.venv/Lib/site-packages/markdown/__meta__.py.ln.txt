    1: # Python Markdown
    2: 
    3: # A Python implementation of John Gruber's Markdown.
    4: 
    5: # Documentation: https://python-markdown.github.io/
    6: # GitHub: https://github.com/Python-Markdown/markdown/
    7: # PyPI: https://pypi.org/project/Markdown/
    8: 
    9: # Started by Manfred Stienstra (http://www.dwerg.net/).
   10: # Maintained for a few years by Yuri Takhteyev (http://www.freewisdom.org).
   11: # Currently maintained by Waylan Limberg (https://github.com/waylan),
   12: # Dmitry Shachnev (https://github.com/mitya57) and Isaac Muse (https://github.com/facelessuser).
   13: 
   14: # Copyright 2007-2023 The Python Markdown Project (v. 1.7 and later)
   15: # Copyright 2004, 2005, 2006 Yuri Takhteyev (v. 0.2-1.6b)
   16: # Copyright 2004 Manfred Stienstra (the original version)
   17: 
   18: # License: BSD (see LICENSE.md for details).
   19: 
   20: # __version_info__ format:
   21: #     (major, minor, patch, dev/alpha/beta/rc/final, #)
   22: #     (1, 1, 2, 'dev', 0) => "1.1.2.dev0"
   23: #     (1, 1, 2, 'alpha', 1) => "1.1.2a1"
   24: #     (1, 2, 0, 'beta', 2) => "1.2b2"
   25: #     (1, 2, 0, 'rc', 4) => "1.2rc4"
   26: #     (1, 2, 0, 'final', 0) => "1.2"
   27: 
   28: from __future__ import annotations
   29: 
   30: 
   31: __version_info__ = (3, 6, 0, 'final', 0)
   32: 
   33: 
   34: def _get_version(version_info):
   35:     " Returns a PEP 440-compliant version number from `version_info`. "
   36:     assert len(version_info) == 5
   37:     assert version_info[3] in ('dev', 'alpha', 'beta', 'rc', 'final')
   38: 
   39:     parts = 2 if version_info[2] == 0 else 3
   40:     v = '.'.join(map(str, version_info[:parts]))
   41: 
   42:     if version_info[3] == 'dev':
   43:         v += '.dev' + str(version_info[4])
   44:     elif version_info[3] != 'final':
   45:         mapping = {'alpha': 'a', 'beta': 'b', 'rc': 'rc'}
   46:         v += mapping[version_info[3]] + str(version_info[4])
   47: 
   48:     return v
   49: 
   50: 
   51: __version__ = _get_version(__version_info__)
