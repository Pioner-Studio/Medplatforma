    1: """
    2: A platform independent file lock that supports the with-statement.
    3: 
    4: .. autodata:: filelock.__version__
    5:    :no-value:
    6: 
    7: """
    8: 
    9: from __future__ import annotations
   10: 
   11: import sys
   12: import warnings
   13: from typing import TYPE_CHECKING
   14: 
   15: from ._api import AcquireReturnProxy, BaseFileLock
   16: from ._error import Timeout
   17: from ._soft import SoftFileLock
   18: from ._unix import UnixFileLock, has_fcntl
   19: from ._windows import WindowsFileLock
   20: from .asyncio import (
   21:     AsyncAcquireReturnProxy,
   22:     AsyncSoftFileLock,
   23:     AsyncUnixFileLock,
   24:     AsyncWindowsFileLock,
   25:     BaseAsyncFileLock,
   26: )
   27: from .version import version
   28: 
   29: #: version of the project as a string
   30: __version__: str = version
   31: 
   32: 
   33: if sys.platform == "win32":  # pragma: win32 cover
   34:     _FileLock: type[BaseFileLock] = WindowsFileLock
   35:     _AsyncFileLock: type[BaseAsyncFileLock] = AsyncWindowsFileLock
   36: else:  # pragma: win32 no cover # noqa: PLR5501
   37:     if has_fcntl:
   38:         _FileLock: type[BaseFileLock] = UnixFileLock
   39:         _AsyncFileLock: type[BaseAsyncFileLock] = AsyncUnixFileLock
   40:     else:
   41:         _FileLock = SoftFileLock
   42:         _AsyncFileLock = AsyncSoftFileLock
   43:         if warnings is not None:
   44:             warnings.warn("only soft file lock is available", stacklevel=2)
   45: 
   46: if TYPE_CHECKING:
   47:     FileLock = SoftFileLock
   48:     AsyncFileLock = AsyncSoftFileLock
   49: else:
   50:     #: Alias for the lock, which should be used for the current platform.
   51:     FileLock = _FileLock
   52:     AsyncFileLock = _AsyncFileLock
   53: 
   54: 
   55: __all__ = [
   56:     "AcquireReturnProxy",
   57:     "AsyncAcquireReturnProxy",
   58:     "AsyncFileLock",
   59:     "AsyncSoftFileLock",
   60:     "AsyncUnixFileLock",
   61:     "AsyncWindowsFileLock",
   62:     "BaseAsyncFileLock",
   63:     "BaseFileLock",
   64:     "FileLock",
   65:     "SoftFileLock",
   66:     "Timeout",
   67:     "UnixFileLock",
   68:     "WindowsFileLock",
   69:     "__version__",
   70: ]
