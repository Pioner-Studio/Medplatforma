    1: ###############################################################################
    2: #
    3: # RichValueTypes - A class for writing the Excel XLSX rdRichValueTypes.xml file.
    4: #
    5: # SPDX-License-Identifier: BSD-2-Clause
    6: # Copyright 2013-2024, John McNamara, jmcnamara@cpan.org
    7: #
    8: 
    9: # Package imports.
   10: from . import xmlwriter
   11: 
   12: 
   13: class RichValueTypes(xmlwriter.XMLwriter):
   14:     """
   15:     A class for writing the Excel XLSX rdRichValueTypes.xml file.
   16: 
   17: 
   18:     """
   19: 
   20:     ###########################################################################
   21:     #
   22:     # Public API.
   23:     #
   24:     ###########################################################################
   25: 
   26:     def __init__(self):
   27:         """
   28:         Constructor.
   29: 
   30:         """
   31: 
   32:         super(RichValueTypes, self).__init__()
   33: 
   34:     ###########################################################################
   35:     #
   36:     # Private API.
   37:     #
   38:     ###########################################################################
   39: 
   40:     def _assemble_xml_file(self):
   41:         # Assemble and write the XML file.
   42: 
   43:         # Write the XML declaration.
   44:         self._xml_declaration()
   45: 
   46:         # Write the rvTypesInfo element.
   47:         self._write_rv_types_info()
   48: 
   49:         # Write the global element.
   50:         self._write_global()
   51: 
   52:         self._xml_end_tag("rvTypesInfo")
   53: 
   54:         # Close the file.
   55:         self._xml_close()
   56: 
   57:     ###########################################################################
   58:     #
   59:     # XML methods.
   60:     #
   61:     ###########################################################################
   62: 
   63:     def _write_rv_types_info(self):
   64:         # Write the <rvTypesInfo> element.
   65:         xmlns = "http://schemas.microsoft.com/office/spreadsheetml/2017/richdata2"
   66:         xmlns_x = "http://schemas.openxmlformats.org/spreadsheetml/2006/main"
   67:         xmlns_mc = "http://schemas.openxmlformats.org/markup-compatibility/2006"
   68:         mc_ignorable = "x"
   69: 
   70:         attributes = [
   71:             ("xmlns", xmlns),
   72:             ("xmlns:mc", xmlns_mc),
   73:             ("mc:Ignorable", mc_ignorable),
   74:             ("xmlns:x", xmlns_x),
   75:         ]
   76: 
   77:         self._xml_start_tag("rvTypesInfo", attributes)
   78: 
   79:     def _write_global(self):
   80:         # Write the <global> element.
   81:         key_flags = [
   82:             ["_Self", ["ExcludeFromFile", "ExcludeFromCalcComparison"]],
   83:             ["_DisplayString", ["ExcludeFromCalcComparison"]],
   84:             ["_Flags", ["ExcludeFromCalcComparison"]],
   85:             ["_Format", ["ExcludeFromCalcComparison"]],
   86:             ["_SubLabel", ["ExcludeFromCalcComparison"]],
   87:             ["_Attribution", ["ExcludeFromCalcComparison"]],
   88:             ["_Icon", ["ExcludeFromCalcComparison"]],
   89:             ["_Display", ["ExcludeFromCalcComparison"]],
   90:             ["_CanonicalPropertyNames", ["ExcludeFromCalcComparison"]],
   91:             ["_ClassificationId", ["ExcludeFromCalcComparison"]],
   92:         ]
   93: 
   94:         self._xml_start_tag("global")
   95:         self._xml_start_tag("keyFlags")
   96: 
   97:         for key_flag in key_flags:
   98:             # Write the key element.
   99:             self._write_key(key_flag)
  100: 
  101:         self._xml_end_tag("keyFlags")
  102:         self._xml_end_tag("global")
  103: 
  104:     def _write_key(self, key_flag):
  105:         # Write the <key> element.
  106:         name = key_flag[0]
  107:         attributes = [("name", name)]
  108: 
  109:         self._xml_start_tag("key", attributes)
  110: 
  111:         # Write the flag element.
  112:         for name in key_flag[1]:
  113:             self._write_flag(name)
  114: 
  115:         self._xml_end_tag("key")
  116: 
  117:     def _write_flag(self, name):
  118:         # Write the <flag> element.
  119:         attributes = [
  120:             ("name", name),
  121:             ("value", "1"),
  122:         ]
  123: 
  124:         self._xml_empty_tag("flag", attributes)
