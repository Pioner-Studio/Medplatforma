    1: import platform
    2: 
    3: import pytest
    4: 
    5: from numpy import array
    6: 
    7: from . import util
    8: 
    9: IS_S390X = platform.machine() == "s390x"
   10: 
   11: 
   12: @pytest.mark.slow
   13: class TestReturnCharacter(util.F2PyTest):
   14:     def check_function(self, t, tname):
   15:         if tname in ["t0", "t1", "s0", "s1"]:
   16:             assert t("23") == b"2"
   17:             r = t("ab")
   18:             assert r == b"a"
   19:             r = t(array("ab"))
   20:             assert r == b"a"
   21:             r = t(array(77, "u1"))
   22:             assert r == b"M"
   23:         elif tname in ["ts", "ss"]:
   24:             assert t(23) == b"23"
   25:             assert t("123456789abcdef") == b"123456789a"
   26:         elif tname in ["t5", "s5"]:
   27:             assert t(23) == b"23"
   28:             assert t("ab") == b"ab"
   29:             assert t("123456789abcdef") == b"12345"
   30:         else:
   31:             raise NotImplementedError
   32: 
   33: 
   34: class TestFReturnCharacter(TestReturnCharacter):
   35:     sources = [
   36:         util.getpath("tests", "src", "return_character", "foo77.f"),
   37:         util.getpath("tests", "src", "return_character", "foo90.f90"),
   38:     ]
   39: 
   40:     @pytest.mark.xfail(IS_S390X, reason="callback returns ' '")
   41:     @pytest.mark.parametrize("name", ["t0", "t1", "t5", "s0", "s1", "s5", "ss"])
   42:     def test_all_f77(self, name):
   43:         self.check_function(getattr(self.module, name), name)
   44: 
   45:     @pytest.mark.xfail(IS_S390X, reason="callback returns ' '")
   46:     @pytest.mark.parametrize("name", ["t0", "t1", "t5", "ts", "s0", "s1", "s5", "ss"])
   47:     def test_all_f90(self, name):
   48:         self.check_function(getattr(self.module.f90_return_char, name), name)
