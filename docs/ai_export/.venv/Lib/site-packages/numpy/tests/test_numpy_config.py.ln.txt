    1: """
    2: Check the numpy config is valid.
    3: """
    4: from unittest.mock import patch
    5: 
    6: import pytest
    7: 
    8: import numpy as np
    9: 
   10: pytestmark = pytest.mark.skipif(
   11:     not hasattr(np.__config__, "_built_with_meson"),
   12:     reason="Requires Meson builds",
   13: )
   14: 
   15: 
   16: class TestNumPyConfigs:
   17:     REQUIRED_CONFIG_KEYS = [
   18:         "Compilers",
   19:         "Machine Information",
   20:         "Python Information",
   21:     ]
   22: 
   23:     @patch("numpy.__config__._check_pyyaml")
   24:     def test_pyyaml_not_found(self, mock_yaml_importer):
   25:         mock_yaml_importer.side_effect = ModuleNotFoundError()
   26:         with pytest.warns(UserWarning):
   27:             np.show_config()
   28: 
   29:     def test_dict_mode(self):
   30:         config = np.show_config(mode="dicts")
   31: 
   32:         assert isinstance(config, dict)
   33:         assert all(key in config for key in self.REQUIRED_CONFIG_KEYS), (
   34:             "Required key missing,"
   35:             " see index of `False` with `REQUIRED_CONFIG_KEYS`"
   36:         )
   37: 
   38:     def test_invalid_mode(self):
   39:         with pytest.raises(AttributeError):
   40:             np.show_config(mode="foo")
   41: 
   42:     def test_warn_to_add_tests(self):
   43:         assert len(np.__config__.DisplayModes) == 2, (
   44:             "New mode detected,"
   45:             " please add UT if applicable and increment this count"
   46:         )
