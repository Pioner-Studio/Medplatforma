    1: from __future__ import annotations
    2: 
    3: from typing import cast, Any
    4: import numpy as np
    5: 
    6: c16 = np.complex128()
    7: f8 = np.float64()
    8: i8 = np.int64()
    9: u8 = np.uint64()
   10: 
   11: c8 = np.complex64()
   12: f4 = np.float32()
   13: i4 = np.int32()
   14: u4 = np.uint32()
   15: 
   16: dt = np.datetime64(0, "D")
   17: td = np.timedelta64(0, "D")
   18: 
   19: b_ = np.bool()
   20: 
   21: b = bool()
   22: c = complex()
   23: f = float()
   24: i = int()
   25: 
   26: SEQ = (0, 1, 2, 3, 4)
   27: 
   28: AR_b: np.ndarray[Any, np.dtype[np.bool]] = np.array([True])
   29: AR_u: np.ndarray[Any, np.dtype[np.uint32]] = np.array([1], dtype=np.uint32)
   30: AR_i: np.ndarray[Any, np.dtype[np.int_]] = np.array([1])
   31: AR_f: np.ndarray[Any, np.dtype[np.float64]] = np.array([1.0])
   32: AR_c: np.ndarray[Any, np.dtype[np.complex128]] = np.array([1.0j])
   33: AR_S: np.ndarray[Any, np.dtype[np.bytes_]] = np.array([b"a"], "S")
   34: AR_T = cast(np.ndarray[Any, np.dtypes.StringDType], np.array(["a"], "T"))
   35: AR_U: np.ndarray[Any, np.dtype[np.str_]] = np.array(["a"], "U")
   36: AR_m: np.ndarray[Any, np.dtype[np.timedelta64]] = np.array([np.timedelta64("1")])
   37: AR_M: np.ndarray[Any, np.dtype[np.datetime64]] = np.array([np.datetime64("1")])
   38: AR_O: np.ndarray[Any, np.dtype[np.object_]] = np.array([1], dtype=object)
   39: 
   40: # Arrays
   41: 
   42: AR_b > AR_b
   43: AR_b > AR_u
   44: AR_b > AR_i
   45: AR_b > AR_f
   46: AR_b > AR_c
   47: 
   48: AR_u > AR_b
   49: AR_u > AR_u
   50: AR_u > AR_i
   51: AR_u > AR_f
   52: AR_u > AR_c
   53: 
   54: AR_i > AR_b
   55: AR_i > AR_u
   56: AR_i > AR_i
   57: AR_i > AR_f
   58: AR_i > AR_c
   59: 
   60: AR_f > AR_b
   61: AR_f > AR_u
   62: AR_f > AR_i
   63: AR_f > AR_f
   64: AR_f > AR_c
   65: 
   66: AR_c > AR_b
   67: AR_c > AR_u
   68: AR_c > AR_i
   69: AR_c > AR_f
   70: AR_c > AR_c
   71: 
   72: AR_S > AR_S
   73: AR_S > b""
   74: 
   75: AR_T > AR_T
   76: AR_T > AR_U
   77: AR_T > ""
   78: 
   79: AR_U > AR_U
   80: AR_U > AR_T
   81: AR_U > ""
   82: 
   83: AR_m > AR_b
   84: AR_m > AR_u
   85: AR_m > AR_i
   86: AR_b > AR_m
   87: AR_u > AR_m
   88: AR_i > AR_m
   89: 
   90: AR_M > AR_M
   91: 
   92: AR_O > AR_O
   93: 1 > AR_O
   94: AR_O > 1
   95: 
   96: # Time structures
   97: 
   98: dt > dt
   99: 
  100: td > td
  101: td > i
  102: td > i4
  103: td > i8
  104: td > AR_i
  105: td > SEQ
  106: 
  107: # boolean
  108: 
  109: b_ > b
  110: b_ > b_
  111: b_ > i
  112: b_ > i8
  113: b_ > i4
  114: b_ > u8
  115: b_ > u4
  116: b_ > f
  117: b_ > f8
  118: b_ > f4
  119: b_ > c
  120: b_ > c16
  121: b_ > c8
  122: b_ > AR_i
  123: b_ > SEQ
  124: 
  125: # Complex
  126: 
  127: c16 > c16
  128: c16 > f8
  129: c16 > i8
  130: c16 > c8
  131: c16 > f4
  132: c16 > i4
  133: c16 > b_
  134: c16 > b
  135: c16 > c
  136: c16 > f
  137: c16 > i
  138: c16 > AR_i
  139: c16 > SEQ
  140: 
  141: c16 > c16
  142: f8 > c16
  143: i8 > c16
  144: c8 > c16
  145: f4 > c16
  146: i4 > c16
  147: b_ > c16
  148: b > c16
  149: c > c16
  150: f > c16
  151: i > c16
  152: AR_i > c16
  153: SEQ > c16
  154: 
  155: c8 > c16
  156: c8 > f8
  157: c8 > i8
  158: c8 > c8
  159: c8 > f4
  160: c8 > i4
  161: c8 > b_
  162: c8 > b
  163: c8 > c
  164: c8 > f
  165: c8 > i
  166: c8 > AR_i
  167: c8 > SEQ
  168: 
  169: c16 > c8
  170: f8 > c8
  171: i8 > c8
  172: c8 > c8
  173: f4 > c8
  174: i4 > c8
  175: b_ > c8
  176: b > c8
  177: c > c8
  178: f > c8
  179: i > c8
  180: AR_i > c8
  181: SEQ > c8
  182: 
  183: # Float
  184: 
  185: f8 > f8
  186: f8 > i8
  187: f8 > f4
  188: f8 > i4
  189: f8 > b_
  190: f8 > b
  191: f8 > c
  192: f8 > f
  193: f8 > i
  194: f8 > AR_i
  195: f8 > SEQ
  196: 
  197: f8 > f8
  198: i8 > f8
  199: f4 > f8
  200: i4 > f8
  201: b_ > f8
  202: b > f8
  203: c > f8
  204: f > f8
  205: i > f8
  206: AR_i > f8
  207: SEQ > f8
  208: 
  209: f4 > f8
  210: f4 > i8
  211: f4 > f4
  212: f4 > i4
  213: f4 > b_
  214: f4 > b
  215: f4 > c
  216: f4 > f
  217: f4 > i
  218: f4 > AR_i
  219: f4 > SEQ
  220: 
  221: f8 > f4
  222: i8 > f4
  223: f4 > f4
  224: i4 > f4
  225: b_ > f4
  226: b > f4
  227: c > f4
  228: f > f4
  229: i > f4
  230: AR_i > f4
  231: SEQ > f4
  232: 
  233: # Int
  234: 
  235: i8 > i8
  236: i8 > u8
  237: i8 > i4
  238: i8 > u4
  239: i8 > b_
  240: i8 > b
  241: i8 > c
  242: i8 > f
  243: i8 > i
  244: i8 > AR_i
  245: i8 > SEQ
  246: 
  247: u8 > u8
  248: u8 > i4
  249: u8 > u4
  250: u8 > b_
  251: u8 > b
  252: u8 > c
  253: u8 > f
  254: u8 > i
  255: u8 > AR_i
  256: u8 > SEQ
  257: 
  258: i8 > i8
  259: u8 > i8
  260: i4 > i8
  261: u4 > i8
  262: b_ > i8
  263: b > i8
  264: c > i8
  265: f > i8
  266: i > i8
  267: AR_i > i8
  268: SEQ > i8
  269: 
  270: u8 > u8
  271: i4 > u8
  272: u4 > u8
  273: b_ > u8
  274: b > u8
  275: c > u8
  276: f > u8
  277: i > u8
  278: AR_i > u8
  279: SEQ > u8
  280: 
  281: i4 > i8
  282: i4 > i4
  283: i4 > i
  284: i4 > b_
  285: i4 > b
  286: i4 > AR_i
  287: i4 > SEQ
  288: 
  289: u4 > i8
  290: u4 > i4
  291: u4 > u8
  292: u4 > u4
  293: u4 > i
  294: u4 > b_
  295: u4 > b
  296: u4 > AR_i
  297: u4 > SEQ
  298: 
  299: i8 > i4
  300: i4 > i4
  301: i > i4
  302: b_ > i4
  303: b > i4
  304: AR_i > i4
  305: SEQ > i4
  306: 
  307: i8 > u4
  308: i4 > u4
  309: u8 > u4
  310: u4 > u4
  311: b_ > u4
  312: b > u4
  313: i > u4
  314: AR_i > u4
  315: SEQ > u4
