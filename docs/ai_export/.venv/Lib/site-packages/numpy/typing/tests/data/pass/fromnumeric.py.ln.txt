    1: """Tests for :mod:`numpy._core.fromnumeric`."""
    2: 
    3: import numpy as np
    4: 
    5: A = np.array(True, ndmin=2, dtype=bool)
    6: B = np.array(1.0, ndmin=2, dtype=np.float32)
    7: A.setflags(write=False)
    8: B.setflags(write=False)
    9: 
   10: a = np.bool(True)
   11: b = np.float32(1.0)
   12: c = 1.0
   13: d = np.array(1.0, dtype=np.float32)  # writeable
   14: 
   15: np.take(a, 0)
   16: np.take(b, 0)
   17: np.take(c, 0)
   18: np.take(A, 0)
   19: np.take(B, 0)
   20: np.take(A, [0])
   21: np.take(B, [0])
   22: 
   23: np.reshape(a, 1)
   24: np.reshape(b, 1)
   25: np.reshape(c, 1)
   26: np.reshape(A, 1)
   27: np.reshape(B, 1)
   28: 
   29: np.choose(a, [True, True])
   30: np.choose(A, [1.0, 1.0])
   31: 
   32: np.repeat(a, 1)
   33: np.repeat(b, 1)
   34: np.repeat(c, 1)
   35: np.repeat(A, 1)
   36: np.repeat(B, 1)
   37: 
   38: np.swapaxes(A, 0, 0)
   39: np.swapaxes(B, 0, 0)
   40: 
   41: np.transpose(a)
   42: np.transpose(b)
   43: np.transpose(c)
   44: np.transpose(A)
   45: np.transpose(B)
   46: 
   47: np.partition(a, 0, axis=None)
   48: np.partition(b, 0, axis=None)
   49: np.partition(c, 0, axis=None)
   50: np.partition(A, 0)
   51: np.partition(B, 0)
   52: 
   53: np.argpartition(a, 0)
   54: np.argpartition(b, 0)
   55: np.argpartition(c, 0)
   56: np.argpartition(A, 0)
   57: np.argpartition(B, 0)
   58: 
   59: np.sort(A, 0)
   60: np.sort(B, 0)
   61: 
   62: np.argsort(A, 0)
   63: np.argsort(B, 0)
   64: 
   65: np.argmax(A)
   66: np.argmax(B)
   67: np.argmax(A, axis=0)
   68: np.argmax(B, axis=0)
   69: 
   70: np.argmin(A)
   71: np.argmin(B)
   72: np.argmin(A, axis=0)
   73: np.argmin(B, axis=0)
   74: 
   75: np.searchsorted(A[0], 0)
   76: np.searchsorted(B[0], 0)
   77: np.searchsorted(A[0], [0])
   78: np.searchsorted(B[0], [0])
   79: 
   80: np.resize(a, (5, 5))
   81: np.resize(b, (5, 5))
   82: np.resize(c, (5, 5))
   83: np.resize(A, (5, 5))
   84: np.resize(B, (5, 5))
   85: 
   86: np.squeeze(a)
   87: np.squeeze(b)
   88: np.squeeze(c)
   89: np.squeeze(A)
   90: np.squeeze(B)
   91: 
   92: np.diagonal(A)
   93: np.diagonal(B)
   94: 
   95: np.trace(A)
   96: np.trace(B)
   97: 
   98: np.ravel(a)
   99: np.ravel(b)
  100: np.ravel(c)
  101: np.ravel(A)
  102: np.ravel(B)
  103: 
  104: np.nonzero(A)
  105: np.nonzero(B)
  106: 
  107: np.shape(a)
  108: np.shape(b)
  109: np.shape(c)
  110: np.shape(A)
  111: np.shape(B)
  112: 
  113: np.compress([True], a)
  114: np.compress([True], b)
  115: np.compress([True], c)
  116: np.compress([True], A)
  117: np.compress([True], B)
  118: 
  119: np.clip(a, 0, 1.0)
  120: np.clip(b, -1, 1)
  121: np.clip(a, 0, None)
  122: np.clip(b, None, 1)
  123: np.clip(c, 0, 1)
  124: np.clip(A, 0, 1)
  125: np.clip(B, 0, 1)
  126: np.clip(B, [0, 1], [1, 2])
  127: 
  128: np.sum(a)
  129: np.sum(b)
  130: np.sum(c)
  131: np.sum(A)
  132: np.sum(B)
  133: np.sum(A, axis=0)
  134: np.sum(B, axis=0)
  135: 
  136: np.all(a)
  137: np.all(b)
  138: np.all(c)
  139: np.all(A)
  140: np.all(B)
  141: np.all(A, axis=0)
  142: np.all(B, axis=0)
  143: np.all(A, keepdims=True)
  144: np.all(B, keepdims=True)
  145: 
  146: np.any(a)
  147: np.any(b)
  148: np.any(c)
  149: np.any(A)
  150: np.any(B)
  151: np.any(A, axis=0)
  152: np.any(B, axis=0)
  153: np.any(A, keepdims=True)
  154: np.any(B, keepdims=True)
  155: 
  156: np.cumsum(a)
  157: np.cumsum(b)
  158: np.cumsum(c)
  159: np.cumsum(A)
  160: np.cumsum(B)
  161: 
  162: np.cumulative_sum(a)
  163: np.cumulative_sum(b)
  164: np.cumulative_sum(c)
  165: np.cumulative_sum(A, axis=0)
  166: np.cumulative_sum(B, axis=0)
  167: 
  168: np.ptp(b)
  169: np.ptp(c)
  170: np.ptp(B)
  171: np.ptp(B, axis=0)
  172: np.ptp(B, keepdims=True)
  173: 
  174: np.amax(a)
  175: np.amax(b)
  176: np.amax(c)
  177: np.amax(A)
  178: np.amax(B)
  179: np.amax(A, axis=0)
  180: np.amax(B, axis=0)
  181: np.amax(A, keepdims=True)
  182: np.amax(B, keepdims=True)
  183: 
  184: np.amin(a)
  185: np.amin(b)
  186: np.amin(c)
  187: np.amin(A)
  188: np.amin(B)
  189: np.amin(A, axis=0)
  190: np.amin(B, axis=0)
  191: np.amin(A, keepdims=True)
  192: np.amin(B, keepdims=True)
  193: 
  194: np.prod(a)
  195: np.prod(b)
  196: np.prod(c)
  197: np.prod(A)
  198: np.prod(B)
  199: np.prod(a, dtype=None)
  200: np.prod(A, dtype=None)
  201: np.prod(A, axis=0)
  202: np.prod(B, axis=0)
  203: np.prod(A, keepdims=True)
  204: np.prod(B, keepdims=True)
  205: np.prod(b, out=d)
  206: np.prod(B, out=d)
  207: 
  208: np.cumprod(a)
  209: np.cumprod(b)
  210: np.cumprod(c)
  211: np.cumprod(A)
  212: np.cumprod(B)
  213: 
  214: np.cumulative_prod(a)
  215: np.cumulative_prod(b)
  216: np.cumulative_prod(c)
  217: np.cumulative_prod(A, axis=0)
  218: np.cumulative_prod(B, axis=0)
  219: 
  220: np.ndim(a)
  221: np.ndim(b)
  222: np.ndim(c)
  223: np.ndim(A)
  224: np.ndim(B)
  225: 
  226: np.size(a)
  227: np.size(b)
  228: np.size(c)
  229: np.size(A)
  230: np.size(B)
  231: 
  232: np.around(a)
  233: np.around(b)
  234: np.around(c)
  235: np.around(A)
  236: np.around(B)
  237: 
  238: np.mean(a)
  239: np.mean(b)
  240: np.mean(c)
  241: np.mean(A)
  242: np.mean(B)
  243: np.mean(A, axis=0)
  244: np.mean(B, axis=0)
  245: np.mean(A, keepdims=True)
  246: np.mean(B, keepdims=True)
  247: np.mean(b, out=d)
  248: np.mean(B, out=d)
  249: 
  250: np.std(a)
  251: np.std(b)
  252: np.std(c)
  253: np.std(A)
  254: np.std(B)
  255: np.std(A, axis=0)
  256: np.std(B, axis=0)
  257: np.std(A, keepdims=True)
  258: np.std(B, keepdims=True)
  259: np.std(b, out=d)
  260: np.std(B, out=d)
  261: 
  262: np.var(a)
  263: np.var(b)
  264: np.var(c)
  265: np.var(A)
  266: np.var(B)
  267: np.var(A, axis=0)
  268: np.var(B, axis=0)
  269: np.var(A, keepdims=True)
  270: np.var(B, keepdims=True)
  271: np.var(b, out=d)
  272: np.var(B, out=d)
