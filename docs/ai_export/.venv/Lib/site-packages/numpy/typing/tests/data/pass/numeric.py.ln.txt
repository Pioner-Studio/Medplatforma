    1: """
    2: Tests for :mod:`numpy._core.numeric`.
    3: 
    4: Does not include tests which fall under ``array_constructors``.
    5: 
    6: """
    7: 
    8: from __future__ import annotations
    9: from typing import cast
   10: 
   11: import numpy as np
   12: import numpy.typing as npt
   13: 
   14: class SubClass(npt.NDArray[np.float64]): ...
   15: 
   16: 
   17: i8 = np.int64(1)
   18: 
   19: A = cast(
   20:     np.ndarray[tuple[int, int, int], np.dtype[np.intp]],
   21:     np.arange(27).reshape(3, 3, 3),
   22: )
   23: B: list[list[list[int]]] = A.tolist()
   24: C = np.empty((27, 27)).view(SubClass)
   25: 
   26: np.count_nonzero(i8)
   27: np.count_nonzero(A)
   28: np.count_nonzero(B)
   29: np.count_nonzero(A, keepdims=True)
   30: np.count_nonzero(A, axis=0)
   31: 
   32: np.isfortran(i8)
   33: np.isfortran(A)
   34: 
   35: np.argwhere(i8)
   36: np.argwhere(A)
   37: 
   38: np.flatnonzero(i8)
   39: np.flatnonzero(A)
   40: 
   41: np.correlate(B[0][0], A.ravel(), mode="valid")
   42: np.correlate(A.ravel(), A.ravel(), mode="same")
   43: 
   44: np.convolve(B[0][0], A.ravel(), mode="valid")
   45: np.convolve(A.ravel(), A.ravel(), mode="same")
   46: 
   47: np.outer(i8, A)
   48: np.outer(B, A)
   49: np.outer(A, A)
   50: np.outer(A, A, out=C)
   51: 
   52: np.tensordot(B, A)
   53: np.tensordot(A, A)
   54: np.tensordot(A, A, axes=0)
   55: np.tensordot(A, A, axes=(0, 1))
   56: 
   57: np.isscalar(i8)
   58: np.isscalar(A)
   59: np.isscalar(B)
   60: 
   61: np.roll(A, 1)
   62: np.roll(A, (1, 2))
   63: np.roll(B, 1)
   64: 
   65: np.rollaxis(A, 0, 1)
   66: 
   67: np.moveaxis(A, 0, 1)
   68: np.moveaxis(A, (0, 1), (1, 2))
   69: 
   70: np.cross(B, A)
   71: np.cross(A, A)
   72: 
   73: np.indices([0, 1, 2])
   74: np.indices([0, 1, 2], sparse=False)
   75: np.indices([0, 1, 2], sparse=True)
   76: 
   77: np.binary_repr(1)
   78: 
   79: np.base_repr(1)
   80: 
   81: np.allclose(i8, A)
   82: np.allclose(B, A)
   83: np.allclose(A, A)
   84: 
   85: np.isclose(i8, A)
   86: np.isclose(B, A)
   87: np.isclose(A, A)
   88: 
   89: np.array_equal(i8, A)
   90: np.array_equal(B, A)
   91: np.array_equal(A, A)
   92: 
   93: np.array_equiv(i8, A)
   94: np.array_equiv(B, A)
   95: np.array_equiv(A, A)
