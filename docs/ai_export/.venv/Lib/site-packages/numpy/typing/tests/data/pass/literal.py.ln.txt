    1: from __future__ import annotations
    2: 
    3: from typing import Any, TYPE_CHECKING
    4: from functools import partial
    5: 
    6: import pytest
    7: import numpy as np
    8: 
    9: if TYPE_CHECKING:
   10:     from collections.abc import Callable
   11: 
   12: AR = np.array(0)
   13: AR.setflags(write=False)
   14: 
   15: KACF = frozenset({None, "K", "A", "C", "F"})
   16: ACF = frozenset({None, "A", "C", "F"})
   17: CF = frozenset({None, "C", "F"})
   18: 
   19: order_list: list[tuple[frozenset[str | None], Callable[..., Any]]] = [
   20:     (KACF, AR.tobytes),
   21:     (KACF, partial(AR.astype, int)),
   22:     (KACF, AR.copy),
   23:     (ACF, partial(AR.reshape, 1)),
   24:     (KACF, AR.flatten),
   25:     (KACF, AR.ravel),
   26:     (KACF, partial(np.array, 1)),
   27:     # NOTE: __call__ is needed due to mypy bugs (#17620, #17631)
   28:     (KACF, partial(np.ndarray.__call__, 1)),
   29:     (CF, partial(np.zeros.__call__, 1)),
   30:     (CF, partial(np.ones.__call__, 1)),
   31:     (CF, partial(np.empty.__call__, 1)),
   32:     (CF, partial(np.full, 1, 1)),
   33:     (KACF, partial(np.zeros_like, AR)),
   34:     (KACF, partial(np.ones_like, AR)),
   35:     (KACF, partial(np.empty_like, AR)),
   36:     (KACF, partial(np.full_like, AR, 1)),
   37:     (KACF, partial(np.add.__call__, 1, 1)),  # i.e. np.ufunc.__call__
   38:     (ACF, partial(np.reshape, AR, 1)),
   39:     (KACF, partial(np.ravel, AR)),
   40:     (KACF, partial(np.asarray, 1)),
   41:     (KACF, partial(np.asanyarray, 1)),
   42: ]
   43: 
   44: for order_set, func in order_list:
   45:     for order in order_set:
   46:         func(order=order)
   47: 
   48:     invalid_orders = KACF - order_set
   49:     for order in invalid_orders:
   50:         with pytest.raises(ValueError):
   51:             func(order=order)
