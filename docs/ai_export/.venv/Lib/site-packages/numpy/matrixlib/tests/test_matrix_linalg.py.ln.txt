    1: """ Test functions for linalg module using the matrix class."""
    2: import numpy as np
    3: from numpy.linalg.tests.test_linalg import (
    4:     CondCases,
    5:     DetCases,
    6:     EigCases,
    7:     EigvalsCases,
    8:     InvCases,
    9:     LinalgCase,
   10:     LinalgTestCase,
   11:     LstsqCases,
   12:     PinvCases,
   13:     SolveCases,
   14:     SVDCases,
   15:     _TestNorm2D,
   16:     _TestNormDoubleBase,
   17:     _TestNormInt64Base,
   18:     _TestNormSingleBase,
   19:     apply_tag,
   20: )
   21: from numpy.linalg.tests.test_linalg import TestQR as _TestQR
   22: 
   23: CASES = []
   24: 
   25: # square test cases
   26: CASES += apply_tag('square', [
   27:     LinalgCase("0x0_matrix",
   28:                np.empty((0, 0), dtype=np.double).view(np.matrix),
   29:                np.empty((0, 1), dtype=np.double).view(np.matrix),
   30:                tags={'size-0'}),
   31:     LinalgCase("matrix_b_only",
   32:                np.array([[1., 2.], [3., 4.]]),
   33:                np.matrix([2., 1.]).T),
   34:     LinalgCase("matrix_a_and_b",
   35:                np.matrix([[1., 2.], [3., 4.]]),
   36:                np.matrix([2., 1.]).T),
   37: ])
   38: 
   39: # hermitian test-cases
   40: CASES += apply_tag('hermitian', [
   41:     LinalgCase("hmatrix_a_and_b",
   42:                np.matrix([[1., 2.], [2., 1.]]),
   43:                None),
   44: ])
   45: # No need to make generalized or strided cases for matrices.
   46: 
   47: 
   48: class MatrixTestCase(LinalgTestCase):
   49:     TEST_CASES = CASES
   50: 
   51: 
   52: class TestSolveMatrix(SolveCases, MatrixTestCase):
   53:     pass
   54: 
   55: 
   56: class TestInvMatrix(InvCases, MatrixTestCase):
   57:     pass
   58: 
   59: 
   60: class TestEigvalsMatrix(EigvalsCases, MatrixTestCase):
   61:     pass
   62: 
   63: 
   64: class TestEigMatrix(EigCases, MatrixTestCase):
   65:     pass
   66: 
   67: 
   68: class TestSVDMatrix(SVDCases, MatrixTestCase):
   69:     pass
   70: 
   71: 
   72: class TestCondMatrix(CondCases, MatrixTestCase):
   73:     pass
   74: 
   75: 
   76: class TestPinvMatrix(PinvCases, MatrixTestCase):
   77:     pass
   78: 
   79: 
   80: class TestDetMatrix(DetCases, MatrixTestCase):
   81:     pass
   82: 
   83: 
   84: class TestLstsqMatrix(LstsqCases, MatrixTestCase):
   85:     pass
   86: 
   87: 
   88: class _TestNorm2DMatrix(_TestNorm2D):
   89:     array = np.matrix
   90: 
   91: 
   92: class TestNormDoubleMatrix(_TestNorm2DMatrix, _TestNormDoubleBase):
   93:     pass
   94: 
   95: 
   96: class TestNormSingleMatrix(_TestNorm2DMatrix, _TestNormSingleBase):
   97:     pass
   98: 
   99: 
  100: class TestNormInt64Matrix(_TestNorm2DMatrix, _TestNormInt64Base):
  101:     pass
  102: 
  103: 
  104: class TestQRMatrix(_TestQR):
  105:     array = np.matrix
