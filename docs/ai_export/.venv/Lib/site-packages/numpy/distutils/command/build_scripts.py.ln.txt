    1: """ Modified version of build_scripts that handles building scripts from functions.
    2: 
    3: """
    4: from distutils.command.build_scripts import build_scripts as old_build_scripts
    5: from numpy.distutils import log
    6: from numpy.distutils.misc_util import is_string
    7: 
    8: class build_scripts(old_build_scripts):
    9: 
   10:     def generate_scripts(self, scripts):
   11:         new_scripts = []
   12:         func_scripts = []
   13:         for script in scripts:
   14:             if is_string(script):
   15:                 new_scripts.append(script)
   16:             else:
   17:                 func_scripts.append(script)
   18:         if not func_scripts:
   19:             return new_scripts
   20: 
   21:         build_dir = self.build_dir
   22:         self.mkpath(build_dir)
   23:         for func in func_scripts:
   24:             script = func(build_dir)
   25:             if not script:
   26:                 continue
   27:             if is_string(script):
   28:                 log.info("  adding '%s' to scripts" % (script,))
   29:                 new_scripts.append(script)
   30:             else:
   31:                 [log.info("  adding '%s' to scripts" % (s,)) for s in script]
   32:                 new_scripts.extend(list(script))
   33:         return new_scripts
   34: 
   35:     def run (self):
   36:         if not self.scripts:
   37:             return
   38: 
   39:         self.scripts = self.generate_scripts(self.scripts)
   40:         # Now make sure that the distribution object has this list of scripts.
   41:         # setuptools' develop command requires that this be a list of filenames,
   42:         # not functions.
   43:         self.distribution.scripts = self.scripts
   44: 
   45:         return old_build_scripts.run(self)
   46: 
   47:     def get_source_files(self):
   48:         from numpy.distutils.misc_util import get_script_files
   49:         return get_script_files(self.scripts)
