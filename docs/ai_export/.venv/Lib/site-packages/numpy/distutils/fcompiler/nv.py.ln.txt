    1: from numpy.distutils.fcompiler import FCompiler
    2: 
    3: compilers = ['NVHPCFCompiler']
    4: 
    5: class NVHPCFCompiler(FCompiler):
    6:     """ NVIDIA High Performance Computing (HPC) SDK Fortran Compiler
    7: 
    8:     https://developer.nvidia.com/hpc-sdk
    9: 
   10:     Since august 2020 the NVIDIA HPC SDK includes the compilers formerly known as The Portland Group compilers,
   11:     https://www.pgroup.com/index.htm.
   12:     See also `numpy.distutils.fcompiler.pg`.
   13:     """
   14: 
   15:     compiler_type = 'nv'
   16:     description = 'NVIDIA HPC SDK'
   17:     version_pattern = r'\s*(nvfortran|.+ \(aka nvfortran\)) (?P<version>[\d.-]+).*'
   18: 
   19:     executables = {
   20:         'version_cmd': ["<F90>", "-V"],
   21:         'compiler_f77': ["nvfortran"],
   22:         'compiler_fix': ["nvfortran", "-Mfixed"],
   23:         'compiler_f90': ["nvfortran"],
   24:         'linker_so': ["<F90>"],
   25:         'archiver': ["ar", "-cr"],
   26:         'ranlib': ["ranlib"]
   27:     }
   28:     pic_flags = ['-fpic']
   29: 
   30:     module_dir_switch = '-module '
   31:     module_include_switch = '-I'
   32: 
   33:     def get_flags(self):
   34:         opt = ['-Minform=inform', '-Mnosecond_underscore']
   35:         return self.pic_flags + opt
   36: 
   37:     def get_flags_opt(self):
   38:         return ['-fast']
   39: 
   40:     def get_flags_debug(self):
   41:         return ['-g']
   42: 
   43:     def get_flags_linker_so(self):
   44:         return ["-shared", '-fpic']
   45: 
   46:     def runtime_library_dir_option(self, dir):
   47:         return '-R%s' % dir
   48: 
   49: if __name__ == '__main__':
   50:     from distutils import log
   51:     log.set_verbosity(2)
   52:     from numpy.distutils import customized_fcompiler
   53:     print(customized_fcompiler(compiler='nv').get_version())
