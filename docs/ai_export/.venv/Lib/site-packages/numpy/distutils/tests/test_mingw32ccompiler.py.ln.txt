    1: import shutil
    2: import subprocess
    3: import sys
    4: import pytest
    5: import os
    6: import sysconfig
    7: 
    8: from numpy.distutils import mingw32ccompiler
    9: 
   10: 
   11: @pytest.mark.skipif(sys.platform != 'win32', reason='win32 only test')
   12: @pytest.mark.skipif(not os.path.exists(os.path.join(sys.prefix, 'libs')),
   13:                     reason="test requires mingw library layout")
   14: @pytest.mark.skipif(sysconfig.get_platform() == 'win-arm64', reason='mingw GNU objdump does not understand arm64 binary format yet')
   15: def test_build_import():
   16:     '''Test the mingw32ccompiler.build_import_library, which builds a
   17:     `python.a` from the MSVC `python.lib`
   18:     '''
   19: 
   20:     # make sure `nm.exe` exists and supports the current python version. This
   21:     # can get mixed up when the PATH has a 64-bit nm but the python is 32-bit
   22:     try:
   23:         out = subprocess.check_output(['nm.exe', '--help'])
   24:     except FileNotFoundError:
   25:         pytest.skip("'nm.exe' not on path, is mingw installed?")
   26:     supported = out[out.find(b'supported targets:'):]
   27:     if sys.maxsize < 2**32:
   28:         if b'pe-i386' not in supported:
   29:             raise ValueError("'nm.exe' found but it does not support 32-bit "
   30:                              "dlls when using 32-bit python. Supported "
   31:                              "formats: '%s'" % supported)
   32:     elif b'pe-x86-64' not in supported:
   33:         raise ValueError("'nm.exe' found but it does not support 64-bit "
   34:                          "dlls when using 64-bit python. Supported "
   35:                          "formats: '%s'" % supported)
   36:     # Hide the import library to force a build
   37:     has_import_lib, fullpath = mingw32ccompiler._check_for_import_lib()
   38:     if has_import_lib:
   39:         shutil.move(fullpath, fullpath + '.bak')
   40: 
   41:     try:
   42:         # Whew, now we can actually test the function
   43:         mingw32ccompiler.build_import_library()
   44: 
   45:     finally:
   46:         if has_import_lib:
   47:             shutil.move(fullpath + '.bak', fullpath)
