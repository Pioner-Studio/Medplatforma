    1: import io
    2: import re
    3: from contextlib import redirect_stdout
    4: 
    5: import pytest
    6: 
    7: from numpy.distutils import log
    8: 
    9: 
   10: def setup_module():
   11:     f = io.StringIO()  # changing verbosity also logs here, capture that
   12:     with redirect_stdout(f):
   13:         log.set_verbosity(2, force=True)  # i.e. DEBUG
   14: 
   15: 
   16: def teardown_module():
   17:     log.set_verbosity(0, force=True)  # the default
   18: 
   19: 
   20: r_ansi = re.compile(r"\x1B(?:[@-Z\\-_]|\[[0-?]*[ -/]*[@-~])")
   21: 
   22: 
   23: @pytest.mark.parametrize("func_name", ["error", "warn", "info", "debug"])
   24: def test_log_prefix(func_name):
   25:     func = getattr(log, func_name)
   26:     msg = f"{func_name} message"
   27:     f = io.StringIO()
   28:     with redirect_stdout(f):
   29:         func(msg)
   30:     out = f.getvalue()
   31:     assert out  # sanity check
   32:     clean_out = r_ansi.sub("", out)
   33:     line = next(line for line in clean_out.splitlines())
   34:     assert line == f"{func_name.upper()}: {msg}"
