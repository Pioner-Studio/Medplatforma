    1: from numpy.testing import assert_
    2: 
    3: import numpy.distutils.fcompiler
    4: 
    5: g77_version_strings = [
    6:     ('GNU Fortran 0.5.25 20010319 (prerelease)', '0.5.25'),
    7:     ('GNU Fortran (GCC 3.2) 3.2 20020814 (release)', '3.2'),
    8:     ('GNU Fortran (GCC) 3.3.3 20040110 (prerelease) (Debian)', '3.3.3'),
    9:     ('GNU Fortran (GCC) 3.3.3 (Debian 20040401)', '3.3.3'),
   10:     ('GNU Fortran (GCC 3.2.2 20030222 (Red Hat Linux 3.2.2-5)) 3.2.2'
   11:        ' 20030222 (Red Hat Linux 3.2.2-5)', '3.2.2'),
   12: ]
   13: 
   14: gfortran_version_strings = [
   15:     ('GNU Fortran 95 (GCC 4.0.3 20051023 (prerelease) (Debian 4.0.2-3))',
   16:      '4.0.3'),
   17:     ('GNU Fortran 95 (GCC) 4.1.0', '4.1.0'),
   18:     ('GNU Fortran 95 (GCC) 4.2.0 20060218 (experimental)', '4.2.0'),
   19:     ('GNU Fortran (GCC) 4.3.0 20070316 (experimental)', '4.3.0'),
   20:     ('GNU Fortran (rubenvb-4.8.0) 4.8.0', '4.8.0'),
   21:     ('4.8.0', '4.8.0'),
   22:     ('4.0.3-7', '4.0.3'),
   23:     ("gfortran: warning: couldn't understand kern.osversion '14.1.0\n4.9.1",
   24:      '4.9.1'),
   25:     ("gfortran: warning: couldn't understand kern.osversion '14.1.0\n"
   26:      "gfortran: warning: yet another warning\n4.9.1",
   27:      '4.9.1'),
   28:     ('GNU Fortran (crosstool-NG 8a21ab48) 7.2.0', '7.2.0')
   29: ]
   30: 
   31: class TestG77Versions:
   32:     def test_g77_version(self):
   33:         fc = numpy.distutils.fcompiler.new_fcompiler(compiler='gnu')
   34:         for vs, version in g77_version_strings:
   35:             v = fc.version_match(vs)
   36:             assert_(v == version, (vs, v))
   37: 
   38:     def test_not_g77(self):
   39:         fc = numpy.distutils.fcompiler.new_fcompiler(compiler='gnu')
   40:         for vs, _ in gfortran_version_strings:
   41:             v = fc.version_match(vs)
   42:             assert_(v is None, (vs, v))
   43: 
   44: class TestGFortranVersions:
   45:     def test_gfortran_version(self):
   46:         fc = numpy.distutils.fcompiler.new_fcompiler(compiler='gnu95')
   47:         for vs, version in gfortran_version_strings:
   48:             v = fc.version_match(vs)
   49:             assert_(v == version, (vs, v))
   50: 
   51:     def test_not_gfortran(self):
   52:         fc = numpy.distutils.fcompiler.new_fcompiler(compiler='gnu95')
   53:         for vs, _ in g77_version_strings:
   54:             v = fc.version_match(vs)
   55:             assert_(v is None, (vs, v))
