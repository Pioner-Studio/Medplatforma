    1: """Private counterpart of ``numpy.typing``."""
    2: 
    3: from ._array_like import ArrayLike as ArrayLike
    4: from ._array_like import NDArray as NDArray
    5: from ._array_like import _ArrayLike as _ArrayLike
    6: from ._array_like import _ArrayLikeAnyString_co as _ArrayLikeAnyString_co
    7: from ._array_like import _ArrayLikeBool_co as _ArrayLikeBool_co
    8: from ._array_like import _ArrayLikeBytes_co as _ArrayLikeBytes_co
    9: from ._array_like import _ArrayLikeComplex128_co as _ArrayLikeComplex128_co
   10: from ._array_like import _ArrayLikeComplex_co as _ArrayLikeComplex_co
   11: from ._array_like import _ArrayLikeDT64_co as _ArrayLikeDT64_co
   12: from ._array_like import _ArrayLikeFloat64_co as _ArrayLikeFloat64_co
   13: from ._array_like import _ArrayLikeFloat_co as _ArrayLikeFloat_co
   14: from ._array_like import _ArrayLikeInt as _ArrayLikeInt
   15: from ._array_like import _ArrayLikeInt_co as _ArrayLikeInt_co
   16: from ._array_like import _ArrayLikeNumber_co as _ArrayLikeNumber_co
   17: from ._array_like import _ArrayLikeObject_co as _ArrayLikeObject_co
   18: from ._array_like import _ArrayLikeStr_co as _ArrayLikeStr_co
   19: from ._array_like import _ArrayLikeString_co as _ArrayLikeString_co
   20: from ._array_like import _ArrayLikeTD64_co as _ArrayLikeTD64_co
   21: from ._array_like import _ArrayLikeUInt_co as _ArrayLikeUInt_co
   22: from ._array_like import _ArrayLikeVoid_co as _ArrayLikeVoid_co
   23: from ._array_like import _FiniteNestedSequence as _FiniteNestedSequence
   24: from ._array_like import _SupportsArray as _SupportsArray
   25: from ._array_like import _SupportsArrayFunc as _SupportsArrayFunc
   26: 
   27: #
   28: from ._char_codes import _BoolCodes as _BoolCodes
   29: from ._char_codes import _ByteCodes as _ByteCodes
   30: from ._char_codes import _BytesCodes as _BytesCodes
   31: from ._char_codes import _CDoubleCodes as _CDoubleCodes
   32: from ._char_codes import _CharacterCodes as _CharacterCodes
   33: from ._char_codes import _CLongDoubleCodes as _CLongDoubleCodes
   34: from ._char_codes import _Complex64Codes as _Complex64Codes
   35: from ._char_codes import _Complex128Codes as _Complex128Codes
   36: from ._char_codes import _ComplexFloatingCodes as _ComplexFloatingCodes
   37: from ._char_codes import _CSingleCodes as _CSingleCodes
   38: from ._char_codes import _DoubleCodes as _DoubleCodes
   39: from ._char_codes import _DT64Codes as _DT64Codes
   40: from ._char_codes import _FlexibleCodes as _FlexibleCodes
   41: from ._char_codes import _Float16Codes as _Float16Codes
   42: from ._char_codes import _Float32Codes as _Float32Codes
   43: from ._char_codes import _Float64Codes as _Float64Codes
   44: from ._char_codes import _FloatingCodes as _FloatingCodes
   45: from ._char_codes import _GenericCodes as _GenericCodes
   46: from ._char_codes import _HalfCodes as _HalfCodes
   47: from ._char_codes import _InexactCodes as _InexactCodes
   48: from ._char_codes import _Int8Codes as _Int8Codes
   49: from ._char_codes import _Int16Codes as _Int16Codes
   50: from ._char_codes import _Int32Codes as _Int32Codes
   51: from ._char_codes import _Int64Codes as _Int64Codes
   52: from ._char_codes import _IntCCodes as _IntCCodes
   53: from ._char_codes import _IntCodes as _IntCodes
   54: from ._char_codes import _IntegerCodes as _IntegerCodes
   55: from ._char_codes import _IntPCodes as _IntPCodes
   56: from ._char_codes import _LongCodes as _LongCodes
   57: from ._char_codes import _LongDoubleCodes as _LongDoubleCodes
   58: from ._char_codes import _LongLongCodes as _LongLongCodes
   59: from ._char_codes import _NumberCodes as _NumberCodes
   60: from ._char_codes import _ObjectCodes as _ObjectCodes
   61: from ._char_codes import _ShortCodes as _ShortCodes
   62: from ._char_codes import _SignedIntegerCodes as _SignedIntegerCodes
   63: from ._char_codes import _SingleCodes as _SingleCodes
   64: from ._char_codes import _StrCodes as _StrCodes
   65: from ._char_codes import _StringCodes as _StringCodes
   66: from ._char_codes import _TD64Codes as _TD64Codes
   67: from ._char_codes import _UByteCodes as _UByteCodes
   68: from ._char_codes import _UInt8Codes as _UInt8Codes
   69: from ._char_codes import _UInt16Codes as _UInt16Codes
   70: from ._char_codes import _UInt32Codes as _UInt32Codes
   71: from ._char_codes import _UInt64Codes as _UInt64Codes
   72: from ._char_codes import _UIntCCodes as _UIntCCodes
   73: from ._char_codes import _UIntCodes as _UIntCodes
   74: from ._char_codes import _UIntPCodes as _UIntPCodes
   75: from ._char_codes import _ULongCodes as _ULongCodes
   76: from ._char_codes import _ULongLongCodes as _ULongLongCodes
   77: from ._char_codes import _UnsignedIntegerCodes as _UnsignedIntegerCodes
   78: from ._char_codes import _UShortCodes as _UShortCodes
   79: from ._char_codes import _VoidCodes as _VoidCodes
   80: 
   81: #
   82: from ._dtype_like import DTypeLike as DTypeLike
   83: from ._dtype_like import _DTypeLike as _DTypeLike
   84: from ._dtype_like import _DTypeLikeBool as _DTypeLikeBool
   85: from ._dtype_like import _DTypeLikeBytes as _DTypeLikeBytes
   86: from ._dtype_like import _DTypeLikeComplex as _DTypeLikeComplex
   87: from ._dtype_like import _DTypeLikeComplex_co as _DTypeLikeComplex_co
   88: from ._dtype_like import _DTypeLikeDT64 as _DTypeLikeDT64
   89: from ._dtype_like import _DTypeLikeFloat as _DTypeLikeFloat
   90: from ._dtype_like import _DTypeLikeInt as _DTypeLikeInt
   91: from ._dtype_like import _DTypeLikeObject as _DTypeLikeObject
   92: from ._dtype_like import _DTypeLikeStr as _DTypeLikeStr
   93: from ._dtype_like import _DTypeLikeTD64 as _DTypeLikeTD64
   94: from ._dtype_like import _DTypeLikeUInt as _DTypeLikeUInt
   95: from ._dtype_like import _DTypeLikeVoid as _DTypeLikeVoid
   96: from ._dtype_like import _SupportsDType as _SupportsDType
   97: from ._dtype_like import _VoidDTypeLike as _VoidDTypeLike
   98: 
   99: #
  100: from ._nbit import _NBitByte as _NBitByte
  101: from ._nbit import _NBitDouble as _NBitDouble
  102: from ._nbit import _NBitHalf as _NBitHalf
  103: from ._nbit import _NBitInt as _NBitInt
  104: from ._nbit import _NBitIntC as _NBitIntC
  105: from ._nbit import _NBitIntP as _NBitIntP
  106: from ._nbit import _NBitLong as _NBitLong
  107: from ._nbit import _NBitLongDouble as _NBitLongDouble
  108: from ._nbit import _NBitLongLong as _NBitLongLong
  109: from ._nbit import _NBitShort as _NBitShort
  110: from ._nbit import _NBitSingle as _NBitSingle
  111: 
  112: #
  113: from ._nbit_base import (
  114:     NBitBase as NBitBase,  # type: ignore[deprecated]  # pyright: ignore[reportDeprecated]
  115: )
  116: from ._nbit_base import _8Bit as _8Bit
  117: from ._nbit_base import _16Bit as _16Bit
  118: from ._nbit_base import _32Bit as _32Bit
  119: from ._nbit_base import _64Bit as _64Bit
  120: from ._nbit_base import _96Bit as _96Bit
  121: from ._nbit_base import _128Bit as _128Bit
  122: 
  123: #
  124: from ._nested_sequence import _NestedSequence as _NestedSequence
  125: 
  126: #
  127: from ._scalars import _BoolLike_co as _BoolLike_co
  128: from ._scalars import _CharLike_co as _CharLike_co
  129: from ._scalars import _ComplexLike_co as _ComplexLike_co
  130: from ._scalars import _FloatLike_co as _FloatLike_co
  131: from ._scalars import _IntLike_co as _IntLike_co
  132: from ._scalars import _NumberLike_co as _NumberLike_co
  133: from ._scalars import _ScalarLike_co as _ScalarLike_co
  134: from ._scalars import _TD64Like_co as _TD64Like_co
  135: from ._scalars import _UIntLike_co as _UIntLike_co
  136: from ._scalars import _VoidLike_co as _VoidLike_co
  137: 
  138: #
  139: from ._shape import _AnyShape as _AnyShape
  140: from ._shape import _Shape as _Shape
  141: from ._shape import _ShapeLike as _ShapeLike
  142: 
  143: #
  144: from ._ufunc import _GUFunc_Nin2_Nout1 as _GUFunc_Nin2_Nout1
  145: from ._ufunc import _UFunc_Nin1_Nout1 as _UFunc_Nin1_Nout1
  146: from ._ufunc import _UFunc_Nin1_Nout2 as _UFunc_Nin1_Nout2
  147: from ._ufunc import _UFunc_Nin2_Nout1 as _UFunc_Nin2_Nout1
  148: from ._ufunc import _UFunc_Nin2_Nout2 as _UFunc_Nin2_Nout2
