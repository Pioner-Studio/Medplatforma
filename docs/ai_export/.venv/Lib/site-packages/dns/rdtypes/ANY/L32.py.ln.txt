    1: # Copyright (C) Dnspython Contributors, see LICENSE for text of ISC license
    2: 
    3: import struct
    4: 
    5: import dns.immutable
    6: import dns.rdata
    7: 
    8: 
    9: @dns.immutable.immutable
   10: class L32(dns.rdata.Rdata):
   11:     """L32 record"""
   12: 
   13:     # see: rfc6742.txt
   14: 
   15:     __slots__ = ["preference", "locator32"]
   16: 
   17:     def __init__(self, rdclass, rdtype, preference, locator32):
   18:         super().__init__(rdclass, rdtype)
   19:         self.preference = self._as_uint16(preference)
   20:         self.locator32 = self._as_ipv4_address(locator32)
   21: 
   22:     def to_text(self, origin=None, relativize=True, **kw):
   23:         return f"{self.preference} {self.locator32}"
   24: 
   25:     @classmethod
   26:     def from_text(
   27:         cls, rdclass, rdtype, tok, origin=None, relativize=True, relativize_to=None
   28:     ):
   29:         preference = tok.get_uint16()
   30:         nodeid = tok.get_identifier()
   31:         return cls(rdclass, rdtype, preference, nodeid)
   32: 
   33:     def _to_wire(self, file, compress=None, origin=None, canonicalize=False):
   34:         file.write(struct.pack("!H", self.preference))
   35:         file.write(dns.ipv4.inet_aton(self.locator32))
   36: 
   37:     @classmethod
   38:     def from_wire_parser(cls, rdclass, rdtype, parser, origin=None):
   39:         preference = parser.get_uint16()
   40:         locator32 = parser.get_remaining()
   41:         return cls(rdclass, rdtype, preference, locator32)
