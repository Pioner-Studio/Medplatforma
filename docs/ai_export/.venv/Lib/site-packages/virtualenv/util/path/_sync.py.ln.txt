    1: from __future__ import annotations
    2: 
    3: import logging
    4: import os
    5: import shutil
    6: import sys
    7: from stat import S_IWUSR
    8: 
    9: LOGGER = logging.getLogger(__name__)
   10: 
   11: 
   12: def ensure_dir(path):
   13:     if not path.exists():
   14:         LOGGER.debug("create folder %s", str(path))
   15:         os.makedirs(str(path))
   16: 
   17: 
   18: def ensure_safe_to_do(src, dest):
   19:     if src == dest:
   20:         msg = f"source and destination is the same {src}"
   21:         raise ValueError(msg)
   22:     if not dest.exists():
   23:         return
   24:     if dest.is_dir() and not dest.is_symlink():
   25:         LOGGER.debug("remove directory %s", dest)
   26:         safe_delete(dest)
   27:     else:
   28:         LOGGER.debug("remove file %s", dest)
   29:         dest.unlink()
   30: 
   31: 
   32: def symlink(src, dest):
   33:     ensure_safe_to_do(src, dest)
   34:     LOGGER.debug("symlink %s", _Debug(src, dest))
   35:     dest.symlink_to(src, target_is_directory=src.is_dir())
   36: 
   37: 
   38: def copy(src, dest):
   39:     ensure_safe_to_do(src, dest)
   40:     is_dir = src.is_dir()
   41:     method = copytree if is_dir else shutil.copy
   42:     LOGGER.debug("copy %s", _Debug(src, dest))
   43:     method(str(src), str(dest))
   44: 
   45: 
   46: def copytree(src, dest):
   47:     for root, _, files in os.walk(src):
   48:         dest_dir = os.path.join(dest, os.path.relpath(root, src))
   49:         if not os.path.isdir(dest_dir):
   50:             os.makedirs(dest_dir)
   51:         for name in files:
   52:             src_f = os.path.join(root, name)
   53:             dest_f = os.path.join(dest_dir, name)
   54:             shutil.copy(src_f, dest_f)
   55: 
   56: 
   57: def safe_delete(dest):
   58:     def onerror(func, path, exc_info):  # noqa: ARG001
   59:         if not os.access(path, os.W_OK):
   60:             os.chmod(path, S_IWUSR)
   61:             func(path)
   62:         else:
   63:             raise  # noqa: PLE0704
   64: 
   65:     kwargs = {"onexc" if sys.version_info >= (3, 12) else "onerror": onerror}
   66:     shutil.rmtree(str(dest), ignore_errors=True, **kwargs)
   67: 
   68: 
   69: class _Debug:
   70:     def __init__(self, src, dest) -> None:
   71:         self.src = src
   72:         self.dest = dest
   73: 
   74:     def __str__(self) -> str:
   75:         return f"{'directory ' if self.src.is_dir() else ''}{self.src!s} to {self.dest!s}"
   76: 
   77: 
   78: __all__ = [
   79:     "copy",
   80:     "copytree",
   81:     "ensure_dir",
   82:     "safe_delete",
   83:     "symlink",
   84:     "symlink",
   85: ]
