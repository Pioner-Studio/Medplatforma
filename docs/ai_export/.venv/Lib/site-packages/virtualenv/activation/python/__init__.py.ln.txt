    1: from __future__ import annotations
    2: 
    3: import os
    4: from collections import OrderedDict
    5: 
    6: from virtualenv.activation.via_template import ViaTemplateActivator
    7: 
    8: 
    9: class PythonActivator(ViaTemplateActivator):
   10:     def templates(self):
   11:         yield "activate_this.py"
   12: 
   13:     @staticmethod
   14:     def quote(string):
   15:         return repr(string)
   16: 
   17:     def replacements(self, creator, dest_folder):
   18:         replacements = super().replacements(creator, dest_folder)
   19:         lib_folders = OrderedDict((os.path.relpath(str(i), str(dest_folder)), None) for i in creator.libs)
   20:         lib_folders = os.pathsep.join(lib_folders.keys())
   21:         replacements.update(
   22:             {
   23:                 "__LIB_FOLDERS__": lib_folders,
   24:                 "__DECODE_PATH__": "",
   25:             },
   26:         )
   27:         return replacements
   28: 
   29: 
   30: __all__ = [
   31:     "PythonActivator",
   32: ]
