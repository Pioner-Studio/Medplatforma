    1: from __future__ import annotations
    2: 
    3: from contextlib import suppress
    4: 
    5: from .convert import convert
    6: 
    7: 
    8: def get_env_var(key, as_type, env):
    9:     """
   10:     Get the environment variable option.
   11: 
   12:     :param key: the config key requested
   13:     :param as_type: the type we would like to convert it to
   14:     :param env: environment variables to use
   15:     :return:
   16:     """
   17:     environ_key = f"VIRTUALENV_{key.upper()}"
   18:     if env.get(environ_key):
   19:         value = env[environ_key]
   20: 
   21:         with suppress(Exception):  # note the converter already logs a warning when failures happen
   22:             source = f"env var {environ_key}"
   23:             as_type = convert(value, as_type, source)
   24:             return as_type, source
   25:     return None
   26: 
   27: 
   28: __all__ = [
   29:     "get_env_var",
   30: ]
