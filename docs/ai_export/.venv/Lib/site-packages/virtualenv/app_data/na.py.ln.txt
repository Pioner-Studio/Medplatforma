    1: from __future__ import annotations
    2: 
    3: from contextlib import contextmanager
    4: 
    5: from .base import AppData, ContentStore
    6: 
    7: 
    8: class AppDataDisabled(AppData):
    9:     """No application cache available (most likely as we don't have write permissions)."""
   10: 
   11:     transient = True
   12:     can_update = False
   13: 
   14:     def __init__(self) -> None:
   15:         pass
   16: 
   17:     error = RuntimeError("no app data folder available, probably no write access to the folder")
   18: 
   19:     def close(self):
   20:         """Do nothing."""
   21: 
   22:     def reset(self):
   23:         """Do nothing."""
   24: 
   25:     def py_info(self, path):  # noqa: ARG002
   26:         return ContentStoreNA()
   27: 
   28:     def embed_update_log(self, distribution, for_py_version):  # noqa: ARG002
   29:         return ContentStoreNA()
   30: 
   31:     def extract(self, path, to_folder):  # noqa: ARG002
   32:         raise self.error
   33: 
   34:     @contextmanager
   35:     def locked(self, path):  # noqa: ARG002
   36:         """Do nothing."""
   37:         yield
   38: 
   39:     @property
   40:     def house(self):
   41:         raise self.error
   42: 
   43:     def wheel_image(self, for_py_version, name):  # noqa: ARG002
   44:         raise self.error
   45: 
   46:     def py_info_clear(self):
   47:         """Nothing to clear."""
   48: 
   49: 
   50: class ContentStoreNA(ContentStore):
   51:     def exists(self):
   52:         return False
   53: 
   54:     def read(self):
   55:         """Nothing to read."""
   56:         return
   57: 
   58:     def write(self, content):
   59:         """Nothing to write."""
   60: 
   61:     def remove(self):
   62:         """Nothing to remove."""
   63: 
   64:     @contextmanager
   65:     def locked(self):
   66:         yield
   67: 
   68: 
   69: __all__ = [
   70:     "AppDataDisabled",
   71:     "ContentStoreNA",
   72: ]
