    1: from __future__ import annotations
    2: 
    3: import logging
    4: from tempfile import mkdtemp
    5: 
    6: from virtualenv.util.path import safe_delete
    7: 
    8: from .via_disk_folder import AppDataDiskFolder
    9: 
   10: LOGGER = logging.getLogger(__name__)
   11: 
   12: 
   13: class TempAppData(AppDataDiskFolder):
   14:     transient = True
   15:     can_update = False
   16: 
   17:     def __init__(self) -> None:
   18:         super().__init__(folder=mkdtemp())
   19:         LOGGER.debug("created temporary app data folder %s", self.lock.path)
   20: 
   21:     def reset(self):
   22:         """This is a temporary folder, is already empty to start with."""
   23: 
   24:     def close(self):
   25:         LOGGER.debug("remove temporary app data folder %s", self.lock.path)
   26:         safe_delete(self.lock.path)
   27: 
   28:     def embed_update_log(self, distribution, for_py_version):
   29:         raise NotImplementedError
   30: 
   31: 
   32: __all__ = [
   33:     "TempAppData",
   34: ]
