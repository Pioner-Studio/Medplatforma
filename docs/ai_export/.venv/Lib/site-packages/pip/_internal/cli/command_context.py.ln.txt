    1: from collections.abc import Generator
    2: from contextlib import AbstractContextManager, ExitStack, contextmanager
    3: from typing import TypeVar
    4: 
    5: _T = TypeVar("_T", covariant=True)
    6: 
    7: 
    8: class CommandContextMixIn:
    9:     def __init__(self) -> None:
   10:         super().__init__()
   11:         self._in_main_context = False
   12:         self._main_context = ExitStack()
   13: 
   14:     @contextmanager
   15:     def main_context(self) -> Generator[None, None, None]:
   16:         assert not self._in_main_context
   17: 
   18:         self._in_main_context = True
   19:         try:
   20:             with self._main_context:
   21:                 yield
   22:         finally:
   23:             self._in_main_context = False
   24: 
   25:     def enter_context(self, context_provider: AbstractContextManager[_T]) -> _T:
   26:         assert self._in_main_context
   27: 
   28:         return self._main_context.enter_context(context_provider)
