    1: from __future__ import annotations
    2: 
    3: import logging
    4: import os
    5: 
    6: from pip._vendor.pyproject_hooks import BuildBackendHookCaller, HookMissing
    7: 
    8: from pip._internal.utils.subprocess import runner_with_spinner_message
    9: 
   10: logger = logging.getLogger(__name__)
   11: 
   12: 
   13: def build_wheel_editable(
   14:     name: str,
   15:     backend: BuildBackendHookCaller,
   16:     metadata_directory: str,
   17:     tempd: str,
   18: ) -> str | None:
   19:     """Build one InstallRequirement using the PEP 660 build process.
   20: 
   21:     Returns path to wheel if successfully built. Otherwise, returns None.
   22:     """
   23:     assert metadata_directory is not None
   24:     try:
   25:         logger.debug("Destination directory: %s", tempd)
   26: 
   27:         runner = runner_with_spinner_message(
   28:             f"Building editable for {name} (pyproject.toml)"
   29:         )
   30:         with backend.subprocess_runner(runner):
   31:             try:
   32:                 wheel_name = backend.build_editable(
   33:                     tempd,
   34:                     metadata_directory=metadata_directory,
   35:                 )
   36:             except HookMissing as e:
   37:                 logger.error(
   38:                     "Cannot build editable %s because the build "
   39:                     "backend does not have the %s hook",
   40:                     name,
   41:                     e,
   42:                 )
   43:                 return None
   44:     except Exception:
   45:         logger.error("Failed building editable for %s", name)
   46:         return None
   47:     return os.path.join(tempd, wheel_name)
