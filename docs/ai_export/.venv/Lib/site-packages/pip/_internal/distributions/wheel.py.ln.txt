    1: from __future__ import annotations
    2: 
    3: from typing import TYPE_CHECKING
    4: 
    5: from pip._vendor.packaging.utils import canonicalize_name
    6: 
    7: from pip._internal.distributions.base import AbstractDistribution
    8: from pip._internal.metadata import (
    9:     BaseDistribution,
   10:     FilesystemWheel,
   11:     get_wheel_distribution,
   12: )
   13: 
   14: if TYPE_CHECKING:
   15:     from pip._internal.build_env import BuildEnvironmentInstaller
   16: 
   17: 
   18: class WheelDistribution(AbstractDistribution):
   19:     """Represents a wheel distribution.
   20: 
   21:     This does not need any preparation as wheels can be directly unpacked.
   22:     """
   23: 
   24:     @property
   25:     def build_tracker_id(self) -> str | None:
   26:         return None
   27: 
   28:     def get_metadata_distribution(self) -> BaseDistribution:
   29:         """Loads the metadata from the wheel file into memory and returns a
   30:         Distribution that uses it, not relying on the wheel file or
   31:         requirement.
   32:         """
   33:         assert self.req.local_file_path, "Set as part of preparation during download"
   34:         assert self.req.name, "Wheels are never unnamed"
   35:         wheel = FilesystemWheel(self.req.local_file_path)
   36:         return get_wheel_distribution(wheel, canonicalize_name(self.req.name))
   37: 
   38:     def prepare_distribution_metadata(
   39:         self,
   40:         build_env_installer: BuildEnvironmentInstaller,
   41:         build_isolation: bool,
   42:         check_build_deps: bool,
   43:     ) -> None:
   44:         pass
