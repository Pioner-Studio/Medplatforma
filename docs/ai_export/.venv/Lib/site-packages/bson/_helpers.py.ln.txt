    1: # Copyright 2021-present MongoDB, Inc.
    2: #
    3: # Licensed under the Apache License, Version 2.0 (the "License");
    4: # you may not use this file except in compliance with the License.
    5: # You may obtain a copy of the License at
    6: #
    7: # http://www.apache.org/licenses/LICENSE-2.0
    8: #
    9: # Unless required by applicable law or agreed to in writing, software
   10: # distributed under the License is distributed on an "AS IS" BASIS,
   11: # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   12: # See the License for the specific language governing permissions and
   13: # limitations under the License.
   14: 
   15: """Setstate and getstate functions for objects with __slots__, allowing
   16: compatibility with default pickling protocol
   17: """
   18: from __future__ import annotations
   19: 
   20: from typing import Any, Mapping
   21: 
   22: 
   23: def _setstate_slots(self: Any, state: Any) -> None:
   24:     for slot, value in state.items():
   25:         setattr(self, slot, value)
   26: 
   27: 
   28: def _mangle_name(name: str, prefix: str) -> str:
   29:     if name.startswith("__"):
   30:         prefix = "_" + prefix
   31:     else:
   32:         prefix = ""
   33:     return prefix + name
   34: 
   35: 
   36: def _getstate_slots(self: Any) -> Mapping[Any, Any]:
   37:     prefix = self.__class__.__name__
   38:     ret = {}
   39:     for name in self.__slots__:
   40:         mangled_name = _mangle_name(name, prefix)
   41:         if hasattr(self, mangled_name):
   42:             ret[mangled_name] = getattr(self, mangled_name)
   43:     return ret
