# complete_role_system_implementation.py
# –ü–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ–ª–µ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã (–∑–∞–¥–∞—á–∏ 6.1-6.5)

import os
import subprocess
import sys
from pathlib import Path


def run_script(script_name, description):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"\n{'='*60}")
    print(f"üöÄ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: {description}")
    print(f"–°–∫—Ä–∏–ø—Ç: {script_name}")
    print("=" * 60)

    try:
        if Path(script_name).exists():
            result = subprocess.run(
                [sys.executable, script_name], capture_output=True, text=True, encoding="utf-8"
            )

            if result.stdout:
                print(result.stdout)
            if result.stderr:
                print("STDERR:", result.stderr)

            if result.returncode == 0:
                print(f"‚úÖ {description} - –£–°–ü–ï–®–ù–û")
                return True
            else:
                print(f"‚ùå {description} - –û–®–ò–ë–ö–ê (–∫–æ–¥: {result.returncode})")
                return False
        else:
            print(f"‚ùå –§–∞–π–ª {script_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è {script_name}: {e}")
        return False


def check_prerequisites():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π...")

    required_files = ["main.py", "templates/base.html", "templates/calendar.html", ".env"]

    missing_files = []
    for file in required_files:
        if not Path(file).exists():
            missing_files.append(file)

    if missing_files:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {missing_files}")
        return False

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    try:
        from dotenv import load_dotenv

        load_dotenv()

        mongo_uri = os.getenv("MONGO_URI")
        if not mongo_uri:
            print("‚ùå MONGO_URI –Ω–µ –∑–∞–¥–∞–Ω –≤ .env")
            return False

        print("‚úÖ –í—Å–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã")
        return True

    except ImportError:
        print("‚ùå python-dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: pip install python-dotenv")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {e}")
        return False


def create_backup():
    """–°–æ–∑–¥–∞—ë–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    print("üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π...")

    backup_dir = Path("backup_before_roles")
    backup_dir.mkdir(exist_ok=True)

    files_to_backup = ["main.py", "templates/base.html", "templates/calendar.html"]

    import shutil

    for file in files_to_backup:
        if Path(file).exists():
            backup_path = backup_dir / Path(file).name
            shutil.copy2(file, backup_path)
            print(f"‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: {file} -> {backup_path}")

    print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {backup_dir}")


def validate_implementation():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏"""
    print("\nüîç –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏...")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å main.py
    try:
        with open("main.py", "r", encoding="utf-8") as f:
            code = f.read()

        compile(code, "main.py", "exec")
        print("‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å main.py –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        checks = [
            ("def role_required(", "–î–µ–∫–æ—Ä–∞—Ç–æ—Ä role_required"),
            ("@role_required", "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞"),
            ("user_role = session.get", "–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –∏–∑ —Å–µ—Å—Å–∏–∏"),
            ("abort(403)", "–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–µ—Ç–∞ –¥–æ—Å—Ç—É–ø–∞"),
        ]

        all_present = True
        for check_text, description in checks:
            if check_text in code:
                print(f"‚úÖ {description}")
            else:
                print(f"‚ùå {description} –ù–ï –ù–ê–ô–î–ï–ù")
                all_present = False

        return all_present

    except SyntaxError as e:
        print(f"‚ùå –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ main.py: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}")
        return False


def create_role_scripts():
    """–°–æ–∑–¥–∞—ë–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–∫—Ä–∏–ø—Ç—ã, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç"""
    print("üìù –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤...")

    # –°–∫—Ä–∏–ø—Ç check_roles_and_fix_access.py
    if not Path("check_roles_and_fix_access.py").exists():
        # –°–æ–∑–¥–∞—ë–º —É–ø—Ä–æ—â—ë–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —Å–∫—Ä–∏–ø—Ç–∞
        script_content = """# check_roles_and_fix_access.py - –±–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–µ–π
import os
from dotenv import load_dotenv
from pymongo import MongoClient

load_dotenv()

def main():
    client = MongoClient(os.getenv("MONGO_URI"))
    db = client[os.getenv("DB_NAME", "medplatforma")]

    print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ===")
    users = list(db.users.find({}, {"login": 1, "role": 1, "full_name": 1}))

    for user in users:
        login = user.get("login", "unknown")
        role = user.get("role", "no_role")
        name = user.get("full_name", "")
        print(f"{login}: {role} ({name})")

    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    main()
"""
        with open("check_roles_and_fix_access.py", "w", encoding="utf-8") as f:
            f.write(script_content)
        print("‚úÖ –°–æ–∑–¥–∞–Ω check_roles_and_fix_access.py")


def print_manual_steps():
    """–í—ã–≤–æ–¥–∏–º —à–∞–≥–∏ –¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("\n" + "=" * 60)
    print("üìã –†–£–ß–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –†–û–õ–ï–í–û–ô –°–ò–°–¢–ï–ú–´")
    print("=" * 60)

    steps = [
        "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: python main.py",
        "2. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä: http://localhost:5000",
        "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ö–æ–¥ –ø–æ–¥ —Ä–∞–∑–Ω—ã–º–∏ —Ä–æ–ª—è–º–∏:",
        "   - admin: –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ä–∞–∑–¥–µ–ª–∞–º",
        "   - registrar: –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –≤—Ä–∞—á–∞–º/—É—Å–ª—É–≥–∞–º/–∫–∞–±–∏–Ω–µ—Ç–∞–º",
        "   - doctor: —Ç–æ–ª—å–∫–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∏ –ø—Ä–æ—Ñ–∏–ª—å",
        "4. –í –∫–∞–ª–µ–Ω–¥–∞—Ä–µ:",
        "   - admin/registrar: –≤–∏–¥—è—Ç –≤—Å–µ –∑–∞–ø–∏—Å–∏",
        "   - doctor: —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –∑–∞–ø–∏—Å–∏",
        "5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∫—Ä—ã—Ç–∏–µ –∫–Ω–æ–ø–æ–∫ –∏ –º–µ–Ω—é –ø–æ —Ä–æ–ª—è–º",
        "6. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤",
    ]

    for step in steps:
        print(step)

    print("\n" + "=" * 60)
    print("üéØ –ö–†–ò–¢–ï–†–ò–ò –£–°–ü–ï–•–ê:")
    print("‚úÖ –í—Å–µ —Ä–æ–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—é—Ç –¥–æ—Å—Ç—É–ø")
    print("‚úÖ –ú–µ–Ω—é —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø–æ —Ä–æ–ª—è–º")
    print("‚úÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç—Å—è –ø–æ —Ä–æ–ª—è–º")
    print("‚úÖ –ù–µ—Ç –æ—à–∏–±–æ–∫ 403/500 –ø—Ä–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º –¥–æ—Å—Ç—É–ø–µ")
    print("=" * 60)


def main():
    print("üîí –ü–û–õ–ù–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø –†–û–õ–ï–í–û–ô –°–ò–°–¢–ï–ú–´")
    print("–ó–∞–¥–∞—á–∏ 6.1-6.5 –∏–∑ —á–µ–∫-–ª–∏—Å—Ç–∞")
    print("=" * 60)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
    if not check_prerequisites():
        print("‚ùå –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!")
        return

    # –°–æ–∑–¥–∞—ë–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏
    create_backup()

    # –°–æ–∑–¥–∞—ë–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
    create_role_scripts()

    # –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
    tasks = [
        ("check_roles_and_fix_access.py", "6.1-6.3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–µ–π –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞"),
        (
            "implement_calendar_role_filtering.py",
            "6.4-6.5: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∏ —Å–∫—Ä—ã—Ç–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤",
        ),
    ]

    success_count = 0
    total_tasks = len(tasks)

    for script, description in tasks:
        if run_script(script, description):
            success_count += 1

    # –í–∞–ª–∏–¥–∞—Ü–∏—è
    print("\n" + "=" * 60)
    print("üîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –í–ê–õ–ò–î–ê–¶–ò–Ø")
    print("=" * 60)

    if validate_implementation():
        print("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
        success_count += 0.5  # –ë–æ–Ω—É—Å –∑–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é
    else:
        print("‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞")

    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢")
    print("=" * 60)

    success_rate = (success_count / total_tasks) * 100

    print(f"–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞—á: {int(success_count)}/{total_tasks}")
    print(f"–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {success_rate:.1f}%")

    if success_rate >= 80:
        print("üéâ –†–û–õ–ï–í–ê–Ø –°–ò–°–¢–ï–ú–ê –£–°–ü–ï–®–ù–û –†–ï–ê–õ–ò–ó–û–í–ê–ù–ê!")
        print("\n–ì–æ—Ç–æ–≤–æ –∫ –ø–µ—Ä–µ—Ö–æ–¥—É –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É:")
        print("üìã –ó–∞–¥–∞—á–∏ 7.1-7.7: –ü–∞—Ü–∏–µ–Ω—Ç—ã CRUD + –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è")
    else:
        print("‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")

    # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ
    print_manual_steps()

    print("\n–°–ª–µ–¥—É—é—â–∏–µ —Ñ–∞–π–ª—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞:")
    print("- python test_roles.py  # —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–æ–ª–µ–π")
    print("- python main.py        # –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")


if __name__ == "__main__":
    main()
